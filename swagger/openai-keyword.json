{"openapi":"3.0.3","functions":[{"method":"get","path":"/_health","name":"_health_get","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"boolean"},"description":"health check port"},{"method":"post","path":"/workflow/run","name":"workflow_run_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"workflowId":{"type":"string","enum":["marketing","student-report"],"title":"Workflow id.","description":"워크플로우 id.\n보통 uuid 여야 하지만 PoC를 위해 두개의 고정된 워크플로우만 있습니다."}},"required":["workflowId"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"workflowId":{"type":"string","enum":["marketing","student-report"],"title":"Workflow id.","description":"워크플로우 id.\n보통 uuid 여야 하지만 PoC를 위해 두개의 고정된 워크플로우만 있습니다."}},"required":["workflowId"]}}}}],"human":[]},"output":{"type":"object","properties":{"workflowRunId":{"type":"string","title":"Workflow run id.","description":"워크플로우 실행 id."}},"required":["workflowRunId"]},"description":"Run workflow"},{"method":"get","path":"/workflow/run/{workflowRunId}","name":"workflow_run_getByWorkflowrunid","strict":true,"parameters":[{"type":"object","properties":{"workflowRunId":{"type":"string"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"workflowRunId":{"type":"string"}}}}],"human":[]},"output":{"type":"object","properties":{"workflowRunId":{"type":"string","title":"Workflow run id.","description":"워크 플로우 실행 id."},"workflowId":{"type":"string","title":"Workflow Id.","description":"워크플로우 id."},"status":{"type":"string","enum":["running","finished","failed"],"title":"running status.","description":"워크 플로우 실행 상태.\n\n- running: 실행 중.\n- finished: 실행 완료.\n- failed: 실행 실패."},"outputs":{"type":"array","items":{"type":"object","properties":{"result":{"title":"노드 실행 결과.","description":"노드 실행 결과."}},"required":["result"]},"title":"노드 실행 결과.","description":"노드 실행 결과."}},"required":["workflowRunId","workflowId","status","outputs"]},"description":"Return status of one workflow run"},{"method":"get","path":"/workflow/runs","name":"workflow_runs_get","strict":true,"parameters":[{"type":"object","properties":{"query":{"type":"object","properties":{"workflowId":{"type":"string","description":"지정되지 않으면 모든 실행을 반환."}},"required":[]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"query":{"type":"object","properties":{"workflowId":{"type":"string","description":"지정되지 않으면 모든 실행을 반환."}},"required":[]}}}}],"human":[]},"output":{"type":"object","properties":{"workflowRuns":{"type":"array","items":{"type":"object","properties":{"workflowRunId":{"type":"string","title":"Workflow run id.","description":"워크 플로우 실행 id."},"workflowId":{"type":"string","title":"Workflow Id.","description":"워크플로우 id."},"status":{"type":"string","enum":["running","finished","failed"],"title":"running status.","description":"워크 플로우 실행 상태.\n\n- running: 실행 중.\n- finished: 실행 완료.\n- failed: 실행 실패."},"outputs":{"type":"array","items":{"type":"object","properties":{"result":{"title":"노드 실행 결과.","description":"노드 실행 결과."}},"required":["result"]},"title":"노드 실행 결과.","description":"노드 실행 결과."}},"required":["workflowRunId","workflowId","status","outputs"]},"title":"워크플로우 실행 목록.","description":"워크플로우 실행 목록."}},"required":["workflowRuns"]},"description":"Return all workflow run information"},{"method":"post","path":"/connector/typeform/workspace","name":"connector_typeform_workspace_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"워크스페이스 이름.","description":"생성할 워크스페이스 이름입니다."}},"required":["name"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"워크스페이스 이름.","description":"생성할 워크스페이스 이름입니다."}},"required":["name"]}}}}],"human":[]},"output":{"type":"object","properties":{"id":{"type":"string","title":"워크스페이스 id.","description":"생성된 워크스페이스 id입니다."},"name":{"type":"string","title":"워크스페이스 이름.","description":"생성된 워크스페이스 이름입니다."},"link":{"type":"string","title":"워크스페이스 링크.","description":"생성된 워크스페이스 링크입니다."}},"required":["id","name","link"]},"description":"타입폼 워크스페이스 생성.\n\n워크스페이스를 생성합니다."},{"method":"delete","path":"/connector/typeform/workspace/{workspaceId}","name":"connector_typeform_workspace_eraseByWorkspaceid","strict":true,"parameters":[{"type":"object","properties":{"workspaceId":{"type":"string","title":"삭제할 워크스페이스 ID","description":" 삭제할 워크스페이스 ID."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"workspaceId":{"type":"string","title":"삭제할 워크스페이스 ID","description":" 삭제할 워크스페이스 ID."}}}}],"human":[]},"description":"타입폼 워크스페이스 삭제.\n\n워크스페이스를 삭제합니다."},{"method":"post","path":"/connector/typeform/get-workspaces","name":"connector_typeform_get_workspaces_post","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"workspace_id":{"type":"string","title":"워크스페이스 id.","description":"읽어온 워크스페이스의 id 입니다."},"name":{"type":"string","title":"워크스페이스 이름.","description":"읽어온 워크스페이스의 이름입니다."},"link":{"type":"string","title":"워크스페이스 링크.","description":"읽어온 워크스페이스의 링크입니다."}},"required":["workspace_id","name","link"]}},"description":"타입폼 워크스페이스 정보 가져오기.\n\n워크스페이스 정보를 가져옵니다."},{"method":"post","path":"/connector/typeform/empty-form","name":"connector_typeform_empty_form_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"폼 제목.","description":"생성할 폼의 제목입니다."}},"required":["name"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"폼 제목.","description":"생성할 폼의 제목입니다."}},"required":["name"]}}}}],"human":[]},"output":{"type":"object","properties":{"id":{"type":"string","title":"폼 id.","description":"생성된 폼의 id입니다."},"name":{"type":"string","title":"폼 이름.","description":"생성된 폼의 이름입니다."},"type":{"type":"string","title":"폼 타입.","description":"생성된 폼의 타입입니다."}},"required":["id","name","type"]},"description":"타입폼 빈 폼 생성.\n\n워크스페이스에 빈 폼을 생성합니다."},{"method":"post","path":"/connector/typeform/get-forms","name":"connector_typeform_get_forms_post","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"formId":{"type":"string","title":"폼 id.","description":"읽어온 폼의 id입니다."},"name":{"type":"string","title":"폼 이름.","description":"읽어온 폼의 이름입니다."}},"required":["formId","name"]}},"description":"타입폼 폼 목록 가져오기.\n\n워크스페이스에 존재하는 폼 목록을 가져옵니다."},{"method":"post","path":"/connector/typeform/duplicate-form","name":"connector_typeform_duplicate_form_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"formId":{"type":"string","title":"폼.","description":"복제할 폼."},"workspaceLink":{"type":"string","title":"워크스페이스 링크.","description":"폼을 복제할 워크스페이스 링크입니다."},"name":{"type":"string","title":"폼 이름.","description":"복제하여 생성할 폼의 이름입니다."}},"required":["formId","workspaceLink","name"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"formId":{"type":"string","title":"폼.","description":"복제할 폼."},"workspaceLink":{"type":"string","title":"워크스페이스 링크.","description":"폼을 복제할 워크스페이스 링크입니다."},"name":{"type":"string","title":"폼 이름.","description":"복제하여 생성할 폼의 이름입니다."}},"required":["formId","workspaceLink","name"]}}}}],"human":[]},"output":{"type":"object","properties":{"id":{"type":"string","title":"폼 id.","description":"생성된 폼의 id입니다."},"name":{"type":"string","title":"폼 이름.","description":"생성된 폼의 이름입니다."},"type":{"type":"string","title":"폼 타입.","description":"생성된 폼의 타입입니다."}},"required":["id","name","type"]},"description":"타입폼 폼 복사.\n\n워크스페이스에 존재하는 폼을 복사합니다."},{"method":"get","path":"/connector/typeform/forms/{formId}/fields","name":"connector_typeform_forms_fields_getByFormid","strict":true,"parameters":[{"type":"object","properties":{"formId":{"type":"string","title":"업데이트 할 폼의 ID","description":" 업데이트 할 폼의 ID."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"formId":{"type":"string","title":"업데이트 할 폼의 ID","description":" 업데이트 할 폼의 ID."}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"필드 id.","description":"값을 업데이트 할 필드의 id."},"name":{"type":"string","title":"필드 명.","description":"값을 업데이트 할 필드의 명."}},"required":["id","name"]}},"description":"타입폼 업데이트 할 폼의 필드 정보 가져오기.\n\n랭킹, 드롭다운, 다중선택 질문의 옵션을 업데이트 할 폼의 필드 정보 가져오기."},{"method":"put","path":"/connector/typeform/forms/{formId}","name":"connector_typeform_forms_putByFormid","strict":true,"parameters":[{"type":"object","properties":{"formId":{"type":"string"},"body":{"type":"object","properties":{"fieldId":{"type":"string","title":"업데이트 할 필드.","description":"값을 업데이트 할 필드."},"value":{"type":"array","items":{"type":"string"},"title":"필드 값.","description":"업데이트 할 필드의 값입니다."}},"required":["fieldId","value"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"formId":{"type":"string"},"body":{"type":"object","properties":{"fieldId":{"type":"string","title":"업데이트 할 필드.","description":"값을 업데이트 할 필드."},"value":{"type":"array","items":{"type":"string"},"title":"필드 값.","description":"업데이트 할 필드의 값입니다."}},"required":["fieldId","value"]}}}}],"human":[]},"output":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","title":"필드 값.","description":"업데이트 된 필드의 값입니다."},"id":{"type":"string","title":"필드 id.","description":"값을 업데이트 할 필드의 id."},"name":{"type":"string","title":"필드 명.","description":"값을 업데이트 할 필드의 명."}},"required":["value","id","name"]},"title":"값이 업데이트 된 필드 정보.","description":"값이 업데이트 된 필드의 정보입니다."},"formId":{"type":"string","title":"폼 id.","description":"읽어온 폼의 id입니다."},"name":{"type":"string","title":"폼 이름.","description":"읽어온 폼의 이름입니다."}},"required":["fields","formId","name"]},"description":"타입폼 폼 필드 옵션 업데이트.\n\n랭킹, 드롭다운, 다중선택 질문의 옵션을 업데이트합니다."},{"method":"delete","path":"/connector/typeform/forms/{formId}","name":"connector_typeform_forms_eraseByFormid","strict":true,"parameters":[{"type":"object","properties":{"formId":{"type":"string","title":"삭제할 폼 ID","description":" 삭제할 폼 ID."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"formId":{"type":"string","title":"삭제할 폼 ID","description":" 삭제할 폼 ID."}}}}],"human":[]},"description":"타입폼 폼 삭제.\n\n폼을 삭제합니다."},{"method":"post","path":"/connector/extract/keyword","name":"connector_extract_keyword_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]},"context":{"title":"문맥 정보","description":"키워드 추출을 위한 문맥 정보"}},"required":["referenceContent","context"],"title":"키워드 추출을 위한 입력"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]},"context":{"title":"문맥 정보","description":"키워드 추출을 위한 문맥 정보"}},"required":["referenceContent","context"],"title":"키워드 추출을 위한 입력"}}}}],"human":[]},"output":{"type":"object","properties":{"keyword":{"type":"string","description":"추출된 키워드"}},"required":["keyword"]},"description":"키워드 추출.\n\n주어진 입력과 관련 높은 키워드를 추출합니다.\n\n마케팅 카피를 생성할 때 사용하는 커넥터 입니다."},{"method":"post","path":"/connector/rank/rank","name":"connector_rank_rank_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"score":{"type":"number","title":"점수","description":"아이템의 점수"}},"required":["score"],"title":"정렬할 아이템"},"title":"아이템 목록","description":"정렬할 아이템 목록"}},"required":["items"],"title":"정렬을 위한 입력"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"score":{"type":"number","title":"점수","description":"아이템의 점수"}},"required":["score"],"title":"정렬할 아이템"},"title":"아이템 목록","description":"정렬할 아이템 목록"}},"required":["items"],"title":"정렬을 위한 입력"}}}}],"human":[]},"output":{"type":"object","properties":{"rankedIndices":{"type":"array","items":{"type":"number"},"title":"정렬된 아이템의 인덱스 배열","description":"정렬된 아이템의 인덱스 배열"}},"required":["rankedIndices"],"title":"정렬된 결과"},"description":"조건 정렬.\n\n주어진 아이템의 배열을 점수가 높은 순서대로 정렬합니다."},{"method":"post","path":"/connector/marketing-copy/generate-copy","name":"connector_marketing_copy_generate_copy_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"object","properties":{"keyword":{"type":"string","description":"추출된 키워드"}},"required":["keyword"]},"marketingPurpose":{"type":"object","properties":{"purpose":{"type":"string","enum":["sign_up","purchase","visit"],"title":"마케팅 목적.","description":"마케팅을 하려는 목적입니다.\n\n가능한 값으로는 sign_up, purchase, visit 3가지만 가능합니다."},"product_name":{"type":"string","title":"마케팅 할 상품명.","description":"마케팅을 할 상품명입니다."},"unique_selling_point":{"type":"array","items":{"type":"string"},"title":"상품의 셀링 포인트.","description":"상품의 셀링 포인트입니다."},"user_benefit":{"type":"array","items":{"type":"string"},"title":"마케팅 하려는 제품의 베네핏.","description":"마케팅 하려는 제품의 베네핏입니다."}},"required":["purpose","product_name","unique_selling_point","user_benefit"]},"distributionChannel":{"type":"object","properties":{"channel":{"type":"string","enum":["youtube","facebook","kakao","instagram_feed","instagram_story","naver"],"title":"마케팅 카피를 사용할 채널.","description":"마케팅 카피를 사용할 채널 입니다.\n\n가능한 값으로 facebook, instagram_feed, instagram_story, youtube, naver, kakao 6가지만 가능합니다."},"components":{"type":"array","items":{"type":"string","enum":["title","cta","subtitle"]},"title":"마케팅 카피를 사용할 채널에서 가져올 정보.","description":"마케팅 카피를 사용할 채널에서 가져올 정보입니다.\n\n가능한 값으로 title, cta, subtitle 3가지만 가능합니다."}},"required":["channel","components"]},"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]}},"required":["keyword","marketingPurpose","distributionChannel","referenceContent"],"title":"마케팅 카피 생성을 위한 입력"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"object","properties":{"keyword":{"type":"string","description":"추출된 키워드"}},"required":["keyword"]},"marketingPurpose":{"type":"object","properties":{"purpose":{"type":"string","enum":["sign_up","purchase","visit"],"title":"마케팅 목적.","description":"마케팅을 하려는 목적입니다.\n\n가능한 값으로는 sign_up, purchase, visit 3가지만 가능합니다."},"product_name":{"type":"string","title":"마케팅 할 상품명.","description":"마케팅을 할 상품명입니다."},"unique_selling_point":{"type":"array","items":{"type":"string"},"title":"상품의 셀링 포인트.","description":"상품의 셀링 포인트입니다."},"user_benefit":{"type":"array","items":{"type":"string"},"title":"마케팅 하려는 제품의 베네핏.","description":"마케팅 하려는 제품의 베네핏입니다."}},"required":["purpose","product_name","unique_selling_point","user_benefit"]},"distributionChannel":{"type":"object","properties":{"channel":{"type":"string","enum":["youtube","facebook","kakao","instagram_feed","instagram_story","naver"],"title":"마케팅 카피를 사용할 채널.","description":"마케팅 카피를 사용할 채널 입니다.\n\n가능한 값으로 facebook, instagram_feed, instagram_story, youtube, naver, kakao 6가지만 가능합니다."},"components":{"type":"array","items":{"type":"string","enum":["title","cta","subtitle"]},"title":"마케팅 카피를 사용할 채널에서 가져올 정보.","description":"마케팅 카피를 사용할 채널에서 가져올 정보입니다.\n\n가능한 값으로 title, cta, subtitle 3가지만 가능합니다."}},"required":["channel","components"]},"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]}},"required":["keyword","marketingPurpose","distributionChannel","referenceContent"],"title":"마케팅 카피 생성을 위한 입력"}}}}],"human":[]},"output":{"type":"object","properties":{"title":{"type":"string","title":"마케팅 카피의 제목.","description":"마케팅 카피의 제목입니다."},"cta":{"type":"string","title":"마케팅 카피의 CTA 문구.","description":"마케팅 카피의 CTA 문구입니다."},"subtitle":{"type":"string","title":"마케팅 카피의 설명.","description":"마케팅 카피의 설명입니다."}}},"description":"마케팅 카피 생성.\n\n주어진 입력으로부터 마케팅 카피를 생성합니다."},{"method":"post","path":"/connector/marketing-copy/generate-copy-image","name":"connector_marketing_copy_generate_copy_image_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"copy":{"type":"object","properties":{"title":{"type":"string","title":"마케팅 카피의 제목.","description":"마케팅 카피의 제목입니다."},"cta":{"type":"string","title":"마케팅 카피의 CTA 문구.","description":"마케팅 카피의 CTA 문구입니다."},"subtitle":{"type":"string","title":"마케팅 카피의 설명.","description":"마케팅 카피의 설명입니다."}}},"keyword":{"type":"object","properties":{"keyword":{"type":"string","description":"추출된 키워드"}},"required":["keyword"]},"marketingPurpose":{"type":"object","properties":{"purpose":{"type":"string","enum":["sign_up","purchase","visit"],"title":"마케팅 목적.","description":"마케팅을 하려는 목적입니다.\n\n가능한 값으로는 sign_up, purchase, visit 3가지만 가능합니다."},"product_name":{"type":"string","title":"마케팅 할 상품명.","description":"마케팅을 할 상품명입니다."},"unique_selling_point":{"type":"array","items":{"type":"string"},"title":"상품의 셀링 포인트.","description":"상품의 셀링 포인트입니다."},"user_benefit":{"type":"array","items":{"type":"string"},"title":"마케팅 하려는 제품의 베네핏.","description":"마케팅 하려는 제품의 베네핏입니다."}},"required":["purpose","product_name","unique_selling_point","user_benefit"]},"distributionChannel":{"type":"object","properties":{"channel":{"type":"string","enum":["youtube","facebook","kakao","instagram_feed","instagram_story","naver"],"title":"마케팅 카피를 사용할 채널.","description":"마케팅 카피를 사용할 채널 입니다.\n\n가능한 값으로 facebook, instagram_feed, instagram_story, youtube, naver, kakao 6가지만 가능합니다."},"components":{"type":"array","items":{"type":"string","enum":["title","cta","subtitle"]},"title":"마케팅 카피를 사용할 채널에서 가져올 정보.","description":"마케팅 카피를 사용할 채널에서 가져올 정보입니다.\n\n가능한 값으로 title, cta, subtitle 3가지만 가능합니다."}},"required":["channel","components"]},"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]}},"required":["copy","keyword","marketingPurpose","distributionChannel","referenceContent"],"title":"마케팅 카피 이미지 생성을 위한 입력"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"copy":{"type":"object","properties":{"title":{"type":"string","title":"마케팅 카피의 제목.","description":"마케팅 카피의 제목입니다."},"cta":{"type":"string","title":"마케팅 카피의 CTA 문구.","description":"마케팅 카피의 CTA 문구입니다."},"subtitle":{"type":"string","title":"마케팅 카피의 설명.","description":"마케팅 카피의 설명입니다."}}},"keyword":{"type":"object","properties":{"keyword":{"type":"string","description":"추출된 키워드"}},"required":["keyword"]},"marketingPurpose":{"type":"object","properties":{"purpose":{"type":"string","enum":["sign_up","purchase","visit"],"title":"마케팅 목적.","description":"마케팅을 하려는 목적입니다.\n\n가능한 값으로는 sign_up, purchase, visit 3가지만 가능합니다."},"product_name":{"type":"string","title":"마케팅 할 상품명.","description":"마케팅을 할 상품명입니다."},"unique_selling_point":{"type":"array","items":{"type":"string"},"title":"상품의 셀링 포인트.","description":"상품의 셀링 포인트입니다."},"user_benefit":{"type":"array","items":{"type":"string"},"title":"마케팅 하려는 제품의 베네핏.","description":"마케팅 하려는 제품의 베네핏입니다."}},"required":["purpose","product_name","unique_selling_point","user_benefit"]},"distributionChannel":{"type":"object","properties":{"channel":{"type":"string","enum":["youtube","facebook","kakao","instagram_feed","instagram_story","naver"],"title":"마케팅 카피를 사용할 채널.","description":"마케팅 카피를 사용할 채널 입니다.\n\n가능한 값으로 facebook, instagram_feed, instagram_story, youtube, naver, kakao 6가지만 가능합니다."},"components":{"type":"array","items":{"type":"string","enum":["title","cta","subtitle"]},"title":"마케팅 카피를 사용할 채널에서 가져올 정보.","description":"마케팅 카피를 사용할 채널에서 가져올 정보입니다.\n\n가능한 값으로 title, cta, subtitle 3가지만 가능합니다."}},"required":["channel","components"]},"referenceContent":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]}},"required":["copy","keyword","marketingPurpose","distributionChannel","referenceContent"],"title":"마케팅 카피 이미지 생성을 위한 입력"}}}}],"human":[]},"output":{"type":"object","properties":{"imageUrl":{"type":"string","format":"uri","contentMediaType":"image/*","title":"마케팅 카피 시안의 이미지 URL.","description":"생성된 마케팅 카피 시안의 이미지 URL입니다."}},"required":["imageUrl"]},"description":"마케팅 카피 이미지 생성.\n\n주어진 입력으로부터 마케팅 카피 이미지를 생성합니다."},{"method":"get","path":"/connector/aws/file/upload-url","name":"connector_aws_file_upload_url_get","strict":true,"parameters":[{"type":"object","properties":{"query":{"type":"object","properties":{"extension":{"type":"string","description":"파일 확장자입니다."}},"required":["extension"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"query":{"type":"object","properties":{"extension":{"type":"string","description":"파일 확장자입니다."}},"required":["extension"]}}}}],"human":[]},"output":{"type":"object","properties":{"uuid":{"type":"string","format":"uuid","title":"파일 uuid","description":"파일 uuid입니다."},"uploadUrl":{"type":"string","title":"업로드 url","description":"파일을 업로드하기 위한 url입니다."},"urlExpTsMillis":{"type":"number","title":"url 만료 시간","description":"url 만료 시간입니다."}},"required":["uuid","uploadUrl","urlExpTsMillis"]},"description":"파일 업로드 URL 생성.\n\n파일 업로드를 하기 위해 필요한 URL을 생성합니다."},{"method":"post","path":"/connector/student-report-generator","name":"connector_student_report_generator_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"consideration":{"type":"string","title":"고려사항.","description":"생기부 데이터 생성시 LLM에게 전달할 고려사항입니다."},"outputs":{"type":"array","items":{"type":"object","properties":{"field_name":{"type":"string","title":"LLM으로 부터 생성될 필드명.","description":"LLM으로 부터 생성될 필드명입니다."},"field_description":{"type":"string","title":"필드에 대한 설명.","description":"필드에 대한 설명 및 LLM이 해당 필드를 어떻게 채울지에 대한 가이드."},"example":{"type":"string","title":"필드에 대한 예시.","description":"필드에 대한 예시입니다."}},"required":["field_name","field_description","example"]},"title":"생성될 생기부 데이터 구조.","description":"생성될 생기부 데이터 구조 입니다."},"reference_data":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"참고자료 데이터.","description":"생기부 데이터 생성시 참고할 표의 데이터입니다."}},"required":["consideration","outputs","reference_data"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"consideration":{"type":"string","title":"고려사항.","description":"생기부 데이터 생성시 LLM에게 전달할 고려사항입니다."},"outputs":{"type":"array","items":{"type":"object","properties":{"field_name":{"type":"string","title":"LLM으로 부터 생성될 필드명.","description":"LLM으로 부터 생성될 필드명입니다."},"field_description":{"type":"string","title":"필드에 대한 설명.","description":"필드에 대한 설명 및 LLM이 해당 필드를 어떻게 채울지에 대한 가이드."},"example":{"type":"string","title":"필드에 대한 예시.","description":"필드에 대한 예시입니다."}},"required":["field_name","field_description","example"]},"title":"생성될 생기부 데이터 구조.","description":"생성될 생기부 데이터 구조 입니다."},"reference_data":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"참고자료 데이터.","description":"생기부 데이터 생성시 참고할 표의 데이터입니다."}},"required":["consideration","outputs","reference_data"]}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"생성된 생기부 데이터.","description":"생성된 생기부 데이터입니다."}},"required":["data"]},"description":"학생 생활 기록부 생성.\n\n입력된 정보를 바탕으로 학생 생활 기록부를 생성합니다."},{"method":"post","path":"/connector/student-report-generator/row","name":"connector_student_report_generator_row_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"consideration":{"type":"string","title":"고려사항.","description":"생기부 데이터 생성시 LLM에게 전달할 고려사항입니다."},"output_structure":{"type":"object","properties":{"field_name":{"type":"string","title":"LLM으로 부터 생성될 필드명.","description":"LLM으로 부터 생성될 필드명입니다."},"field_description":{"type":"string","title":"필드에 대한 설명.","description":"필드에 대한 설명 및 LLM이 해당 필드를 어떻게 채울지에 대한 가이드."},"example":{"type":"string","title":"필드에 대한 예시.","description":"필드에 대한 예시입니다."}},"required":["field_name","field_description","example"]},"reference_data":{"type":"object","properties":{},"additionalProperties":{"type":"string"}}},"required":["consideration","output_structure","reference_data"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"consideration":{"type":"string","title":"고려사항.","description":"생기부 데이터 생성시 LLM에게 전달할 고려사항입니다."},"output_structure":{"type":"object","properties":{"field_name":{"type":"string","title":"LLM으로 부터 생성될 필드명.","description":"LLM으로 부터 생성될 필드명입니다."},"field_description":{"type":"string","title":"필드에 대한 설명.","description":"필드에 대한 설명 및 LLM이 해당 필드를 어떻게 채울지에 대한 가이드."},"example":{"type":"string","title":"필드에 대한 예시.","description":"필드에 대한 예시입니다."}},"required":["field_name","field_description","example"]},"reference_data":{"type":"object","properties":{},"additionalProperties":{"type":"string"}}},"required":["consideration","output_structure","reference_data"]}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"object","properties":{},"additionalProperties":{"type":"string"}}},"required":["data"]},"description":"학생 생활 기록부 생성.\n\n입력된 정보를 바탕으로 학생 생활 기록부를 생성합니다."},{"method":"post","path":"/connector/rag/analyze","name":"connector_rag_analyze_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","format":"uri","contentMediaType":"application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.hancom.hwp, text/plain, text/html","title":"파일 또는 링크","description":"분석할 파일 또는 링크"}},"required":["url"],"title":"RAG 분석을 위해 필요한 정보"},"description":"분석할 파일 정보."}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","format":"uri","contentMediaType":"application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.hancom.hwp, text/plain, text/html","title":"파일 또는 링크","description":"분석할 파일 또는 링크"}},"required":["url"],"title":"RAG 분석을 위해 필요한 정보"},"description":"분석할 파일 정보."}}}}]},"output":{"type":"object","properties":{"chatId":{"type":"string","title":"chat id.","description":"RAG 생성 결과물에 필요한 chat id.\nRAG로 분석된 파일에 대해 채팅 결과물을 생성하기 위해 분석된 파일에 대한 chat id를 반환합니다.\n여러 개의 파일을 분석시키고 같은 채팅에서 여러 파일에 대한 결과물을 생성하기 위해서는 같은 chat id가 필요합니다."}},"required":["chatId"],"title":"RAG 분석 결과물"},"description":"RAG 분석 요청.\n\n입력된 파일에 대해 RAG 분석을 요청합니다.\n\n여러 개의 연구논문을 비교하는 챗봇을 제작할 때 사용될 수 있는 커넥터 입니다."},{"method":"get","path":"/connector/rag/{jobId}/status","name":"connector_rag_status_getByJobid","strict":true,"parameters":[{"type":"object","properties":{"jobId":{"type":"string"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"jobId":{"type":"string"}}}}],"human":[]},"output":{"type":"object","properties":{"status":{"type":"string","enum":["COMPLETED","FAILED","RUNNING"],"title":"분석 상태.","description":"분석 상태입니다.\n\n- RUNNING: 분석 중\n- COMPLETED: 분석 완료\n- FAILED: 분석 실패"}},"required":["status"],"title":"RAG 분석 상태"},"description":"RAG 분석 상태 조회.\n\n분석 진행 상태를 조회합니다."},{"method":"post","path":"/connector/rag/generate/{chatId}","name":"connector_rag_generate_postByChatid","strict":true,"parameters":[{"type":"object","properties":{"chatId":{"type":"string"},"body":{"type":"object","properties":{"query":{"type":"string","title":"유저 발화.","description":"유저의 발화입니다."}},"required":["query"],"title":"RAG를 통한 채팅을 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"chatId":{"type":"string"},"body":{"type":"object","properties":{"query":{"type":"string","title":"유저 발화.","description":"유저의 발화입니다."}},"required":["query"],"title":"RAG를 통한 채팅을 위해 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"answer":{"type":"string","title":"발화에 대한 응답.","description":"RAG 기반 생성 요청에 대한 응답입니다."}},"required":["answer"],"title":"RAG를 통한 채팅 결과"},"description":"RAG 기반 결과물 생성.\n\nRAG 분석을 기반으로 요청받은 결과물을 생성합니다.\n\n여러 개의 연구논문을 비교하는 챗봇을 통해 유저가 질문한 내용에 대한 답변을 생성할 때 사용될 수 있는 커넥터 입니다."},{"method":"post","path":"/connector/hwp/parse","name":"connector_hwp_parse_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.hancom.hwp","title":"hwp 파일","description":"파싱할 hwp 파일."}},"required":["fileUrl"],"title":"hwp 파일 파싱을 위한 정보"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.hancom.hwp","title":"hwp 파일","description":"파싱할 hwp 파일."}},"required":["fileUrl"],"title":"hwp 파일 파싱을 위한 정보"}}}}]},"output":{"type":"object","properties":{"text":{"type":"string","title":"텍스트","description":"파싱된 hwp 파일의 텍스트"}},"required":["text"],"title":"hwp 파일 파싱 결과"},"description":"Hwp 파일 파싱.\n\nhwp 파일을 파싱합니다."},{"method":"post","path":"/connector/excel/read","name":"connector_excel_read_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"},"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"sheet 이름","description":"읽어올 sheet 이름"}},"required":["fileUrl"],"title":"파일 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"sheet 이름","description":"읽어올 sheet 이름"}},"required":[],"title":"파일 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"}},"required":["fileUrl"],"title":"파일 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"title":"읽어온 엑셀 행 데이터","additionalProperties":{}},"title":"엑셀 시트 데이터"}},"required":["data"],"title":"엑셀 파일 읽기 결과"},"description":"엑셀 파일 안의 내용 가져오기.\n\n입력된 파일 정보를 바탕으로 해당 엑셀 파일의 내용을 가져옵니다."},{"method":"post","path":"/connector/excel/worksheet","name":"connector_excel_worksheet_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 워크 시트 리스트를 가져올 파일"}},"required":["fileUrl"],"title":"파일 정보"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 워크 시트 리스트를 가져올 파일"}},"required":["fileUrl"],"title":"파일 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"sheetName":{"type":"string","title":"sheet 이름","description":"가져온 워크 시트의 이름"},"id":{"type":"number","title":"sheet id","description":"가져온 워크 시트의 id."}},"required":["sheetName","id"]},"title":"sheet 리스트 데이터"}},"required":["data"],"title":"가져온 워크 시트 리스트"},"description":"액셀 워크 시트 목록 가져오기.\n\n입력된 파일 url에 존재하는 엑셀 워크 시트 목록을 가져옵니다."},{"method":"post","path":"/connector/excel/rows","name":"connector_excel_rows_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 행을 추가할 파일."},"data":{"type":"array","items":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T","additionalProperties":{}},"title":"추가할 엑셀 행 데이터","description":"key가 header 이름이고 value가 해당 행의 값인 객체의 배열"},"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"엑셀 시트 이름","description":"엑셀 행을 추가할 시트 이름\n입력이 들어오지 않을 시 기본으로 첫번째 sheet를 대상으로 동작합니다."}},"required":["data"],"title":"데이터 추가를 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T","additionalProperties":{}},"title":"추가할 엑셀 행 데이터","description":"key가 header 이름이고 value가 해당 행의 값인 객체의 배열"},"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"엑셀 시트 이름","description":"엑셀 행을 추가할 시트 이름\n입력이 들어오지 않을 시 기본으로 첫번째 sheet를 대상으로 동작합니다."}},"required":["data"],"title":"데이터 추가를 위한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 행을 추가할 파일."}},"required":[],"title":"데이터 추가를 위한 정보"}}}}]},"output":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"생성된 엑셀 파일 url"}},"required":["fileUrl"],"title":"엑셀 행 추가 결과"},"description":"액셀 데이터 추가.\n\n데이터를 엑셀 시트에 추가합니다.\n\nWhen adding data to Excel, sheet creation precedes if it is a sheet that does not exist yet.\nTherefore, this feature can also be used for sheet creation.\nIf you want to create a sheet only and create an empty file without any data,\nyou just need to specify the name of the sheet without any data.\n\nWhen adding rows to an already existing sheet,\nit is supposed to be added to the lower line, so it is recommended to check the data before adding it.\nIf you provide fileUrl, you can modify it after you work on it. After modification, the file will be issued as a new link."},{"method":"post","path":"/connector/excel","name":"connector_excel_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"엑셀 시트 이름","description":"엑셀 행을 추가할 시트 이름\n입력이 들어오지 않을 시 기본으로 첫번째 sheet를 대상으로 동작합니다."}}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true,"title":"엑셀 시트 이름","description":"엑셀 행을 추가할 시트 이름\n입력이 들어오지 않을 시 기본으로 첫번째 sheet를 대상으로 동작합니다."}}}}}}],"human":[]},"output":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"생성된 엑셀 파일 url"}},"required":["fileUrl"],"title":"엑셀 행 추가 결과"},"description":"Add Excel files and sheet\n\nCreate an Excel file and get the link back.\nYou can also forward this link to the following connector to reflect further modifications.\nWhen creating a sheet with this feature, the default name 'Sheet1' is created if the sheet name is not provided."},{"method":"post","path":"/connector/google-docs","name":"connector_google_docs_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"구글 docs 제목.","description":"생성할 docs의 제목입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["title","secretKey"],"title":"구글 docs 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"구글 docs 제목.","description":"생성할 docs의 제목입니다."}},"required":["title"],"title":"구글 docs 생성에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 docs 생성에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"생성된 docs id.","description":"생성된 docs의 id입니다."}},"required":["id"],"title":"구글 docs 생성 결과"},"description":"구글 docs 생성.\n\n구글 docs를 생성합니다."},{"method":"post","path":"/connector/google-docs/permission","name":"connector_google_docs_permission_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"구글 docs id.","description":"접근 권한을 부여할 구글 docs의 id입니다."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"권한을 부여할 사용자의 이메일입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\norganizer: 드라이브에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 드라이브의 구성을 관리할 수 있습니다.\nfileOrganizer: 드라이브의 파일에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 추가하거나 삭제할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"writer\", \"commenter\", \"reader\", \"organizer\", \"fileOrganizer\" 6가지만 가능합니다."},"type":{"type":"string","enum":["user","group","domain","anyone"],"title":"부여할 권한의 타입.","description":"부여할 권한의 타입입니다.\n\n user - 특정 사용자, 이 경우 emailAddress 필드에 권한을 부여할 사용자의 이메일 주소를 지정해야 합니다.\ngroup - 특정 그룹, 이 경우 emailAddress 필드에 권한을 부여할 그룹의 이메일 주소를 지정해야 합니다.\ndomain - 특정 도메인, 이 경우 domain 필드에 권한을 부여할 도메인을 지정해야 합니다.\nanyone - 모든 사용자\n\n가능한 값으로는 \"user\", \"group\", \"domain\", \"anyone\" 4가지만 가능합니다."}},"required":["email","role","type"],"title":"권한 부여 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["documentId","permissions","secretKey"],"title":"구글 docs 권한 부여에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"구글 docs id.","description":"접근 권한을 부여할 구글 docs의 id입니다."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"권한을 부여할 사용자의 이메일입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\norganizer: 드라이브에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 드라이브의 구성을 관리할 수 있습니다.\nfileOrganizer: 드라이브의 파일에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 추가하거나 삭제할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"writer\", \"commenter\", \"reader\", \"organizer\", \"fileOrganizer\" 6가지만 가능합니다."},"type":{"type":"string","enum":["user","group","domain","anyone"],"title":"부여할 권한의 타입.","description":"부여할 권한의 타입입니다.\n\n user - 특정 사용자, 이 경우 emailAddress 필드에 권한을 부여할 사용자의 이메일 주소를 지정해야 합니다.\ngroup - 특정 그룹, 이 경우 emailAddress 필드에 권한을 부여할 그룹의 이메일 주소를 지정해야 합니다.\ndomain - 특정 도메인, 이 경우 domain 필드에 권한을 부여할 도메인을 지정해야 합니다.\nanyone - 모든 사용자\n\n가능한 값으로는 \"user\", \"group\", \"domain\", \"anyone\" 4가지만 가능합니다."}},"required":["email","role","type"],"title":"권한 부여 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트입니다."}},"required":["documentId","permissions"],"title":"구글 docs 권한 부여에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 docs 권한 부여에 필요한 정보"}}}}]},"description":"구글 docs 권한 부여.\n\n구글 docs에 권한을 부여합니다."},{"method":"post","path":"/connector/google-docs/get/{id}","name":"connector_google_docs_get_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"title":"구글 docs 고유 ID","description":" 구글 docs 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"title":"구글 docs 고유 ID","description":" 구글 docs 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"object","properties":{"text":{"type":"string","title":"text 정보.","description":"구글 docs의 text 정보입니다."},"table":{"type":"array","items":{"type":"array","items":{"type":"array","items":{"type":"string"}}},"title":"테이블 정보.","description":"구글 docs의 테이블 정보입니다."}}}},"required":["data"],"title":"구글 docs 조회 결과"},"description":"구글 docs 읽기.\n\n구글 docs의 내용을 읽어옵니다."},{"method":"post","path":"/connector/google-docs/template","name":"connector_google_docs_template_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"templateId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"복제할 구글 docs.","description":"복제할 구글 docs."},"title":{"type":"string","title":"생성할 docs 제목.","description":"복제하여 새로 생성할 docs의 제목입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["templateId","title","secretKey"],"title":"구글 docs 복제에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"templateId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"복제할 구글 docs.","description":"복제할 구글 docs."},"title":{"type":"string","title":"생성할 docs 제목.","description":"복제하여 새로 생성할 docs의 제목입니다."}},"required":["templateId","title"],"title":"구글 docs 복제에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 docs 복제에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"생성된 docs id.","description":"복사된 docs의 id입니다."}},"required":["id"],"title":"구글 docs 복제 결과"},"description":"구글 docs 복사.\n\n이미 존재하는 구글 docs를 복사하여 새로운 구글 docs를 생성합니다."},{"method":"delete","path":"/connector/google-docs/{id}","name":"connector_google_docs_eraseById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"title":"삭제할 구글 docs 고유 ID","description":" 삭제할 구글 docs 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"title":"삭제할 구글 docs 고유 ID","description":" 삭제할 구글 docs 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"구글 docs 삭제.\n\n구글 docs를 삭제합니다."},{"method":"post","path":"/connector/google-docs/get-list","name":"connector_google_docs_get_list_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"구글 docs id.","description":"가져온 구글 docs의 id입니다."},"title":{"type":"string","nullable":true,"title":"구글 docs title.","description":"가져온 구글 docs의 제목입니다."}}},"title":"구글 docs 리스트.","description":"검색된 구글 docs 리스트입니다."}},"required":["data"],"title":"구글 docs 리스트 조회 결과"},"description":"구글 docs 목록 가져오기.\n\n구글 docs 목록을 가져옵니다."},{"method":"post","path":"/connector/google-docs/append","name":"connector_google_docs_append_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"구글 docs.","description":"텍스트를 추가할 구글 docs를 선택합니다."},"text":{"type":"string","title":"텍스트.","description":"추가할 텍스트입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["documentId","text","secretKey"],"title":"구글 docs 텍스트 추가에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"구글 docs.","description":"텍스트를 추가할 구글 docs를 선택합니다."},"text":{"type":"string","title":"텍스트.","description":"추가할 텍스트입니다."}},"required":["documentId","text"],"title":"구글 docs 텍스트 추가에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/documents"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 docs 텍스트 추가에 필요한 정보"}}}}]},"description":"구글 docs 텍스트 추가.\n\n구글 docs에 텍스트를 추가합니다."},{"method":"get","path":"/internal/google","name":"internal_google_get","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"string"},"description":"구글 access token 재발급 요청"},{"method":"post","path":"/connector/google-sheet","name":"connector_google_sheet_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"헤더 정보를 읽어올 시트의 url 주소입니다."},"index":{"type":"number","title":"시트 헤더 index.","description":"읽어올 시트의 헤더 index입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","secretKey"],"title":"구글 시트 헤더 읽기에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"헤더 정보를 읽어올 시트의 url 주소입니다."},"index":{"type":"number","title":"시트 헤더 index.","description":"읽어올 시트의 헤더 index입니다."}},"required":["url"],"title":"구글 시트 헤더 읽기에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 시트 헤더 읽기에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"data":{"title":"시트 데이터.","description":"읽어온 시트의 데이터입니다."}},"required":["data"],"title":"구글 시트 읽기 결과"},"description":"구글 시트 헤더 정보 가져오기.\n\n구글 시트의 헤더 정보를 가져옵니다."},{"method":"post","path":"/connector/google-sheet/create","name":"connector_google_sheet_create_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"시트 제목","description":"생성할 구글 스프레드 시트 제목을 입력해주세요."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["title","secretKey"],"title":"구글 스프레드 시트 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"시트 제목","description":"생성할 구글 스프레드 시트 제목을 입력해주세요."}},"required":["title"],"title":"구글 스프레드 시트 생성에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 스프레드 시트 생성에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"spreadsheetId":{"type":"string","title":"시트 ID","description":"생성된 구글 스프레드 시트의 ID입니다."},"spreadsheetUrl":{"type":"string","title":"시트 URL","description":"생성된 구글 스프레드 시트의 URL입니다."}},"required":["spreadsheetId","spreadsheetUrl"],"title":"구글 스프레드 시트 생성 결과"},"description":"구글 시트 생성하기.\n\n구글 시트를 생성합니다.\n\n생성된 시트는 구글 드라이브 루트 경로에 생성됩니다."},{"method":"post","path":"/connector/google-sheet/permission","name":"connector_google_sheet_permission_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"시트 url.","description":"권한을 부여할 시트의 url 입니다."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"권한을 부여할 사용자의 이메일입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"writer\", \"commenter\", \"reader\" 4가지만 가능합니다."}},"required":["email","role"],"title":"권한 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트 입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","permissions","secretKey"],"title":"구글 시트 권한 부여에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"시트 url.","description":"권한을 부여할 시트의 url 입니다."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"권한을 부여할 사용자의 이메일입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"writer\", \"commenter\", \"reader\" 4가지만 가능합니다."}},"required":["email","role"],"title":"권한 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트 입니다."}},"required":["url","permissions"],"title":"구글 시트 권한 부여에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 시트 권한 부여에 필요한 정보"}}}}]},"description":"구글 시트 권한 부여.\n\n구글 시트에 권한을 부여합니다."},{"method":"post","path":"/connector/google-sheet/header","name":"connector_google_sheet_header_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"헤더를 추가할 시트의 url 입니다."},"index":{"type":"number","title":"시트 index.","description":"추가할 헤더의 index 입니다."},"headerNames":{"type":"array","items":{"type":"string"},"title":"시트에 추가할 헤더 리스트.","description":"시트에 추가할 헤더 리스트 입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","headerNames","secretKey"],"title":"구글 시트 헤더 추가에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"헤더를 추가할 시트의 url 입니다."},"index":{"type":"number","title":"시트 index.","description":"추가할 헤더의 index 입니다."},"headerNames":{"type":"array","items":{"type":"string"},"title":"시트에 추가할 헤더 리스트.","description":"시트에 추가할 헤더 리스트 입니다."}},"required":["url","headerNames"],"title":"구글 시트 헤더 추가에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 시트 헤더 추가에 필요한 정보"}}}}]},"description":"구글 시트 헤더 추가.\n\n구글 시트에 헤더를 추가합니다."},{"method":"post","path":"/connector/google-sheet/worksheet","name":"connector_google_sheet_worksheet_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"읽어올 시트의 url 입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","secretKey"],"title":"워크시트 조회에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"읽어올 시트의 url 입니다."}},"required":["url"],"title":"워크시트 조회에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"워크시트 조회에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"string"},"title":"워크시트 제목 리스트.","description":"읽어온 시트의 제목 리스트 입니다."}},"required":["data"],"title":"워크시트 조회 결과"},"description":"구글 시트 워크시트 목록 가져오기.\n\n구글 워크시트 목록을 가져옵니다."},{"method":"post","path":"/connector/google-sheet/get-rows","name":"connector_google_sheet_get_rows_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"행을 읽어올 시트의 url 입니다."},"workSheetTitle":{"type":"string","title":"작업할 시트 제목.","description":"작업할 시트의 제목입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","workSheetTitle","secretKey"],"title":"구글 시트 행 읽기에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"시트 url.","description":"행을 읽어올 시트의 url 입니다."},"workSheetTitle":{"type":"string","title":"작업할 시트 제목.","description":"작업할 시트의 제목입니다."}},"required":["url","workSheetTitle"],"title":"구글 시트 행 읽기에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 시트 행 읽기에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"title":"구글 시트 행 데이터 정보","additionalProperties":{}},"title":"읽어온 구글 시트 행 데이터.","description":"읽어온 구글 시트 행 데이터입니다."}},"required":["data"],"title":"구글 시트 행 읽기 결과"},"description":"구글 시트 Row 정보 가져오기.\n\n구글 시트의 Row 정보를 가져옵니다."},{"method":"post","path":"/connector/google-calendar/get-list","name":"connector_google_calendar_get_list_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"캘린더 id.","description":"생성된 캘린더의 id 입니다."},"summary":{"type":"string","nullable":true,"title":"캘린더 명.","description":"생성된 캘린더의 이름 입니다."}},"title":"캘린더 생성 결과"}},"description":"구글 캘린더 목록 가져오기.\n\n구글 캘린더 목록을 가져옵니다."},{"method":"post","path":"/connector/google-calendar","name":"connector_google_calendar_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"생성할 캘린더 제목.","description":"생성할 캘린더의 제목 입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["title","secretKey"],"title":"캘린더 생성을 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"생성할 캘린더 제목.","description":"생성할 캘린더의 제목 입니다."}},"required":["title"],"title":"캘린더 생성을 위한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"캘린더 생성을 위한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"캘린더 id.","description":"생성된 캘린더의 id 입니다."},"summary":{"type":"string","nullable":true,"title":"캘린더 명.","description":"생성된 캘린더의 이름 입니다."}},"title":"캘린더 생성 결과"},"description":"구글 캘린더 생성.\n\n구글 캘린더를 생성합니다."},{"method":"delete","path":"/connector/google-calendar/{calendarId}","name":"connector_google_calendar_eraseByCalendarid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"삭제할 캘린더 고유 ID","description":" 삭제할 캘린더 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"삭제할 캘린더 고유 ID","description":" 삭제할 캘린더 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"구글 캘린더 삭제.\n\n캘린더를 삭제합니다."},{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","name":"connector_google_calendar_get_events_postByCalendarid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트 목록을 가져올 캘린더 고유 ID","description":" 이벤트 목록을 가져올 캘린더 고유 ID."},"body":{"type":"object","properties":{"extract_fields":{"type":"array","items":{"type":"string","enum":["summary","description","htmlLink","created","updated","location","organizer","creator","start","end","attendees","reminders","attachments"]},"title":"가져올 데이터 (필드) 정보.","description":"캘린더 데이터에서 가져올 데이터 정보입니다.\n\n가능한 값으로는 \"summary\", \"description\", \"htmlLink\", \"created\", \"updated\", \"location\", \"organizer\", \"creator\", \"start\", \"end\", \"attendees\", \"reminders\", \"attachments\" 11가지만 가능합니다."},"time_max":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"time_min":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"max_results":{"type":"integer","title":"몇 개의 결과를 반환할지.","description":"가져올 이벤트의 최대 개수를 설정합니다."},"orderBy":{"type":"string","enum":["startTime","updated"],"title":"어떤 순서대로 받아올 것인지.","description":"캘린더 이벤트 정렬 순서입니다.\n\n- startTime: 이벤트 시작 시간.\n- updated: 이벤트 업데이트 날짜.\n\n가능한 값으로는 \"startTime\", \"updated\" 2가지만 가능합니다."},"query":{"type":"string","title":"이벤트 검색어.","description":"검색어를 포함하는 이벤트를 검색할 수 있습니다.\n\n제목, 설명, 위치, 참석자 등에서 지정한 검색어를 포함하는 이벤트를 검색할 수 있음"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["extract_fields","time_max","time_min","secretKey"],"title":"이벤트 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트 목록을 가져올 캘린더 고유 ID","description":" 이벤트 목록을 가져올 캘린더 고유 ID."},"body":{"type":"object","properties":{"extract_fields":{"type":"array","items":{"type":"string","enum":["summary","description","htmlLink","created","updated","location","organizer","creator","start","end","attendees","reminders","attachments"]},"title":"가져올 데이터 (필드) 정보.","description":"캘린더 데이터에서 가져올 데이터 정보입니다.\n\n가능한 값으로는 \"summary\", \"description\", \"htmlLink\", \"created\", \"updated\", \"location\", \"organizer\", \"creator\", \"start\", \"end\", \"attendees\", \"reminders\", \"attachments\" 11가지만 가능합니다."},"time_max":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"time_min":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"max_results":{"type":"integer","title":"몇 개의 결과를 반환할지.","description":"가져올 이벤트의 최대 개수를 설정합니다."},"orderBy":{"type":"string","enum":["startTime","updated"],"title":"어떤 순서대로 받아올 것인지.","description":"캘린더 이벤트 정렬 순서입니다.\n\n- startTime: 이벤트 시작 시간.\n- updated: 이벤트 업데이트 날짜.\n\n가능한 값으로는 \"startTime\", \"updated\" 2가지만 가능합니다."},"query":{"type":"string","title":"이벤트 검색어.","description":"검색어를 포함하는 이벤트를 검색할 수 있습니다.\n\n제목, 설명, 위치, 참석자 등에서 지정한 검색어를 포함하는 이벤트를 검색할 수 있음"}},"required":["extract_fields","time_max","time_min"],"title":"이벤트 검색에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"이벤트 검색에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"events":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 id.","description":"이벤트의 고유 id 입니다."},"htmlLink":{"type":"string","format":"uri","nullable":true,"title":"이벤트 링크.","description":"이벤트 링크 입니다."},"color":{"type":"string","nullable":true,"title":"이벤트 색상.","description":"이벤트 색상입니다."},"createdDate":{"type":"string","nullable":true,"title":"이벤트 생성 날짜.","description":"이벤트 생성 날짜입니다."},"updatedDate":{"type":"string","nullable":true,"title":"이벤트 업데이트 날짜.","description":"이벤트 업데이트 날짜입니다."},"title":{"type":"string","nullable":true,"title":"이벤트 제목.","description":"이벤트 제목입니다."},"description":{"type":"string","nullable":true,"title":"이벤트 설명.","description":"이벤트 설명입니다."},"location":{"type":"string","nullable":true,"title":"이벤트 위치.","description":"이벤트 위치입니다."},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 주최자 프로필 id.","description":"이벤트 주최자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 주최자 이름.","description":"이벤트 주최자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 주최자 이메일.","description":"이벤트 주최자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 주최자.","nullable":true,"description":"이벤트 주최자의 정보입니다."},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 생성자 프로필 id.","description":"이벤트 생성자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 생성자 이름.","description":"이벤트 생성자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 생성자 이메일.","description":"이벤트 생성자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 생성자.","description":"이벤트 생성자의 정보입니다.","nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 시작 날짜.","description":"이벤트 시작 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 시작 날짜 타임존.","description":"이벤트 시작 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 시작 날짜.\n\n이벤트의 시작 날짜 정보입니다."},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트 끝나는 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜 타임존.","description":"이벤트 끝나는 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트의 끝나는 날짜 정보입니다."},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이벤트 반복 정보.","description":"이벤트 반복 정보입니다."},"transparency":{"type":"string","nullable":true,"title":"이벤트 바쁨 / 한가함 여부.","description":"이벤트 바쁨 / 한가함 여부입니다."},"guestsCanModify":{"type":"boolean","title":"초대자 이벤트 수정 권한 여부.","description":"초대자 이벤트 수정 권한 여부입니다."},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"디폴트 알림 여부.","description":"디폴트 알림 여부입니다."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true,"title":"알림 방식.","description":"알림 방식입니다."},"minutes":{"type":"number","nullable":true,"title":"알림 보내는 시간.","description":"알림 보내는 시간입니다."}},"title":"알림 설정 정보"},"title":"알림 설정 정보.","description":"알림 설정 정보입니다."}},"title":"이벤트 알림 정보.","nullable":true,"description":"이벤트 알림 정보입니다."},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true,"title":"이벤트 참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"organizer":{"type":"boolean","title":"이벤트 참석자가 주최자인지 여부.","description":"이벤트 참석자가 주최자인지 여부입니다."},"self":{"type":"boolean","title":"일정 사본이 표시되는 캘린더를 나타내는지 여부.","description":"일정 사본이 표시되는 캘린더를 나타내는지 여부입니다."},"responseStatus":{"type":"string","nullable":true,"title":"참석자의 참석 응답 상태.","description":"참석자의 참석 응답 상태입니다."}},"title":"참석자 정보"},"nullable":true,"title":"이벤트 참석자.","description":"이벤트 참석자 정보입니다."},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","nullable":true,"title":"파일 url.","description":"이벤트 첨부파일 url입니다."},"title":{"type":"string","nullable":true,"title":"파일 제목.","description":"첨부파일 제목입니다."},"mimeType":{"type":"string","nullable":true,"title":"인터넷 미디어 유형.","description":"인터넷 미디어 유형입니다."},"iconLink":{"type":"string","format":"uri","nullable":true,"title":"파일 icon 링크.","description":"첨부파일 아이콘 링크입니다."},"fileId":{"type":"string","nullable":true,"title":"파일 id.","description":"첨부파일의 id 입니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일 정보.","description":"이벤트 첨부파일 정보입니다."},"hangoutLink":{"type":"string","nullable":true,"title":"구글 밋 링크.","description":"구글 밋 링크입니다."},"visibility":{"type":"string","nullable":true,"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다."}},"title":"구글 캘린더 이벤트 정보"},"title":"이벤트 리스트.","description":"검색된 캘린더 이벤트 리스트입니다."}},"required":["events"],"title":"캘린더 이벤트 검색 결과"},"description":"구글 캘린더 이벤트 목록 가져오기.\n\n구글 캘린더에 있는 이벤트 목록을 가져옵니다."},{"method":"post","path":"/connector/google-calendar/{calendarId}/quick-event","name":"connector_google_calendar_quick_event_postByCalendarid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트를 추가할 캘린더 고유 ID","description":" 이벤트를 추가할 캘린더 고유 ID."},"body":{"type":"object","properties":{"text":{"type":"string","title":"캘린더 빠른 이벤트 생성 문구.","description":"캘린더 빠른 이벤트 생성 문구입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["text","secretKey"],"title":"빠른 이벤트 생성을 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트를 추가할 캘린더 고유 ID","description":" 이벤트를 추가할 캘린더 고유 ID."},"body":{"type":"object","properties":{"text":{"type":"string","title":"캘린더 빠른 이벤트 생성 문구.","description":"캘린더 빠른 이벤트 생성 문구입니다."}},"required":["text"],"title":"빠른 이벤트 생성을 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"빠른 이벤트 생성을 위해 필요한 정보"}}}}]},"description":"구글 캘린더 빠른 이벤트 추가.\n\n구글 캘린더에 빠른 이벤트를 추가합니다."},{"method":"post","path":"/connector/google-calendar/{calendarId}/event","name":"connector_google_calendar_event_postByCalendarid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트를 추가할 캘린더 고유 ID","description":" 이벤트를 추가할 캘린더 고유 ID."},"body":{"type":"object","properties":{"title":{"type":"string","title":"이벤트 제목.","description":"생성할 이벤트 제목입니다."},"description":{"type":"string","title":"이벤트 설명.","description":"생성할 이벤트 설명입니다."},"location":{"type":"string","title":"이벤트 장소.","description":"생성할 이벤트 장소입니다."},"start":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"end":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"],"title":"이벤트 반복 주기.","description":"이벤트 반복 주기입니다.\n\n- DAILY: 매일\n- WEEKLY: 매주\n- MONTHLY: 매달\n- YEARLY: 매년\n\n가능한 값으로는 \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\" 4가지만 가능합니다."},"repeatNum":{"type":"number","title":"이벤트 반복 횟수.","description":"이벤트 반복 횟수입니다."},"repeatUntil":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"isBusy":{"type":"boolean","title":"바쁨 여부.","description":"이벤트 바쁨 상태 여부입니다."},"isUseDefaultReminder":{"type":"boolean","title":"캘린더 기본 알림 사용 여부.","description":"캘린더 기본 알림 사용 여부입니다."},"remindersType":{"type":"string","enum":["email","popup"],"title":"이벤트 알림 유형.","description":"이벤트 알림 유형입니다.\n\n- popup: 팝업 알림\n- email: 이메일 알림\n\n가능한 값으로는 \"popup\", \"email\" 2가지만 가능합니다."},"minutesBeforeReminders":{"type":"number","title":"일정 시작전 알림 설정 시간.","description":"일정 시작전 알림 설정 시간입니다."},"isConferencing":{"type":"boolean","title":"구글밋 생성 여부.","description":"구글밋 생성 여부입니다."},"visibility":{"type":"string","enum":["default","public","private"],"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다.\n\ndefault - 기본 공개 상태\npublic - 일정이 공개되며 일정 세부정보가 캘린더의 모든 독자에게 표시\nprivate - 일정이 비공개이며 일정 참석자만 일정 세부정보를 볼 수 있음\n\n가능한 값으로는 \"default\", \"public\", \"private\" 3가지만 가능합니다."},"colorId":{"type":"string","title":"이벤트 색상.","description":"이벤트 색상."},"isGuestCanModify":{"type":"boolean","title":"게스트 이벤트 수정 가능 여부.","description":"게스트 이벤트 수정 가능 여부입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["start","end","secretKey"],"title":"이벤트 생성을 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트를 추가할 캘린더 고유 ID","description":" 이벤트를 추가할 캘린더 고유 ID."},"body":{"type":"object","properties":{"title":{"type":"string","title":"이벤트 제목.","description":"생성할 이벤트 제목입니다."},"description":{"type":"string","title":"이벤트 설명.","description":"생성할 이벤트 설명입니다."},"location":{"type":"string","title":"이벤트 장소.","description":"생성할 이벤트 장소입니다."},"start":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"end":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"],"title":"이벤트 반복 주기.","description":"이벤트 반복 주기입니다.\n\n- DAILY: 매일\n- WEEKLY: 매주\n- MONTHLY: 매달\n- YEARLY: 매년\n\n가능한 값으로는 \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\" 4가지만 가능합니다."},"repeatNum":{"type":"number","title":"이벤트 반복 횟수.","description":"이벤트 반복 횟수입니다."},"repeatUntil":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"isBusy":{"type":"boolean","title":"바쁨 여부.","description":"이벤트 바쁨 상태 여부입니다."},"isUseDefaultReminder":{"type":"boolean","title":"캘린더 기본 알림 사용 여부.","description":"캘린더 기본 알림 사용 여부입니다."},"remindersType":{"type":"string","enum":["email","popup"],"title":"이벤트 알림 유형.","description":"이벤트 알림 유형입니다.\n\n- popup: 팝업 알림\n- email: 이메일 알림\n\n가능한 값으로는 \"popup\", \"email\" 2가지만 가능합니다."},"minutesBeforeReminders":{"type":"number","title":"일정 시작전 알림 설정 시간.","description":"일정 시작전 알림 설정 시간입니다."},"isConferencing":{"type":"boolean","title":"구글밋 생성 여부.","description":"구글밋 생성 여부입니다."},"visibility":{"type":"string","enum":["default","public","private"],"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다.\n\ndefault - 기본 공개 상태\npublic - 일정이 공개되며 일정 세부정보가 캘린더의 모든 독자에게 표시\nprivate - 일정이 비공개이며 일정 참석자만 일정 세부정보를 볼 수 있음\n\n가능한 값으로는 \"default\", \"public\", \"private\" 3가지만 가능합니다."},"colorId":{"type":"string","title":"이벤트 색상.","description":"이벤트 색상."},"isGuestCanModify":{"type":"boolean","title":"게스트 이벤트 수정 가능 여부.","description":"게스트 이벤트 수정 가능 여부입니다."}},"required":["start","end"],"title":"이벤트 생성을 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"이벤트 생성을 위해 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 id.","description":"이벤트의 고유 id 입니다."},"htmlLink":{"type":"string","format":"uri","nullable":true,"title":"이벤트 링크.","description":"이벤트 링크 입니다."},"color":{"type":"string","nullable":true,"title":"이벤트 색상.","description":"이벤트 색상입니다."},"createdDate":{"type":"string","nullable":true,"title":"이벤트 생성 날짜.","description":"이벤트 생성 날짜입니다."},"updatedDate":{"type":"string","nullable":true,"title":"이벤트 업데이트 날짜.","description":"이벤트 업데이트 날짜입니다."},"title":{"type":"string","nullable":true,"title":"이벤트 제목.","description":"이벤트 제목입니다."},"description":{"type":"string","nullable":true,"title":"이벤트 설명.","description":"이벤트 설명입니다."},"location":{"type":"string","nullable":true,"title":"이벤트 위치.","description":"이벤트 위치입니다."},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 주최자 프로필 id.","description":"이벤트 주최자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 주최자 이름.","description":"이벤트 주최자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 주최자 이메일.","description":"이벤트 주최자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 주최자.","nullable":true,"description":"이벤트 주최자의 정보입니다."},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 생성자 프로필 id.","description":"이벤트 생성자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 생성자 이름.","description":"이벤트 생성자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 생성자 이메일.","description":"이벤트 생성자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 생성자.","description":"이벤트 생성자의 정보입니다.","nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 시작 날짜.","description":"이벤트 시작 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 시작 날짜 타임존.","description":"이벤트 시작 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 시작 날짜.\n\n이벤트의 시작 날짜 정보입니다."},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트 끝나는 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜 타임존.","description":"이벤트 끝나는 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트의 끝나는 날짜 정보입니다."},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이벤트 반복 정보.","description":"이벤트 반복 정보입니다."},"transparency":{"type":"string","nullable":true,"title":"이벤트 바쁨 / 한가함 여부.","description":"이벤트 바쁨 / 한가함 여부입니다."},"guestsCanModify":{"type":"boolean","title":"초대자 이벤트 수정 권한 여부.","description":"초대자 이벤트 수정 권한 여부입니다."},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"디폴트 알림 여부.","description":"디폴트 알림 여부입니다."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true,"title":"알림 방식.","description":"알림 방식입니다."},"minutes":{"type":"number","nullable":true,"title":"알림 보내는 시간.","description":"알림 보내는 시간입니다."}},"title":"알림 설정 정보"},"title":"알림 설정 정보.","description":"알림 설정 정보입니다."}},"title":"이벤트 알림 정보.","nullable":true,"description":"이벤트 알림 정보입니다."},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true,"title":"이벤트 참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"organizer":{"type":"boolean","title":"이벤트 참석자가 주최자인지 여부.","description":"이벤트 참석자가 주최자인지 여부입니다."},"self":{"type":"boolean","title":"일정 사본이 표시되는 캘린더를 나타내는지 여부.","description":"일정 사본이 표시되는 캘린더를 나타내는지 여부입니다."},"responseStatus":{"type":"string","nullable":true,"title":"참석자의 참석 응답 상태.","description":"참석자의 참석 응답 상태입니다."}},"title":"참석자 정보"},"nullable":true,"title":"이벤트 참석자.","description":"이벤트 참석자 정보입니다."},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","nullable":true,"title":"파일 url.","description":"이벤트 첨부파일 url입니다."},"title":{"type":"string","nullable":true,"title":"파일 제목.","description":"첨부파일 제목입니다."},"mimeType":{"type":"string","nullable":true,"title":"인터넷 미디어 유형.","description":"인터넷 미디어 유형입니다."},"iconLink":{"type":"string","format":"uri","nullable":true,"title":"파일 icon 링크.","description":"첨부파일 아이콘 링크입니다."},"fileId":{"type":"string","nullable":true,"title":"파일 id.","description":"첨부파일의 id 입니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일 정보.","description":"이벤트 첨부파일 정보입니다."},"hangoutLink":{"type":"string","nullable":true,"title":"구글 밋 링크.","description":"구글 밋 링크입니다."},"visibility":{"type":"string","nullable":true,"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다."}},"title":"구글 캘린더 이벤트 정보"},"description":"구글 캘린더 이벤트 추가.\n\n구글 캘린더에 이벤트를 추가합니다."},{"method":"put","path":"/connector/google-calendar/{calendarId}/event/{eventId}","name":"connector_google_calendar_event_putByCalendaridAndEventid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"수정할 이벤트 고유 ID","description":" 수정할 이벤트 고유 ID."},"body":{"type":"object","properties":{"title":{"type":"string","title":"이벤트 제목.","description":"생성할 이벤트 제목입니다."},"description":{"type":"string","title":"이벤트 설명.","description":"생성할 이벤트 설명입니다."},"location":{"type":"string","title":"이벤트 장소.","description":"생성할 이벤트 장소입니다."},"start":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"end":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"],"title":"이벤트 반복 주기.","description":"이벤트 반복 주기입니다.\n\n- DAILY: 매일\n- WEEKLY: 매주\n- MONTHLY: 매달\n- YEARLY: 매년\n\n가능한 값으로는 \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\" 4가지만 가능합니다."},"repeatNum":{"type":"number","title":"이벤트 반복 횟수.","description":"이벤트 반복 횟수입니다."},"repeatUntil":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"isBusy":{"type":"boolean","title":"바쁨 여부.","description":"이벤트 바쁨 상태 여부입니다."},"isUseDefaultReminder":{"type":"boolean","title":"캘린더 기본 알림 사용 여부.","description":"캘린더 기본 알림 사용 여부입니다."},"remindersType":{"type":"string","enum":["email","popup"],"title":"이벤트 알림 유형.","description":"이벤트 알림 유형입니다.\n\n- popup: 팝업 알림\n- email: 이메일 알림\n\n가능한 값으로는 \"popup\", \"email\" 2가지만 가능합니다."},"minutesBeforeReminders":{"type":"number","title":"일정 시작전 알림 설정 시간.","description":"일정 시작전 알림 설정 시간입니다."},"isConferencing":{"type":"boolean","title":"구글밋 생성 여부.","description":"구글밋 생성 여부입니다."},"visibility":{"type":"string","enum":["default","public","private"],"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다.\n\ndefault - 기본 공개 상태\npublic - 일정이 공개되며 일정 세부정보가 캘린더의 모든 독자에게 표시\nprivate - 일정이 비공개이며 일정 참석자만 일정 세부정보를 볼 수 있음\n\n가능한 값으로는 \"default\", \"public\", \"private\" 3가지만 가능합니다."},"colorId":{"type":"string","title":"이벤트 색상.","description":"이벤트 색상."},"isGuestCanModify":{"type":"boolean","title":"게스트 이벤트 수정 가능 여부.","description":"게스트 이벤트 수정 가능 여부입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["start","end","secretKey"],"title":"이벤트 생성을 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"수정할 이벤트 고유 ID","description":" 수정할 이벤트 고유 ID."},"body":{"type":"object","properties":{"title":{"type":"string","title":"이벤트 제목.","description":"생성할 이벤트 제목입니다."},"description":{"type":"string","title":"이벤트 설명.","description":"생성할 이벤트 설명입니다."},"location":{"type":"string","title":"이벤트 장소.","description":"생성할 이벤트 장소입니다."},"start":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"end":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"],"title":"이벤트 반복 주기.","description":"이벤트 반복 주기입니다.\n\n- DAILY: 매일\n- WEEKLY: 매주\n- MONTHLY: 매달\n- YEARLY: 매년\n\n가능한 값으로는 \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\" 4가지만 가능합니다."},"repeatNum":{"type":"number","title":"이벤트 반복 횟수.","description":"이벤트 반복 횟수입니다."},"repeatUntil":{"type":"object","properties":{"year":{"type":"number","title":"연도.","description":"연도입니다."},"month":{"type":"number","title":"달.","description":"달입니다."},"date":{"type":"number","title":"일.","description":"일입니다."},"hour":{"type":"number","title":"시.","description":"시입니다."}},"required":["year","month","date","hour"],"title":"날짜 정보"},"isBusy":{"type":"boolean","title":"바쁨 여부.","description":"이벤트 바쁨 상태 여부입니다."},"isUseDefaultReminder":{"type":"boolean","title":"캘린더 기본 알림 사용 여부.","description":"캘린더 기본 알림 사용 여부입니다."},"remindersType":{"type":"string","enum":["email","popup"],"title":"이벤트 알림 유형.","description":"이벤트 알림 유형입니다.\n\n- popup: 팝업 알림\n- email: 이메일 알림\n\n가능한 값으로는 \"popup\", \"email\" 2가지만 가능합니다."},"minutesBeforeReminders":{"type":"number","title":"일정 시작전 알림 설정 시간.","description":"일정 시작전 알림 설정 시간입니다."},"isConferencing":{"type":"boolean","title":"구글밋 생성 여부.","description":"구글밋 생성 여부입니다."},"visibility":{"type":"string","enum":["default","public","private"],"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다.\n\ndefault - 기본 공개 상태\npublic - 일정이 공개되며 일정 세부정보가 캘린더의 모든 독자에게 표시\nprivate - 일정이 비공개이며 일정 참석자만 일정 세부정보를 볼 수 있음\n\n가능한 값으로는 \"default\", \"public\", \"private\" 3가지만 가능합니다."},"colorId":{"type":"string","title":"이벤트 색상.","description":"이벤트 색상."},"isGuestCanModify":{"type":"boolean","title":"게스트 이벤트 수정 가능 여부.","description":"게스트 이벤트 수정 가능 여부입니다."}},"required":["start","end"],"title":"이벤트 생성을 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"이벤트 생성을 위해 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 id.","description":"이벤트의 고유 id 입니다."},"htmlLink":{"type":"string","format":"uri","nullable":true,"title":"이벤트 링크.","description":"이벤트 링크 입니다."},"color":{"type":"string","nullable":true,"title":"이벤트 색상.","description":"이벤트 색상입니다."},"createdDate":{"type":"string","nullable":true,"title":"이벤트 생성 날짜.","description":"이벤트 생성 날짜입니다."},"updatedDate":{"type":"string","nullable":true,"title":"이벤트 업데이트 날짜.","description":"이벤트 업데이트 날짜입니다."},"title":{"type":"string","nullable":true,"title":"이벤트 제목.","description":"이벤트 제목입니다."},"description":{"type":"string","nullable":true,"title":"이벤트 설명.","description":"이벤트 설명입니다."},"location":{"type":"string","nullable":true,"title":"이벤트 위치.","description":"이벤트 위치입니다."},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 주최자 프로필 id.","description":"이벤트 주최자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 주최자 이름.","description":"이벤트 주최자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 주최자 이메일.","description":"이벤트 주최자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 주최자.","nullable":true,"description":"이벤트 주최자의 정보입니다."},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 생성자 프로필 id.","description":"이벤트 생성자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 생성자 이름.","description":"이벤트 생성자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 생성자 이메일.","description":"이벤트 생성자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 생성자.","description":"이벤트 생성자의 정보입니다.","nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 시작 날짜.","description":"이벤트 시작 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 시작 날짜 타임존.","description":"이벤트 시작 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 시작 날짜.\n\n이벤트의 시작 날짜 정보입니다."},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트 끝나는 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜 타임존.","description":"이벤트 끝나는 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트의 끝나는 날짜 정보입니다."},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이벤트 반복 정보.","description":"이벤트 반복 정보입니다."},"transparency":{"type":"string","nullable":true,"title":"이벤트 바쁨 / 한가함 여부.","description":"이벤트 바쁨 / 한가함 여부입니다."},"guestsCanModify":{"type":"boolean","title":"초대자 이벤트 수정 권한 여부.","description":"초대자 이벤트 수정 권한 여부입니다."},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"디폴트 알림 여부.","description":"디폴트 알림 여부입니다."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true,"title":"알림 방식.","description":"알림 방식입니다."},"minutes":{"type":"number","nullable":true,"title":"알림 보내는 시간.","description":"알림 보내는 시간입니다."}},"title":"알림 설정 정보"},"title":"알림 설정 정보.","description":"알림 설정 정보입니다."}},"title":"이벤트 알림 정보.","nullable":true,"description":"이벤트 알림 정보입니다."},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true,"title":"이벤트 참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"organizer":{"type":"boolean","title":"이벤트 참석자가 주최자인지 여부.","description":"이벤트 참석자가 주최자인지 여부입니다."},"self":{"type":"boolean","title":"일정 사본이 표시되는 캘린더를 나타내는지 여부.","description":"일정 사본이 표시되는 캘린더를 나타내는지 여부입니다."},"responseStatus":{"type":"string","nullable":true,"title":"참석자의 참석 응답 상태.","description":"참석자의 참석 응답 상태입니다."}},"title":"참석자 정보"},"nullable":true,"title":"이벤트 참석자.","description":"이벤트 참석자 정보입니다."},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","nullable":true,"title":"파일 url.","description":"이벤트 첨부파일 url입니다."},"title":{"type":"string","nullable":true,"title":"파일 제목.","description":"첨부파일 제목입니다."},"mimeType":{"type":"string","nullable":true,"title":"인터넷 미디어 유형.","description":"인터넷 미디어 유형입니다."},"iconLink":{"type":"string","format":"uri","nullable":true,"title":"파일 icon 링크.","description":"첨부파일 아이콘 링크입니다."},"fileId":{"type":"string","nullable":true,"title":"파일 id.","description":"첨부파일의 id 입니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일 정보.","description":"이벤트 첨부파일 정보입니다."},"hangoutLink":{"type":"string","nullable":true,"title":"구글 밋 링크.","description":"구글 밋 링크입니다."},"visibility":{"type":"string","nullable":true,"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다."}},"title":"구글 캘린더 이벤트 정보"},"description":"구글 캘린더 이벤트 수정.\n\n이벤트를 수정합니다."},{"method":"delete","path":"/connector/google-calendar/{calendarId}/event/{eventId}","name":"connector_google_calendar_event_eraseByCalendaridAndEventid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"삭제할 이벤트 고유 ID","description":" 삭제할 이벤트 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"삭제할 이벤트 고유 ID","description":" 삭제할 이벤트 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"구글 캘린더 이벤트 삭제.\n\n이벤트를 삭제합니다."},{"method":"put","path":"/connector/google-calendar/{calendarId}/event/{eventId}/attendees","name":"connector_google_calendar_event_attendees_putByCalendaridAndEventid","strict":true,"parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"참석자를 추가할 이벤트 고유 ID","description":" 참석자를 추가할 이벤트 고유 ID."},"body":{"type":"object","properties":{"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"추가할 참석자 이메일.","description":"추가할 참석자 이메일입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["attendeesEmail","secretKey"],"title":"참석자 추가를 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"title":"이벤트가 있는 캘린더 고유 ID","description":" 이벤트가 있는 캘린더 고유 ID."},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"title":"참석자를 추가할 이벤트 고유 ID","description":" 참석자를 추가할 이벤트 고유 ID."},"body":{"type":"object","properties":{"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"추가할 참석자 이메일.","description":"추가할 참석자 이메일입니다."}},"required":["attendeesEmail"],"title":"참석자 추가를 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"참석자 추가를 위해 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 id.","description":"이벤트의 고유 id 입니다."},"htmlLink":{"type":"string","format":"uri","nullable":true,"title":"이벤트 링크.","description":"이벤트 링크 입니다."},"color":{"type":"string","nullable":true,"title":"이벤트 색상.","description":"이벤트 색상입니다."},"createdDate":{"type":"string","nullable":true,"title":"이벤트 생성 날짜.","description":"이벤트 생성 날짜입니다."},"updatedDate":{"type":"string","nullable":true,"title":"이벤트 업데이트 날짜.","description":"이벤트 업데이트 날짜입니다."},"title":{"type":"string","nullable":true,"title":"이벤트 제목.","description":"이벤트 제목입니다."},"description":{"type":"string","nullable":true,"title":"이벤트 설명.","description":"이벤트 설명입니다."},"location":{"type":"string","nullable":true,"title":"이벤트 위치.","description":"이벤트 위치입니다."},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 주최자 프로필 id.","description":"이벤트 주최자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 주최자 이름.","description":"이벤트 주최자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 주최자 이메일.","description":"이벤트 주최자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 주최자.","nullable":true,"description":"이벤트 주최자의 정보입니다."},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이벤트 생성자 프로필 id.","description":"이벤트 생성자 프로필 id입니다."},"displayName":{"type":"string","nullable":true,"title":"이벤트 생성자 이름.","description":"이벤트 생성자 이름입니다."},"email":{"type":"string","nullable":true,"title":"이벤트 생성자 이메일.","description":"이벤트 생성자 이메일입니다."},"self":{"type":"boolean","title":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부.","description":"이벤트 사본이 표시되는 캘린더에 해당하는지 여부입니다."}},"title":"이벤트 생성자.","description":"이벤트 생성자의 정보입니다.","nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 시작 날짜.","description":"이벤트 시작 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 시작 날짜 타임존.","description":"이벤트 시작 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 시작 날짜.\n\n이벤트의 시작 날짜 정보입니다."},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트 끝나는 날짜입니다."},"timeZone":{"type":"string","nullable":true,"title":"이벤트 끝나는 날짜 타임존.","description":"이벤트 끝나는 날짜 타임존입니다."}},"nullable":true,"title":"이벤트 끝나는 날짜.","description":"이벤트의 끝나는 날짜 정보입니다."},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이벤트 반복 정보.","description":"이벤트 반복 정보입니다."},"transparency":{"type":"string","nullable":true,"title":"이벤트 바쁨 / 한가함 여부.","description":"이벤트 바쁨 / 한가함 여부입니다."},"guestsCanModify":{"type":"boolean","title":"초대자 이벤트 수정 권한 여부.","description":"초대자 이벤트 수정 권한 여부입니다."},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"디폴트 알림 여부.","description":"디폴트 알림 여부입니다."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true,"title":"알림 방식.","description":"알림 방식입니다."},"minutes":{"type":"number","nullable":true,"title":"알림 보내는 시간.","description":"알림 보내는 시간입니다."}},"title":"알림 설정 정보"},"title":"알림 설정 정보.","description":"알림 설정 정보입니다."}},"title":"이벤트 알림 정보.","nullable":true,"description":"이벤트 알림 정보입니다."},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true,"title":"이벤트 참석자 이메일.","description":"이벤트 참석자 이메일입니다."},"organizer":{"type":"boolean","title":"이벤트 참석자가 주최자인지 여부.","description":"이벤트 참석자가 주최자인지 여부입니다."},"self":{"type":"boolean","title":"일정 사본이 표시되는 캘린더를 나타내는지 여부.","description":"일정 사본이 표시되는 캘린더를 나타내는지 여부입니다."},"responseStatus":{"type":"string","nullable":true,"title":"참석자의 참석 응답 상태.","description":"참석자의 참석 응답 상태입니다."}},"title":"참석자 정보"},"nullable":true,"title":"이벤트 참석자.","description":"이벤트 참석자 정보입니다."},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","nullable":true,"title":"파일 url.","description":"이벤트 첨부파일 url입니다."},"title":{"type":"string","nullable":true,"title":"파일 제목.","description":"첨부파일 제목입니다."},"mimeType":{"type":"string","nullable":true,"title":"인터넷 미디어 유형.","description":"인터넷 미디어 유형입니다."},"iconLink":{"type":"string","format":"uri","nullable":true,"title":"파일 icon 링크.","description":"첨부파일 아이콘 링크입니다."},"fileId":{"type":"string","nullable":true,"title":"파일 id.","description":"첨부파일의 id 입니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일 정보.","description":"이벤트 첨부파일 정보입니다."},"hangoutLink":{"type":"string","nullable":true,"title":"구글 밋 링크.","description":"구글 밋 링크입니다."},"visibility":{"type":"string","nullable":true,"title":"이벤트 공개 상태.","description":"이벤트 공개 상태입니다."}},"title":"구글 캘린더 이벤트 정보"},"description":"구글 캘린더 이벤트 참석자 추가.\n\n이벤트에 참석자를 추가합니다."},{"method":"post","path":"/connector/google-drive/get/folders","name":"connector_google_drive_get_folders_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"구글 drive folder id.","description":"구글 drive folder의 id."},"name":{"type":"string","nullable":true,"title":"구글 drive folder name.","description":"구글 drive 폴더 명."}}},"title":"구글 drive folder 데이터.","description":"구글 drive에 있는 folder 데이터 리스트."}},"required":["data"],"title":"구글 drive에 있는 폴더 리스트 정보"},"description":"구글 드라이브 폴더 목록 가져오기.\n\n구글 드라이브에 있는 폴더 목록을 가져옵니다."},{"method":"post","path":"/connector/google-drive/get/files","name":"connector_google_drive_get_files_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive 폴더.","description":"파일을 불러 올 폴더."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive에 있는 파일 리스트를 불러오기 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive 폴더.","description":"파일을 불러 올 폴더."}},"required":[],"title":"구글 drive에 있는 파일 리스트를 불러오기 위한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive에 있는 파일 리스트를 불러오기 위한 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"구글 drive file id.","description":"구글 drive file의 id."},"name":{"type":"string","nullable":true,"title":"구글 drive file name.","description":"구글 drive file의 이름."}}},"title":"구글 drive file 데이터.","description":"구글 drive에 있는 file 데이터 리스트."}},"required":["data"],"title":"구글 drive에 있는 파일 리스트 정보"},"description":"구글 드라이브 파일 목록 가져오기.\n\n구글 드라이브에 있는 파일 목록을 가져옵니다."},{"method":"post","path":"/connector/google-drive/folder","name":"connector_google_drive_folder_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"구글 drive 폴더명.","description":"생성할 drive 폴더명."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["name","secretKey"],"title":"구글 drive 폴더 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"구글 drive 폴더명.","description":"생성할 drive 폴더명."}},"required":["name"],"title":"구글 drive 폴더 생성에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive 폴더 생성에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"생성된 drive id.","description":"생성된 drive 폴더 id."}},"required":["id"],"title":"구글 drive 폴더 생성 결과"},"description":"구글 드라이브 폴더 생성.\n\n구글 드라이브에 새로운 폴더를 생성합니다."},{"method":"post","path":"/connector/google-drive/file","name":"connector_google_drive_file_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"구글 drive file명.","description":"drive에 생성할 파일명."},"folderIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"}},"minItems":1,"title":"구글 drive folder ids.","description":"drive에 생성할 파일이 속할 폴더 id 리스트."},"content":{"type":"string","title":"구글 drive file content.","description":"drive에 생성할 파일의 내용."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["name","folderIds","content","secretKey"],"title":"구글 drive에 파일 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"구글 drive file명.","description":"drive에 생성할 파일명."},"folderIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"}},"minItems":1,"title":"구글 drive folder ids.","description":"drive에 생성할 파일이 속할 폴더 id 리스트."},"content":{"type":"string","title":"구글 drive file content.","description":"drive에 생성할 파일의 내용."}},"required":["name","folderIds","content"],"title":"구글 drive에 파일 생성에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive에 파일 생성에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"생성된 drive file id.","description":"생성된 drive 파일 id."}},"required":["id"],"title":"구글 drive에 파일 생성 결과"},"description":"구글 드라이브 파일 생성.\n\n구글 드라이브에 새로운 파일을 생성합니다."},{"method":"delete","path":"/connector/google-drive/file/{id}","name":"connector_google_drive_file_eraseById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"삭제할 파일 고유 ID","description":" 삭제할 파일 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"삭제할 파일 고유 ID","description":" 삭제할 파일 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"구글 드라이브 파일 삭제.\n\n구글 드라이브에 있는 파일을 삭제합니다."},{"method":"delete","path":"/connector/google-drive/folder/{id}","name":"connector_google_drive_folder_eraseById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"삭제할 폴더 고유 ID","description":" 삭제할 폴더 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"삭제할 폴더 고유 ID","description":" 삭제할 폴더 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"구글 드라이브 폴더 삭제.\n\n구글 드라이브에 있는 폴더를 삭제합니다."},{"method":"post","path":"/connector/google-drive/permission","name":"connector_google_drive_permission_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive file id.","description":"접근 권한을 부여할 drive 파일 id."},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive folder id.","description":"접근 권한을 부여할 drive 폴더 id."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"구글 drive 접근 권한을 부여할 사용자의 이메일 주소입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\norganizer: 드라이브에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 드라이브의 구성을 관리할 수 있습니다.\nfileOrganizer: 드라이브의 파일에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 추가하거나 삭제할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"organizer\", \"fileOrganizer\", \"writer\", \"commenter\", \"reader\" 6가지만 가능합니다."},"type":{"type":"string","enum":["user","group","domain","anyone"],"title":"부여할 권한의 타입.","description":"부여할 권한의 타입입니다.\n\nuser - 특정 사용자, 이 경우 emailAddress 필드에 권한을 부여할 사용자의 이메일 주소를 지정해야 합니다.\ngroup - 특정 그룹, 이 경우 emailAddress 필드에 권한을 부여할 그룹의 이메일 주소를 지정해야 합니다.\ndomain - 특정 도메인, 이 경우 domain 필드에 권한을 부여할 도메인을 지정해야 합니다.\nanyone - 모든 사용자\n\n가능한 값으로는 \"user\", \"group\", \"domain\", \"anyone\" 4가지만 가능합니다."}},"required":["email","role","type"],"title":"접근 권한 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트 입니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["permissions","secretKey"],"title":"구글 drive 접근 권한에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive file id.","description":"접근 권한을 부여할 drive 파일 id."},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"구글 drive folder id.","description":"접근 권한을 부여할 drive 폴더 id."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"권한을 부여할 사용자의 이메일.","description":"구글 drive 접근 권한을 부여할 사용자의 이메일 주소입니다."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"],"title":"부여할 권한.","description":"부여할 권한의 종류입니다.\n\nowner: 소유자 권한을 부여합니다. 이 권한을 가진 사용자는 파일이나 폴더를 삭제하거나 다른 사용자에게 권한을 부여할 수 있습니다.\norganizer: 드라이브에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 드라이브의 구성을 관리할 수 있습니다.\nfileOrganizer: 드라이브의 파일에 대한 운영자 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 추가하거나 삭제할 수 있습니다.\nwriter: 쓰기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 수정하거나 삭제할 수 있습니다.\ncommenter: 댓글 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽고 댓글을 달 수 있습니다.\nreader: 읽기 권한을 부여합니다. 이 권한을 가진 사용자는 파일을 읽을 수 있습니다.\n\n가능한 값으로는 \"owner\", \"organizer\", \"fileOrganizer\", \"writer\", \"commenter\", \"reader\" 6가지만 가능합니다."},"type":{"type":"string","enum":["user","group","domain","anyone"],"title":"부여할 권한의 타입.","description":"부여할 권한의 타입입니다.\n\nuser - 특정 사용자, 이 경우 emailAddress 필드에 권한을 부여할 사용자의 이메일 주소를 지정해야 합니다.\ngroup - 특정 그룹, 이 경우 emailAddress 필드에 권한을 부여할 그룹의 이메일 주소를 지정해야 합니다.\ndomain - 특정 도메인, 이 경우 domain 필드에 권한을 부여할 도메인을 지정해야 합니다.\nanyone - 모든 사용자\n\n가능한 값으로는 \"user\", \"group\", \"domain\", \"anyone\" 4가지만 가능합니다."}},"required":["email","role","type"],"title":"접근 권한 정보"},"title":"접근 가능하게 할 이메일과 부여할 권한 리스트.","description":"접근 가능하게 할 이메일과 부여할 권한 리스트 입니다."}},"required":["permissions"],"title":"구글 drive 접근 권한에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive 접근 권한에 필요한 정보"}}}}]},"description":"구글 드라이브 권한 부여.\n\n파일 또는 폴더에 접근하기 위한 권한을 부여합니다."},{"method":"post","path":"/connector/google-drive/file/{id}/text","name":"connector_google_drive_file_text_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"파일 고유 ID","description":" 파일 고유 ID."},"body":{"type":"object","properties":{"text":{"type":"string","title":"추가할 text.","description":"drive 파일에 추가할 text."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["text","secretKey"],"title":"구글 drive 파일 text 추가에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"파일 고유 ID","description":" 파일 고유 ID."},"body":{"type":"object","properties":{"text":{"type":"string","title":"추가할 text.","description":"drive 파일에 추가할 text."}},"required":["text"],"title":"구글 drive 파일 text 추가에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 drive 파일 text 추가에 필요한 정보"}}}}]},"description":"구글 드라이브 파일 텍스트 추가.\n\n파일에 텍스트를 추가합니다."},{"method":"post","path":"/connector/google-drive/get/file/{id}","name":"connector_google_drive_get_file_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"파일 고유 ID","description":" 파일 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"title":"파일 고유 ID","description":" 파일 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"string","title":"구글 drive file data.","description":"drive 파일에서 추출한 text 데이터."}},"required":["data"],"title":"구글 drive 파일 조회 결과"},"description":"구글 드라이브 파일 텍스트 읽기.\n\n파일에서 텍스트를 읽어옵니다."},{"method":"post","path":"/connector/llm/selector-llm","name":"connector_llm_selector_llm_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"candidates":{"type":"array","items":{},"title":"선택지.","description":"선택 후보군 리스트입니다."},"num_select":{"type":"number","title":"선택 개수.","description":"선택할 후보군의 개수입니다."},"context":{"title":"고려사항.","description":"후보군을 선택할 때 고려해야할 내용들을 넣습니다."}},"required":["candidates","num_select","context"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"candidates":{"type":"array","items":{},"title":"선택지.","description":"선택 후보군 리스트입니다."},"num_select":{"type":"number","title":"선택 개수.","description":"선택할 후보군의 개수입니다."},"context":{"title":"고려사항.","description":"후보군을 선택할 때 고려해야할 내용들을 넣습니다."}},"required":["candidates","num_select","context"]}}}}],"human":[]},"output":{"type":"object","properties":{"selection":{"type":"array","items":{"type":"number"},"title":"선택된 후보 인덱스 정보.","description":"선택된 후보들의 인덱스 리스트입니다."}},"required":["selection"]},"description":"조건 선택.\n\n주어진 후보 중에서 조건에 맞는 것을 선택합니다."},{"method":"post","path":"/connector/gmail/send","name":"connector_gmail_send_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"받는 사람 이메일 주소.","description":"메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"보낼 메일의 제목."},"body":{"type":"string","title":"이메일 본문.","description":"보낼 메일의 본문.\n\nhtml로 작성해야 합니다. 그렇지 않으면 본문이 제대로 표시되지 않을 수 있습니다.\n\ngmail에서 적용가능한 css 형식을 적용해주세요.\n\nhtml 길이가 너무 길지 않게 작성해주세요. 길이가 너무 길면 전송이 되지 않을 수 있습니다."},"cc":{"type":"array","items":{"type":"string"},"title":"참조할 사람 이메일.","description":"참조할 사람 이메일 주소."},"Bcc":{"type":"array","items":{"type":"string"},"title":"숨은참조할 사람 이메일.","description":"숨은참조할 사람 이메일 주소."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["to","subject","body","secretKey"],"title":"메일을 보내기 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"받는 사람 이메일 주소.","description":"메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"보낼 메일의 제목."},"body":{"type":"string","title":"이메일 본문.","description":"보낼 메일의 본문.\n\nhtml로 작성해야 합니다. 그렇지 않으면 본문이 제대로 표시되지 않을 수 있습니다.\n\ngmail에서 적용가능한 css 형식을 적용해주세요.\n\nhtml 길이가 너무 길지 않게 작성해주세요. 길이가 너무 길면 전송이 되지 않을 수 있습니다."},"cc":{"type":"array","items":{"type":"string"},"title":"참조할 사람 이메일.","description":"참조할 사람 이메일 주소."},"Bcc":{"type":"array","items":{"type":"string"},"title":"숨은참조할 사람 이메일.","description":"숨은참조할 사람 이메일 주소."}},"required":["to","subject","body"],"title":"메일을 보내기 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"메일을 보내기 위해 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"보낸 메일의 id.","description":"보낸 메일의 id."}},"required":["id"],"title":"메일 전송 결과"},"description":"GMAIL 전송.\n\n메일을 전송합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다.\n\n이 커넥터는 이메일 보내는 용도이며,\n단순 텍스트로 보낼 경우에는 문장이 한 줄로 길게 보여지기 때문에 줄바꿈 문자를 넣어주셔야 합니다.\n현재 형식은 content-type으로 `text/html; charset=utf-8`을 사용하고 있습니다.\n경우에 따라 html 형식을 사용할 수도 있습니다."},{"method":"post","path":"/connector/gmail/draft","name":"connector_gmail_draft_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"받는 사람 이메일 주소.","description":"메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"보낼 메일의 제목."},"body":{"type":"string","title":"이메일 본문.","description":"보낼 메일의 본문.\n\nhtml로 작성해야 합니다. 그렇지 않으면 본문이 제대로 표시되지 않을 수 있습니다.\n\ngmail에서 적용가능한 css 형식을 적용해주세요.\n\nhtml 길이가 너무 길지 않게 작성해주세요. 길이가 너무 길면 전송이 되지 않을 수 있습니다."},"cc":{"type":"array","items":{"type":"string"},"title":"참조할 사람 이메일.","description":"참조할 사람 이메일 주소."},"Bcc":{"type":"array","items":{"type":"string"},"title":"숨은참조할 사람 이메일.","description":"숨은참조할 사람 이메일 주소."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["to","subject","body","secretKey"],"title":"메일을 보내기 위해 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"받는 사람 이메일 주소.","description":"메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"보낼 메일의 제목."},"body":{"type":"string","title":"이메일 본문.","description":"보낼 메일의 본문.\n\nhtml로 작성해야 합니다. 그렇지 않으면 본문이 제대로 표시되지 않을 수 있습니다.\n\ngmail에서 적용가능한 css 형식을 적용해주세요.\n\nhtml 길이가 너무 길지 않게 작성해주세요. 길이가 너무 길면 전송이 되지 않을 수 있습니다."},"cc":{"type":"array","items":{"type":"string"},"title":"참조할 사람 이메일.","description":"참조할 사람 이메일 주소."},"Bcc":{"type":"array","items":{"type":"string"},"title":"숨은참조할 사람 이메일.","description":"숨은참조할 사람 이메일 주소."}},"required":["to","subject","body"],"title":"메일을 보내기 위해 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"메일을 보내기 위해 필요한 정보"}}}}]},"description":"GMAIL 초안 생성.\n\n메일 초안을 생성 합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다.\n\n이 커넥터는 이메일 보내는 용도이며,\n단순 텍스트로 보낼 경우에는 문장이 한 줄로 길게 보여지기 때문에 줄바꿈 문자를 넣어주셔야 합니다.\n현재 형식은 content-type으로 `text/html; charset=utf-8`을 사용하고 있습니다.\n경우에 따라 html 형식을 사용할 수도 있습니다."},{"method":"post","path":"/connector/gmail/reply/{id}","name":"connector_gmail_reply_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"replyText":{"type":"string","title":"답장할 문구.","description":"답장할 문구."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["replyText","secretKey"],"title":"메일 답장에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"replyText":{"type":"string","title":"답장할 문구.","description":"답장할 문구."}},"required":["replyText"],"title":"메일 답장에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"메일 답장에 필요한 정보"}}}}]},"description":"GMAIL 답장.\n\n수신된 메일에 답장을 보냅니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다.\n\n이 커넥터는 이메일 보내는 용도이며,\n단순 텍스트로 보낼 경우에는 문장이 한 줄로 길게 보여지기 때문에 줄바꿈 문자를 넣어주셔야 합니다.\n현재 형식은 content-type으로 `text/html; charset=utf-8`을 사용하고 있습니다.\n경우에 따라 html 형식을 사용할 수도 있습니다."},{"method":"post","path":"/connector/gmail/get/{id}","name":"connector_gmail_get_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"해당 메일의 고유 ID","description":" 해당 메일의 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"해당 메일의 고유 ID","description":" 해당 메일의 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이메일 id.","description":"이메일의 고유 id."},"labelIds":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이메일 라벨 id.","description":"이메일에 부여된 라벨 id."},"from":{"type":"string","nullable":true,"title":"발신자 이메일.","description":"이메일을 보낸 사람의 이메일 주소."},"subject":{"type":"string","nullable":true,"title":"제목.","description":"이메일의 제목."},"body":{"type":"string","nullable":true,"title":"본문 요약.","description":"이메일의 본문 요약."},"attachments":{"type":"array","items":{"type":"object","properties":{"partId":{"type":"string","nullable":true,"title":"메시지 부분의 변경할 수 없는 ID.","description":"메시지 부분의 변경할 수 없는 ID."},"mimeType":{"type":"string","nullable":true,"title":"메시지 부분의 MIME 유형.","description":"메세지의 MIME 유형입니다."},"filename":{"type":"string","nullable":true,"title":"첨부파일 명.","description":"이 메시지 부분이 첨부파일을 나타내는 경우에만 표시됩니다."},"headers":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true,"title":"첨부파일 헤더 타입.","description":"첨부파일 헤더 타입."},"value":{"type":"string","nullable":true,"title":"첨부파일 헤더 값.","description":"첨부파일 헤더 값."}},"title":"첨부파일 헤더 정보"},"nullable":true,"title":"첨부파일 헤더 정보.","description":"전체 메시지 페이로드를 나타내는 최상위 메시지 부분에는 To, From, Subject와 같은 표준 RFC 2822 이메일 헤더가 포함됩니다."},"body":{"type":"object","properties":{"attachmentId":{"type":"string","nullable":true,"title":"첨부파일 id.","description":"첨부파일 고유 id입니다."},"size":{"type":"integer","nullable":true,"title":"첨부파일 데이터의 바이트 수.","description":"첨부파일 데이터의 바이트 수입니다."}},"title":"첨부파일 헤더 body 정보.","nullable":true,"description":"이 부분의 메시지 부분 본문으로, 컨테이너 MIME 메시지 부분의 경우 비어 있을 수 있습니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일.","description":"이메일에 첨부된 파일 목록."}},"title":"이메일 검색 결과"},"description":"GMAIL 정보 가져오기.\n\n메일의 정보를 가져옵니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"post","path":"/connector/gmail/read-list","name":"connector_gmail_read_list_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"from":{"type":"string","title":"보낸 사람의 이메일.","description":"이메일을 보낸 사람의 이메일 주소."},"to":{"type":"string","title":"받는 사람의 이메일.","description":"이메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"이메일 제목."},"after":{"type":"string","title":"특정 날짜 이후.","description":"해당 날짜 이후의 이메일만 반환."},"before":{"type":"string","title":"특정 날짜 이전.","description":"해당 날짜 이전의 이메일만 반환."},"label":{"type":"string","title":"메일에 부여된 라벨.","description":"메일에 부여된 라벨."},"maxResults":{"type":"number","maximum":500,"minimum":1,"title":"최대 반환 갯수.","description":"메일의 반환 갯수."},"labelIds":{"type":"array","items":{"type":"string"},"title":"필터링할 라벨 목록.","description":"지정된 라벨 ID와 모두 일치하는 라벨이 있는 메일만 반환하기 위한 라벨 목록들."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"이메일 리스트 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"from":{"type":"string","title":"보낸 사람의 이메일.","description":"이메일을 보낸 사람의 이메일 주소."},"to":{"type":"string","title":"받는 사람의 이메일.","description":"이메일을 받는 사람의 이메일 주소."},"subject":{"type":"string","title":"이메일 제목.","description":"이메일 제목."},"after":{"type":"string","title":"특정 날짜 이후.","description":"해당 날짜 이후의 이메일만 반환."},"before":{"type":"string","title":"특정 날짜 이전.","description":"해당 날짜 이전의 이메일만 반환."},"label":{"type":"string","title":"메일에 부여된 라벨.","description":"메일에 부여된 라벨."},"maxResults":{"type":"number","maximum":500,"minimum":1,"title":"최대 반환 갯수.","description":"메일의 반환 갯수."},"labelIds":{"type":"array","items":{"type":"string"},"title":"필터링할 라벨 목록.","description":"지정된 라벨 ID와 모두 일치하는 라벨이 있는 메일만 반환하기 위한 라벨 목록들."}},"required":[],"title":"이메일 리스트 검색에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"이메일 리스트 검색에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true,"title":"이메일 id.","description":"이메일의 고유 id."},"labelIds":{"type":"array","items":{"type":"string"},"nullable":true,"title":"이메일 라벨 id.","description":"이메일에 부여된 라벨 id."},"from":{"type":"string","nullable":true,"title":"발신자 이메일.","description":"이메일을 보낸 사람의 이메일 주소."},"subject":{"type":"string","nullable":true,"title":"제목.","description":"이메일의 제목."},"body":{"type":"string","nullable":true,"title":"본문 요약.","description":"이메일의 본문 요약."},"attachments":{"type":"array","items":{"type":"object","properties":{"partId":{"type":"string","nullable":true,"title":"메시지 부분의 변경할 수 없는 ID.","description":"메시지 부분의 변경할 수 없는 ID."},"mimeType":{"type":"string","nullable":true,"title":"메시지 부분의 MIME 유형.","description":"메세지의 MIME 유형입니다."},"filename":{"type":"string","nullable":true,"title":"첨부파일 명.","description":"이 메시지 부분이 첨부파일을 나타내는 경우에만 표시됩니다."},"headers":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true,"title":"첨부파일 헤더 타입.","description":"첨부파일 헤더 타입."},"value":{"type":"string","nullable":true,"title":"첨부파일 헤더 값.","description":"첨부파일 헤더 값."}},"title":"첨부파일 헤더 정보"},"nullable":true,"title":"첨부파일 헤더 정보.","description":"전체 메시지 페이로드를 나타내는 최상위 메시지 부분에는 To, From, Subject와 같은 표준 RFC 2822 이메일 헤더가 포함됩니다."},"body":{"type":"object","properties":{"attachmentId":{"type":"string","nullable":true,"title":"첨부파일 id.","description":"첨부파일 고유 id입니다."},"size":{"type":"integer","nullable":true,"title":"첨부파일 데이터의 바이트 수.","description":"첨부파일 데이터의 바이트 수입니다."}},"title":"첨부파일 헤더 body 정보.","nullable":true,"description":"이 부분의 메시지 부분 본문으로, 컨테이너 MIME 메시지 부분의 경우 비어 있을 수 있습니다."}},"title":"첨부파일 정보"},"nullable":true,"title":"첨부파일.","description":"이메일에 첨부된 파일 목록."}},"title":"이메일 검색 결과"},"title":"gmail 검색 데이터 정보.","description":"검색된 gmail 데이터 정보."}},"required":["data"],"title":"이메일 리스트 검색 결과"},"description":"GMAIL 리스트 가져오기.\n\n메일 리스트를 가져옵니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"delete","path":"/connector/gmail/{id}/hardDelete","name":"connector_gmail_hardDelete_eraseById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"메일을 삭제합니다.\n\n메일을 삭제합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다.\n\n이 기능은 메일을 휴지통으로 옮기는 게 아니라 영구히 삭제하는 기능이기 때문에 각별히 주의가 필요합니다.\n대부분의 유저는 이미 휴지통에 있는 것들을 삭제하고자 할 것입니다.\n따라서 유저가 삭제를 희망하는 경우 가급적 휴지통으로 메일을 옮기는 것으로 유도하되, 그럼에도 삭제하고자 한다면 휴지통에 있는 것을 대상으로 하는 것이 옳습니다."},{"method":"delete","path":"/connector/gmail/{id}","name":"connector_gmail_eraseById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"삭제할 메일의 고유 ID","description":" 삭제할 메일의 고유 ID."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"삭제할 메일의 고유 ID","description":" 삭제할 메일의 고유 ID."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"인증 정보"}}}}]},"description":"GMAIL 삭제.\n\n메일을 휴지통으로 옮깁니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"post","path":"/connector/gmail/label","name":"connector_gmail_label_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"labelName":{"type":"string","title":"라벨 이름.","description":"생성할 라벨의 이름."},"labelListVisibility":{"type":"string","enum":["labelHide","labelShow","labelShowIfUnread"],"title":"라벨의 공개 상태.","description":"생성할 라벨의 공개 상태.\n\n숨김 / 보임 / 안읽었을 때 보임\n\n- labelHide: 숨김\n- labelShow: 보임\n- labelShowIfUnread: 안읽었을 때 보임\n\n가능한 값으로 labelHide, labelShow, labelShowIfUnread 3가지만 가능합니다."},"messageListVisibility":{"type":"string","enum":["hide","show"],"title":"라벨이 지정된 메일의 공개 상태.","description":"생성된 라벨이 지정된 메일의 공개 상태.\n\n숨김 / 보임\n\n- hide: 숨김\n- show: 보임\n\n가능한 값으로 hide, show 2가지만 가능합니다."},"color":{"type":"object","properties":{"textColor":{"type":"string","title":"라벨 글씨 색.","description":"라벨 글씨 색상."},"backgroundColor":{"type":"string","title":"라벨 배경 색.","description":"라벨 배경 색상."}},"required":["textColor","backgroundColor"],"title":"라벨 색상"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["labelName","secretKey"],"title":"라벨 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"labelName":{"type":"string","title":"라벨 이름.","description":"생성할 라벨의 이름."},"labelListVisibility":{"type":"string","enum":["labelHide","labelShow","labelShowIfUnread"],"title":"라벨의 공개 상태.","description":"생성할 라벨의 공개 상태.\n\n숨김 / 보임 / 안읽었을 때 보임\n\n- labelHide: 숨김\n- labelShow: 보임\n- labelShowIfUnread: 안읽었을 때 보임\n\n가능한 값으로 labelHide, labelShow, labelShowIfUnread 3가지만 가능합니다."},"messageListVisibility":{"type":"string","enum":["hide","show"],"title":"라벨이 지정된 메일의 공개 상태.","description":"생성된 라벨이 지정된 메일의 공개 상태.\n\n숨김 / 보임\n\n- hide: 숨김\n- show: 보임\n\n가능한 값으로 hide, show 2가지만 가능합니다."},"color":{"type":"object","properties":{"textColor":{"type":"string","title":"라벨 글씨 색.","description":"라벨 글씨 색상."},"backgroundColor":{"type":"string","title":"라벨 배경 색.","description":"라벨 배경 색상."}},"required":["textColor","backgroundColor"],"title":"라벨 색상"}},"required":["labelName"],"title":"라벨 생성에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"라벨 생성에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"생성된 라벨 id.","description":"생성된 라벨의 id."}},"required":["id"],"title":"라벨 생성 결과"},"description":"GMAIL 라벨 생성.\n\n라벨을 생성합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"post","path":"/connector/gmail/label/{mailId}","name":"connector_gmail_label_postByMailid","strict":true,"parameters":[{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"라벨을 부여할 메일의 고유 ID","description":" 라벨을 부여할 메일의 고유 ID."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"라벨 목록.","description":"부여하거나 삭제할 라벨 목록들."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["labelIds","secretKey"],"title":"라벨 부여에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"라벨을 부여할 메일의 고유 ID","description":" 라벨을 부여할 메일의 고유 ID."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"라벨 목록.","description":"부여하거나 삭제할 라벨 목록들."}},"required":["labelIds"],"title":"라벨 부여에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"라벨 부여에 필요한 정보"}}}}]},"description":"GMAIL 라벨 부여.\n\n메일에 라벨을 부여합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"delete","path":"/connector/gmail/label/{mailId}","name":"connector_gmail_label_eraseByMailid","strict":true,"parameters":[{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"라벨을 제거할 메일의 고유 ID","description":" 라벨을 제거할 메일의 고유 ID."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"라벨 목록.","description":"부여하거나 삭제할 라벨 목록들."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["labelIds","secretKey"],"title":"라벨 부여에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"라벨을 제거할 메일의 고유 ID","description":" 라벨을 제거할 메일의 고유 ID."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"라벨 목록.","description":"부여하거나 삭제할 라벨 목록들."}},"required":["labelIds"],"title":"라벨 부여에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"라벨 부여에 필요한 정보"}}}}]},"description":"GMAIL 라벨 제거.\n\n메일에 부여된 라벨을 제거합니다\n\n지메일(gmail)은 Google에서 제공하는 무료 웹 기반 이메일 서비스입니다."},{"method":"post","path":"/connector/tool/{id}/generate","name":"connector_tool_generate_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string"},"body":{"type":"object","properties":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string"},"body":{"type":"object","properties":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}}],"human":[]},"output":{"type":"object","properties":{"content":{"type":"string"}},"required":["content"],"description":"툴을 사용한 결과입니다."},"description":"툴 사용.\n\n툴을 사용합니다.\n\n이 커넥터는 특수 목적으로 제작된 커넥터로써, 일반적인 상황에는 사용되지 않습니다.\n\n스튜디오 1.0에서 마이그레이션된 툴을 사용할 때만 사용되는 커넥터 입니다.\n\n일반 워크플로우를 만들 때 사용되지 않는 커넥터입니다."},{"method":"post","path":"/connector/chatbot/generate/easy","name":"connector_chatbot_generate_easy_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"difficulty":{"type":"string","enum":["easy"],"title":"난이도","description":"챗봇이 제작된 난이도 입니다."},"role":{"type":"string","title":"역할","description":"챗봇의 역할입니다."},"personality":{"type":"string","title":"성격","description":"챗봇의 성격입니다."},"requirement":{"type":"string","title":"요구사항","description":"챗봇의 요구사항입니다."},"name":{"type":"string","title":"이름","description":"챗봇의 이름입니다."},"description":{"type":"string","title":"설명","description":"챗봇의 설명입니다."},"message":{"type":"string","title":"유저 발화","description":"유저의 발화입니다."},"histories":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","enum":["user","assistant"],"title":"발화자 역할","description":"발화자의 역할입니다."},"content":{"type":"string","title":"발화 내용","description":"발화 내용입니다."}},"required":["role","content"],"title":"채팅 히스토리"},"title":"채팅 히스토리","description":"채팅 히스토리 입니다."}},"required":["difficulty","role","personality","requirement","name","description","message"],"title":"쉬움 난이도 챗봇 사용을 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"difficulty":{"type":"string","enum":["easy"],"title":"난이도","description":"챗봇이 제작된 난이도 입니다."},"role":{"type":"string","title":"역할","description":"챗봇의 역할입니다."},"personality":{"type":"string","title":"성격","description":"챗봇의 성격입니다."},"requirement":{"type":"string","title":"요구사항","description":"챗봇의 요구사항입니다."},"name":{"type":"string","title":"이름","description":"챗봇의 이름입니다."},"description":{"type":"string","title":"설명","description":"챗봇의 설명입니다."},"message":{"type":"string","title":"유저 발화","description":"유저의 발화입니다."},"histories":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","enum":["user","assistant"],"title":"발화자 역할","description":"발화자의 역할입니다."},"content":{"type":"string","title":"발화 내용","description":"발화 내용입니다."}},"required":["role","content"],"title":"채팅 히스토리"},"title":"채팅 히스토리","description":"채팅 히스토리 입니다."}},"required":["difficulty","role","personality","requirement","name","description","message"],"title":"쉬움 난이도 챗봇 사용을 위한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"content":{"type":"string","title":"챗봇 응답","description":"챗봇 응답 결과 입니다."}},"required":["content"],"title":"챗봇 응답"},"description":"난이도 쉬움 챗봇 사용.\n\n쉬움 난이도로 제작된 챗봇을 사용합니다.\n\n이 커넥터는 특수 목적으로 제작된 커넥터로써, 일반적인 상황에는 사용되지 않습니다.\n\n스튜디오 1.0에서 마이그레이션된 챗봇을 사용할 때만 사용되는 커넥터 입니다.\n\n일반 워크플로우를 챗봇으로 만들 때 사용되지 않는 커넥터입니다."},{"method":"post","path":"/connector/chatbot/generate/hard","name":"connector_chatbot_generate_hard_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"difficulty":{"type":"string","enum":["hard"],"title":"난이도","description":"챗봇이 제작된 난이도 입니다."},"prompt":{"type":"string","title":"프롬프트","description":"LLM 요청시 필요한 프롬프트입니다."},"name":{"type":"string","title":"이름","description":"챗봇의 이름입니다."},"description":{"type":"string","title":"설명","description":"챗봇의 설명입니다."},"message":{"type":"string","title":"유저 발화","description":"유저의 발화입니다."},"histories":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","enum":["user","assistant"],"title":"발화자 역할","description":"발화자의 역할입니다."},"content":{"type":"string","title":"발화 내용","description":"발화 내용입니다."}},"required":["role","content"],"title":"채팅 히스토리"},"title":"채팅 히스토리","description":"채팅 히스토리 입니다."}},"required":["difficulty","prompt","name","description","message"],"title":"어려움 난이도 챗봇 사용을 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"difficulty":{"type":"string","enum":["hard"],"title":"난이도","description":"챗봇이 제작된 난이도 입니다."},"prompt":{"type":"string","title":"프롬프트","description":"LLM 요청시 필요한 프롬프트입니다."},"name":{"type":"string","title":"이름","description":"챗봇의 이름입니다."},"description":{"type":"string","title":"설명","description":"챗봇의 설명입니다."},"message":{"type":"string","title":"유저 발화","description":"유저의 발화입니다."},"histories":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","enum":["user","assistant"],"title":"발화자 역할","description":"발화자의 역할입니다."},"content":{"type":"string","title":"발화 내용","description":"발화 내용입니다."}},"required":["role","content"],"title":"채팅 히스토리"},"title":"채팅 히스토리","description":"채팅 히스토리 입니다."}},"required":["difficulty","prompt","name","description","message"],"title":"어려움 난이도 챗봇 사용을 위한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"content":{"type":"string","title":"챗봇 응답","description":"챗봇 응답 결과 입니다."}},"required":["content"],"title":"챗봇 응답"},"description":"난이도 어려움 챗봇 사용.\n\n어려움 난이도로 제작된 챗봇을 사용합니다.\n\n이 커넥터는 특수 목적으로 제작된 커넥터로써, 일반적인 상황에는 사용되지 않습니다.\n\n스튜디오 1.0에서 마이그레이션된 챗봇을 사용할 때만 사용되는 커넥터 입니다.\n\n일반 워크플로우를 챗봇으로 만들 때 사용되지 않는 커넥터입니다."},{"method":"post","path":"/connector/figma/get-files","name":"connector_figma_get_files_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.","description":"파일의 키를 의미합니다.\n\n여기서의 파일 키는 피그마 프레임을 의미합니다."},"version":{"type":"string","title":"가져올 특정 버전의 ID.","description":"가져올 특정 버전 ID입니다. 이를 생략하면 파일의 현재 버전을 가져옵니다."},"ids":{"type":"string","title":"문서에서 관심 있는 노드들의 쉼표로 구분된 목록.","description":"문서에서 관심 있는 노드들의 쉼표로 구분된 목록입니다. 지정된 경우에는 해당하는 노드, 그 자식들 및 루트 노드와 나열된 노드 사이의 모든 부분 집합만 반환됩니다.\n\n참고: 원하는 노드의 조상 체인 외부에 포함된 다른 노드들이 반환된 JSON에 포함될 수 있습니다. 응답에는 또한 노드의 하위 트리에 있는 것들의 종속성도 포함될 수 있습니다. 예를 들어, 노드 하위 트리에 해당 파일의 다른 곳에 위치한 로컬 컴포넌트의 인스턴스가 포함되어 있는 경우 해당 컴포넌트와 해당 조상 체인도 포함됩니다.\n\n역사적인 이유로 최상위 캔버스 노드는 항상 반환되며 `ids` 매개변수에 나열되어 있는지 여부에 관계없이 반환됩니다. 이러한 특이점은 향후 API 버전에서 제거될 수 있습니다."},"depth":{"type":"integer","title":"문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수.","description":"문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수입니다. 예를 들어, 이를 1로 설정하면 페이지만 반환하고, 2로 설정하면 각 페이지의 페이지와 모든 최상위 개체를 반환합니다. 이 매개변수를 설정하지 않으면 모든 노드가 반환됩니다."},"geometry":{"type":"string","title":"내보낼 벡터 데이터.","description":"벡터 데이터를 내보낼 때 \"paths\"로 설정합니다."},"plugin_data":{"type":"string","title":"플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록.","description":"플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록입니다. 해당 플러그인이 작성한 문서에 있는 모든 데이터는 결과의 `pluginData` 및 `sharedPluginData` 속성에 포함됩니다."},"branch_data":{"type":"boolean","title":"요청한 파일에 대한 브랜치 메타데이터를 반환할지 여부를 의미.","description":"요청한 파일에 대한 브랜치 메타데이터를 반환합니다. 파일이 브랜치이면 반환된 응답에는 메인 파일의 키도 포함됩니다. 파일에 브랜치가 있으면 해당 메타데이터도 반환됩니다. 기본값: false."},"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["fileKey","secretKey"],"description":"피그마 특정 프레임으로부터 파일을 조회하는 DTO.\n\n한 번에 하나의 프레임으로부터 파일을 읽을 수 있다."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.","description":"파일의 키를 의미합니다.\n\n여기서의 파일 키는 피그마 프레임을 의미합니다."},"version":{"type":"string","title":"가져올 특정 버전의 ID.","description":"가져올 특정 버전 ID입니다. 이를 생략하면 파일의 현재 버전을 가져옵니다."},"ids":{"type":"string","title":"문서에서 관심 있는 노드들의 쉼표로 구분된 목록.","description":"문서에서 관심 있는 노드들의 쉼표로 구분된 목록입니다. 지정된 경우에는 해당하는 노드, 그 자식들 및 루트 노드와 나열된 노드 사이의 모든 부분 집합만 반환됩니다.\n\n참고: 원하는 노드의 조상 체인 외부에 포함된 다른 노드들이 반환된 JSON에 포함될 수 있습니다. 응답에는 또한 노드의 하위 트리에 있는 것들의 종속성도 포함될 수 있습니다. 예를 들어, 노드 하위 트리에 해당 파일의 다른 곳에 위치한 로컬 컴포넌트의 인스턴스가 포함되어 있는 경우 해당 컴포넌트와 해당 조상 체인도 포함됩니다.\n\n역사적인 이유로 최상위 캔버스 노드는 항상 반환되며 `ids` 매개변수에 나열되어 있는지 여부에 관계없이 반환됩니다. 이러한 특이점은 향후 API 버전에서 제거될 수 있습니다."},"depth":{"type":"integer","title":"문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수.","description":"문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수입니다. 예를 들어, 이를 1로 설정하면 페이지만 반환하고, 2로 설정하면 각 페이지의 페이지와 모든 최상위 개체를 반환합니다. 이 매개변수를 설정하지 않으면 모든 노드가 반환됩니다."},"geometry":{"type":"string","title":"내보낼 벡터 데이터.","description":"벡터 데이터를 내보낼 때 \"paths\"로 설정합니다."},"plugin_data":{"type":"string","title":"플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록.","description":"플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록입니다. 해당 플러그인이 작성한 문서에 있는 모든 데이터는 결과의 `pluginData` 및 `sharedPluginData` 속성에 포함됩니다."},"branch_data":{"type":"boolean","title":"요청한 파일에 대한 브랜치 메타데이터를 반환할지 여부를 의미.","description":"요청한 파일에 대한 브랜치 메타데이터를 반환합니다. 파일이 브랜치이면 반환된 응답에는 메인 파일의 키도 포함됩니다. 파일에 브랜치가 있으면 해당 메타데이터도 반환됩니다. 기본값: false."}},"required":["fileKey"],"description":"피그마 특정 프레임으로부터 파일을 조회하는 DTO.\n\n한 번에 하나의 프레임으로부터 파일을 읽을 수 있다."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"description":"피그마 특정 프레임으로부터 파일을 조회하는 DTO.\n\n한 번에 하나의 프레임으로부터 파일을 읽을 수 있다."}}}}]},"output":{"type":"object","properties":{"name":{"type":"string","title":"에디터에서 파일의 이름.","description":"에디터에서 파일의 이름입니다."},"role":{"type":"string","enum":["owner","editor","viewer"],"title":"요청을 수행하는 사용자의 역할.","description":"파일과 관련된 API 요청을 수행하는 사용자의 역할입니다."},"lastModified":{"type":"string","format":"date-time","title":"파일이 마지막으로 수정된 시간.","description":"파일이 마지막으로 수정된 UTC ISO 8601 시간입니다."},"editorType":{"type":"string","enum":["figma","figjam"],"title":"파일과 관련된 에디터의 유형.","description":"이 파일과 관련된 에디터의 유형입니다."},"thumbnailUrl":{"type":"string","title":"섬네일 이미지.","description":"파일의 섬네일 이미지에 대한 URL입니다."},"version":{"type":"string","title":"파일의 버전 번호.","description":"파일의 버전 번호입니다. 파일이 수정될 때마다 이 번호가 증가하며 요청 간에 파일이 변경되었는지 확인하는 데 사용될 수 있습니다."},"components":{"type":"object","properties":{},"title":"컴포넌트 ID와 컴포넌트 메타데이터 간의 매핑.","description":"컴포넌트 ID와 컴포넌트 메타데이터 간의 매핑입니다.","additionalProperties":{"type":"object","properties":{"key":{"type":"string","description":"The key of the component"},"name":{"type":"string","description":"Name of the component"},"description":{"type":"string","description":"The description of the component as entered in the editor"},"componentSetId":{"type":"string","description":"The ID of the component set if the component belongs to one"},"documentationLinks":{"type":"array","items":{"type":"object","properties":{"uri":{"type":"string","title":"Should be a valid URI (e.g. https://www.figma.com)","description":"Should be a valid URI (e.g. https://www.figma.com)."}},"required":["uri"],"description":"Represents a link to documentation for a component or component set."},"description":"An array of documentation links attached to this component"},"remote":{"type":"boolean","description":"Whether this component is a remote component that doesn't live in this file"}},"required":["key","name","description","documentationLinks","remote"],"description":"A description of a main component. Helps you identify which component instances are attached to."}},"componentSets":{"type":"object","properties":{},"title":"컴포넌트 세트 ID와 컴포넌트 세트 메타데이터 간의 매핑.","description":"컴포넌트 세트 ID와 컴포넌트 세트 메타데이터 간의 매핑입니다.","additionalProperties":{"type":"object","properties":{"key":{"type":"string","description":"The key of the component set"},"name":{"type":"string","description":"Name of the component set"},"description":{"type":"string","description":"The description of the component set as entered in the editor"},"documentationLinks":{"type":"array","items":{"type":"object","properties":{"uri":{"type":"string","title":"Should be a valid URI (e.g. https://www.figma.com)","description":"Should be a valid URI (e.g. https://www.figma.com)."}},"required":["uri"],"description":"Represents a link to documentation for a component or component set."},"description":"An array of documentation links attached to this component set"},"remote":{"type":"boolean","description":"Whether this component set is a remote component set that doesn't live in this file"}},"required":["key","name","description"],"description":"A description of a component set, which is a node containing a set of variants of a component."}},"schemaVersion":{"type":"number","title":"이 파일이 사용하는 파일 스키마의 버전.","description":"이 파일이 사용하는 파일 스키마의 버전입니다."},"styles":{"type":"object","properties":{},"title":"스타일 ID와 스타일 메타데이터 간의 매핑.","description":"스타일 ID와 스타일 메타데이터 간의 매핑입니다.","additionalProperties":{"type":"object","properties":{"key":{"type":"string","description":"The key of the style"},"name":{"type":"string","description":"Name of the style"},"description":{"type":"string","description":"Description of the style"},"remote":{"type":"boolean","description":"Whether this style is a remote style that doesn't live in this file"},"styleType":{"type":"string","enum":["FILL","TEXT","EFFECT","GRID"]}},"required":["key","name","description","remote","styleType"],"description":"A set of properties that can be applied to nodes and published. Styles for a property can be\ncreated in the corresponding property's panel while editing a file."}},"mainFileKey":{"type":"string","title":"이 파일의 주 파일 키.","description":"이 파일의 주 파일 키입니다. 존재하는 경우 이 파일은 컴포넌트 또는 컴포넌트 세트입니다."},"branches":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string","title":"브랜치의 키입니다","description":"브랜치의 키입니다."},"name":{"type":"string","title":"브랜치의 이름입니다","description":"브랜치의 이름입니다."},"thumbnail_url":{"type":"string","title":"브랜치의 섬네일 이미지에 대한 URL입니다","description":"브랜치의 섬네일 이미지에 대한 URL입니다."},"last_modified":{"type":"string","title":"브랜치가 마지막으로 수정된 UTC ISO 8601 시간입니다","description":"브랜치가 마지막으로 수정된 UTC ISO 8601 시간입니다."}},"required":["key","name","thumbnail_url","last_modified"]},"title":"이 파일의 브랜치 목록입니다","description":"이 파일의 브랜치 목록입니다."}},"required":["name","role","lastModified","editorType","version","components","componentSets","schemaVersion","styles"],"description":"읽어온 피그마 파일의 정보에 해당하는 DTO."},"description":"피그마 파일 가져오기.\n\n피그마 파일들을 가져옵니다."},{"method":"post","path":"/connector/figma/comments","name":"connector_figma_comments_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.","description":"파일의 키를 의미합니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."},"message":{"type":"string","title":"The text contents of the comment to post","description":"The text contents of the comment to post."},"comment_id":{"type":"string","description":"The ID of the comment to reply to, if any. This must be a root comment. You cannot reply to other\nreplies (a comment that has a parent_id)."},"client_meta":{"oneOf":[{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."}},"required":["node_id","node_offset"],"description":"Position of a comment relative to the frame to which it is attached."},{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the position","description":"X coordinate of the position."},"y":{"type":"number","title":"Y coordinate of the position","description":"Y coordinate of the position."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["x","y","region_height","region_width"],"description":"Position of a region comment on the canvas."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["node_id","node_offset","region_height","region_width"],"description":"Position of a region comment relative to the frame to which it is attached."}],"title":"The position where to place the comment","description":"The position where to place the comment."}},"required":["fileKey","secretKey","message"],"description":"특정 영역에 댓글을 추가하기 위한 DTO.\n\n한 번의 하나의 댓글을 작성할 수 있으며, 좌표 값이나 노드, 또는 부모 댓글(root comment) 이용해 댓글을 작성할 수 있다."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.","description":"파일의 키를 의미합니다."},"message":{"type":"string","title":"The text contents of the comment to post","description":"The text contents of the comment to post."},"comment_id":{"type":"string","description":"The ID of the comment to reply to, if any. This must be a root comment. You cannot reply to other\nreplies (a comment that has a parent_id)."},"client_meta":{"oneOf":[{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."}},"required":["node_id","node_offset"],"description":"Position of a comment relative to the frame to which it is attached."},{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the position","description":"X coordinate of the position."},"y":{"type":"number","title":"Y coordinate of the position","description":"Y coordinate of the position."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["x","y","region_height","region_width"],"description":"Position of a region comment on the canvas."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["node_id","node_offset","region_height","region_width"],"description":"Position of a region comment relative to the frame to which it is attached."}],"title":"The position where to place the comment","description":"The position where to place the comment."}},"required":["fileKey","message"],"description":"특정 영역에 댓글을 추가하기 위한 DTO.\n\n한 번의 하나의 댓글을 작성할 수 있으며, 좌표 값이나 노드, 또는 부모 댓글(root comment) 이용해 댓글을 작성할 수 있다."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"description":"특정 영역에 댓글을 추가하기 위한 DTO.\n\n한 번의 하나의 댓글을 작성할 수 있으며, 좌표 값이나 노드, 또는 부모 댓글(root comment) 이용해 댓글을 작성할 수 있다."}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Unique identifier for comment","description":"Unique identifier for comment."},"client_meta":{"oneOf":[{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."}},"required":["node_id","node_offset"],"description":"Position of a comment relative to the frame to which it is attached."},{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the position","description":"X coordinate of the position."},"y":{"type":"number","title":"Y coordinate of the position","description":"Y coordinate of the position."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["x","y","region_height","region_width"],"description":"Position of a region comment on the canvas."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["node_id","node_offset","region_height","region_width"],"description":"Position of a region comment relative to the frame to which it is attached."}],"description":"Positioning information of the comment. Includes information on the location of the comment pin,\nwhich is either the absolute coordinates on the canvas or a relative offset within a frame. If\nthe comment is a region, it will also contain the region height, width, and position of the\nanchor in regards to the region."},"file_key":{"type":"string","description":"The file in which the comment lives"},"parent_id":{"type":"string","description":"If present, the id of the comment to which this is the reply"},"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"created_at":{"type":"string","description":"The UTC ISO 8601 time at which the comment was left"},"resolved_at":{"type":"string","nullable":true,"description":"If set, the UTC ISO 8601 time the comment was resolved"},"message":{"type":"string","description":"The content of the comment"},"order_id":{"type":"string","description":"Only set for top level comments. The number displayed with the comment in the UI"},"reactions":{"type":"array","items":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"emoji":{"type":"string"},"created_at":{"type":"string","title":"The UTC ISO 8601 time at which the reaction was left","description":"The UTC ISO 8601 time at which the reaction was left."}},"required":["user","emoji","created_at"],"description":"A reaction left by a user."},"description":"An array of reactions to the comment"}},"required":["id","client_meta","file_key","user","created_at","message","reactions"],"description":"A comment or reply left by a user."},"description":"캔버스 내 댓글 작성하기.\n\n댓글을 작성합니다."},{"method":"post","path":"/connector/figma/get-comments","name":"connector_figma_get_comments_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값","description":"파일의 키를 의미합니다."},"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."},"as_md":{"type":"boolean","title":"If enabled, will return comments as their markdown equivalents when applicable","description":"If enabled, will return comments as their markdown equivalents when applicable."}},"required":["fileKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileKey":{"type":"string","title":"피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값","description":"파일의 키를 의미합니다."},"as_md":{"type":"boolean","title":"If enabled, will return comments as their markdown equivalents when applicable","description":"If enabled, will return comments as their markdown equivalents when applicable."}},"required":["fileKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"comments":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Unique identifier for comment","description":"Unique identifier for comment."},"client_meta":{"oneOf":[{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."}},"required":["node_id","node_offset"],"description":"Position of a comment relative to the frame to which it is attached."},{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the position","description":"X coordinate of the position."},"y":{"type":"number","title":"Y coordinate of the position","description":"Y coordinate of the position."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["x","y","region_height","region_width"],"description":"Position of a region comment on the canvas."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["node_id","node_offset","region_height","region_width"],"description":"Position of a region comment relative to the frame to which it is attached."}],"description":"Positioning information of the comment. Includes information on the location of the comment pin,\nwhich is either the absolute coordinates on the canvas or a relative offset within a frame. If\nthe comment is a region, it will also contain the region height, width, and position of the\nanchor in regards to the region."},"file_key":{"type":"string","description":"The file in which the comment lives"},"parent_id":{"type":"string","description":"If present, the id of the comment to which this is the reply"},"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"created_at":{"type":"string","description":"The UTC ISO 8601 time at which the comment was left"},"resolved_at":{"type":"string","nullable":true,"description":"If set, the UTC ISO 8601 time the comment was resolved"},"message":{"type":"string","description":"The content of the comment"},"order_id":{"type":"string","description":"Only set for top level comments. The number displayed with the comment in the UI"},"reactions":{"type":"array","items":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"emoji":{"type":"string"},"created_at":{"type":"string","title":"The UTC ISO 8601 time at which the reaction was left","description":"The UTC ISO 8601 time at which the reaction was left."}},"required":["user","emoji","created_at"],"description":"A reaction left by a user."},"description":"An array of reactions to the comment"}},"required":["id","client_meta","file_key","user","created_at","message","reactions"],"description":"A comment or reply left by a user."},"title":"An array of comments","description":"An array of comments."}},"required":["comments"],"description":"Response from the GET /v1/files/{file_key}/comments endpoint."},"description":"피그마 댓글 가져오기.\n\n피그마 댓글들을 가져옵니다."},{"method":"post","path":"/connector/figma/projects/{id}/get-canvas","name":"connector_figma_projects_get_canvas_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/figma/get-projects","jmesPath":"proejcts[].{value:id, label:name}"},"description":" 조회할 프로젝트의 아이디"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/figma/get-projects","jmesPath":"proejcts[].{value:id, label:name}"},"description":" 조회할 프로젝트의 아이디"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"name":{"type":"string","title":"프로젝트 이름"},"files":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string","title":"캔버스 키","description":"파일을 고유하게 식별할 수 있는 키입니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."},"name":{"type":"string","title":"캔버스 이름","description":"파일을 식별할 수 있도록 사용자가 붙여 놓은 이름을 의미합니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."},"thumbnail_url":{"type":"string","format":"uri","contentMediaType":"image/*","title":"섬네일","description":"섬네일 이미지로, 이 캔버스의 메인이 되는 화면을 스크린샷처럼 제공합니다.\n하지만, 이 섬네일을 링크로 저장해서 사용하려는 경우에는 이 이미지가 일정 시간동안만 제공되는 점에 주의해야 합니다."},"last_modified":{"type":"string","format":"date-time","title":"마지막 수정 시간","description":"해당 캔버스의 마지막 수정 시간을 의미한다.\n이를 기준으로 가장 최근에 변경점이 있거나 소통이 오가는 등 유지관리되는 캔버스를 구별할 수도 있을 것이다.\n다만, 이 값은 댓글이 추가되었다던가 캔버스에 변경점이 있는 게 아니면 알 수 없다."}},"required":["key","name","thumbnail_url","last_modified"]},"title":"캔버스 목록","description":"프로젝트에서 관리하고 있는 캔버스의 목록입니다."}},"required":["name","files"]},"description":"팀 내 캔버스 조회.\n\n특정 프로젝트의 모든 캔버스를 가져옵니다.\n캔버스는 특정 팀에서 관리하고 있는 피그마 파일들을 의미합니다.\n이 커넥터를 통해 사용자는 자신의 피그마 팀 내에 어떤 캔버스들이 관리되고 있는지 캔버스의 이름과 섬네일 링크를 받아 볼 수 있습니다."},{"method":"post","path":"/connector/figma/get-statistics","name":"connector_figma_get_statistics_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."},"as_md":{"type":"boolean","title":"If enabled, will return comments as their markdown equivalents when applicable","description":"If enabled, will return comments as their markdown equivalents when applicable."},"teamId":{"type":"string","title":"팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."}},"required":["secretKey","teamId"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"as_md":{"type":"boolean","title":"If enabled, will return comments as their markdown equivalents when applicable","description":"If enabled, will return comments as their markdown equivalents when applicable."},"teamId":{"type":"string","title":"팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."}},"required":["teamId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"canvasList":{"type":"array","items":{"type":"object","properties":{"comments":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Unique identifier for comment","description":"Unique identifier for comment."},"client_meta":{"oneOf":[{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."}},"required":["node_id","node_offset"],"description":"Position of a comment relative to the frame to which it is attached."},{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the position","description":"X coordinate of the position."},"y":{"type":"number","title":"Y coordinate of the position","description":"Y coordinate of the position."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["x","y","region_height","region_width"],"description":"Position of a region comment on the canvas."},{"type":"object","properties":{"node_id":{"type":"string","title":"Unique id specifying the frame","description":"Unique id specifying the frame."},"node_offset":{"type":"object","properties":{"x":{"type":"number","title":"X coordinate of the vector","description":"X coordinate of the vector."},"y":{"type":"number","title":"Y coordinate of the vector","description":"Y coordinate of the vector."}},"required":["x","y"],"description":"A 2d vector."},"region_height":{"type":"number","title":"The height of the comment region. Must be greater than 0","description":"The height of the comment region. Must be greater than 0."},"region_width":{"type":"number","title":"The width of the comment region. Must be greater than 0","description":"The width of the comment region. Must be greater than 0."},"comment_pin_corner":{"type":"string","enum":["top-left","top-right","bottom-left","bottom-right"],"title":"The corner of the comment region to pin to the node's corner as a string enum","description":"The corner of the comment region to pin to the node's corner as a string enum."}},"required":["node_id","node_offset","region_height","region_width"],"description":"Position of a region comment relative to the frame to which it is attached."}],"description":"Positioning information of the comment. Includes information on the location of the comment pin,\nwhich is either the absolute coordinates on the canvas or a relative offset within a frame. If\nthe comment is a region, it will also contain the region height, width, and position of the\nanchor in regards to the region."},"file_key":{"type":"string","description":"The file in which the comment lives"},"parent_id":{"type":"string","description":"If present, the id of the comment to which this is the reply"},"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"created_at":{"type":"string","description":"The UTC ISO 8601 time at which the comment was left"},"resolved_at":{"type":"string","nullable":true,"description":"If set, the UTC ISO 8601 time the comment was resolved"},"message":{"type":"string","description":"The content of the comment"},"order_id":{"type":"string","description":"Only set for top level comments. The number displayed with the comment in the UI"},"reactions":{"type":"array","items":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","title":"Unique stable id of the user","description":"Unique stable id of the user."},"handle":{"type":"string","title":"Name of the user","description":"Name of the user."},"img_url":{"type":"string","title":"URL link to the user's profile image","description":"URL link to the user's profile image."}},"required":["id","handle","img_url"],"description":"A description of a user."},"emoji":{"type":"string"},"created_at":{"type":"string","title":"The UTC ISO 8601 time at which the reaction was left","description":"The UTC ISO 8601 time at which the reaction was left."}},"required":["user","emoji","created_at"],"description":"A reaction left by a user."},"description":"An array of reactions to the comment"}},"required":["id","client_meta","file_key","user","created_at","message","reactions"],"description":"A comment or reply left by a user."},"title":"캔버스 내 댓글 목록"},"statistics":{"type":"object","properties":{"users":{"type":"array","items":{"type":"string"},"title":"토론에 참여한 사람 명단"},"counts":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T","additionalProperties":{"type":"number"}}},"required":["users","counts"],"title":"캔버스 내 댓글에 대한 통계"},"key":{"type":"string","title":"캔버스 키","description":"파일을 고유하게 식별할 수 있는 키입니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."},"name":{"type":"string","title":"캔버스 이름","description":"파일을 식별할 수 있도록 사용자가 붙여 놓은 이름을 의미합니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."},"thumbnail_url":{"type":"string","format":"uri","contentMediaType":"image/*","title":"섬네일","description":"섬네일 이미지로, 이 캔버스의 메인이 되는 화면을 스크린샷처럼 제공합니다.\n하지만, 이 섬네일을 링크로 저장해서 사용하려는 경우에는 이 이미지가 일정 시간동안만 제공되는 점에 주의해야 합니다."},"last_modified":{"type":"string","format":"date-time","title":"마지막 수정 시간","description":"해당 캔버스의 마지막 수정 시간을 의미한다.\n이를 기준으로 가장 최근에 변경점이 있거나 소통이 오가는 등 유지관리되는 캔버스를 구별할 수도 있을 것이다.\n다만, 이 값은 댓글이 추가되었다던가 캔버스에 변경점이 있는 게 아니면 알 수 없다."}},"required":["comments","statistics","key","name","thumbnail_url","last_modified"]},"title":"프로젝트 내 캔버스 별 통계"},"name":{"type":"string","title":"프로젝트 이름"},"id":{"type":"string","title":"프로젝트 아이디"}},"required":["canvasList","name","id"]}},"description":"팀 단위 피그마 통계 조회.\n\n팀 단위의 통계를 조회합니다."},{"method":"post","path":"/connector/figma/get-projects","name":"connector_figma_get_projects_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"teamId":{"type":"string","title":"팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."},"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["teamId","secretKey"],"title":"프로젝트 조회 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"teamId":{"type":"string","title":"팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."}},"required":["teamId"],"title":"프로젝트 조회 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"figma","x-wrtn-secret-scopes":["files:read","file_variables:read","file_variables:write","file_comments:write","file_dev_resources:read","file_dev_resources:write","library_analytics:read","webhooks:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"프로젝트 조회 조건"}}}}]},"output":{"type":"object","properties":{"name":{"type":"string","title":"팀 이름"},"projects":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"프로젝트 아이디"},"name":{"type":"string","title":"프로젝트 이름"}},"required":["id","name"]},"title":"프로젝트 목록\n\n팀에 속해있는 프로젝트들의 목록을 의미합니다."}},"required":["name","projects"]},"description":"팀 내 프로젝트 조회.\n\n팀 내의 프로젝트를 조회합니다.\n인자로는 teamId를 받아야 하는데, 이 프로퍼티는 팀 아이디를 의미하며 figma의 URL 경로를 보고 파악할 수 있습니다.\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 자동으로 숫자가 붙게 되는데 이것이 팀의 아이디입니다.\n유저는 여러가지 팀에 속할 수 있으므로, 만일 이 프로젝트들에 대한 조회를 자동화하고 싶지 않다면 다른 팀 아이디를 가져와야 합니다."},{"method":"post","path":"/connector/zoom/meetings","name":"connector_zoom_meetings_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"userId":{"type":"string"},"secretKey":{"type":"string","x-wrtn-secret-key":"zoom","x-wrtn-secret-scopes":["meeting:write:admin","meeting:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["userId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"userId":{"type":"string"}},"required":["userId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"zoom","x-wrtn-secret-scopes":["meeting:write:admin","meeting:write"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"agenda":{"type":"string","maxLength":2000,"title":"미팅의 안건.","description":"The meeting's agenda."},"default_password":{"type":"boolean","title":"기본 비밀번호 생성 여부.","description":"이 값이 true이고 사용자가 비밀번호로 PMI 설정을 활성화한 경우 사용자 미팅에서는 PMI 비밀번호를 사용한다."},"duration":{"type":"integer","title":"미팅의 예정 시간(duration).","description":"회의의 예정된 시간으로 분 단위를 의미한다.\n\n회의가 예약된 경우에만 사용된다."},"password":{"type":"string","maxLength":10,"title":"미팅 비밀번호.","description":"영어 대소문자와 '@', '-', '_', '*' 으로 이루어진 비밀번호를 의미한다."},"pre_schedule":{"type":"boolean","title":"`GSuite` app을 통한 예정된 회의 생성 여부."},"assistant_id":{"type":"string","title":"이 미팅을 주최한 사용자의 ID."},"host_email":{"type":"string","format":"email","title":"미팅 주최자의 이메일 주소."},"id":{"type":"integer","title":"미팅 ID."},"registration_url":{"type":"string","format":"url","title":"참가자들이 등록할 수 있는 URL."},"created_at":{"type":"string","format":"date-time","title":"이 미팅이 생성된 날짜와 시간."},"encrypted_password":{"type":"string","title":"타사 엔드포인트(H323/SIP)용 암호화된 비밀번호."},"pstn_password":{"type":"string","title":"PSTN을 통해 미팅에 참여하기 위한 비밀번호."},"h323_password":{"type":"string","title":"H.323/SIP 룸 시스템 비밀번호."},"join_url":{"type":"string","format":"url","title":"참가자들이 미팅에 참여할 수 있는 URL."},"chat_join_url":{"type":"string","format":"url","title":"채팅에 참여할 수 있는 URL."},"occurrences":{"type":"array","items":{"type":"object","properties":{"duration":{"type":"integer","title":"웨비나 지속 시간을 나타내는 정수."},"occurrence_id":{"type":"string","title":"각 웨비나 발생을 구분하는 고유 식별자(Unique Identifier)."},"start_time":{"type":"string","format":"date-time","title":"웨비나 시작 시간."},"status":{"type":"string","enum":["deleted","available"],"title":"웨비나 발생의 상태","description":"웨비나 발생의 상태."}},"required":["duration","occurrence_id","start_time","status"],"title":"반복 웨비나에 대한 정보."},"title":"반복 웨비나에 대한 정보."},"pmi":{"type":"string","title":"Personal meeting ID (PMI)."},"recurrence":{"type":"object","properties":{"end_date_time":{"type":"string","format":"date-time","title":"회의 최종 종료 전 마지막 날짜를 의미.","description":"회의가 취소되지 않을 경우 회의가 열리는 마지막 날을 의미한다.\n\n`end_times`와 함께 사용될 수는 없다."},"end_times":{"type":"integer","maximum":60,"default":1,"title":"회의 최종 종료 전 반복 횟수.","description":"회의가 취소되기 전에 몇 번 반복할지를 의미한다.\n\nend_times가 0으로 설정되어 있으면 종료 시간이 없음을 의미한다."},"type":{"type":"number","enum":[1,2,3],"title":"회의 반복 주기.","description":"1은 daily, 2는 weekly, 3은 monthly로, 반복 유형을 의미한다."},"monthly_day":{"type":"integer","minimum":1,"maximum":31,"title":"해당 월의 1부터 31까지의 일.","description":"해당 월의 1부터 31까지의 일자를 의미하며 `type`이 3, 즉 매달마다 반복되는 경우에 설정하는 값이다."},"monthly_week":{"type":"number","enum":[-1,1,2,3,4],"title":"매 월의 몇번째 주 인지를 의미.","description":"매월 몇 번째 주인지를 의미한다.\n\n`type`이 3으로, 즉 매 달마다 반복되는 회의일 때 설정하는 값이다.\n\n- -1 : 월의 마지막 주.\n- 1 : 월의 첫 번째 주.\n- 2 : 월의 두 번째 주.\n- 3 : 월의 세 번째 주.\n- 4 : 월의 네 번째 주."},"monthly_week_day":{"type":"string","title":"매 달 무슨 요일인지를 의미.","description":"`type`이 3으로, 즉 매 달마다 반복되는 회의일 때 설정하는 값이다.\n\n만약 여러 요일을 선택할 경우에는 `,` 기호를 통해 '1,3'과 같은 형태로 숫자를 연결하여 나타낸다.\n\n- 1 - Sunday.\n- 2 - Monday.\n- 3 - Tuesday.\n- 4 - Wednesday.\n- 5 - Thursday.\n- 6 - Friday.\n- 7 - Saturday."},"repeat_interval":{"type":"integer","title":"미팅 간의 간격.","description":"`type`이 1일 때, 즉 daily로 설정된 미팅의 경우 최대 90(일)까지 가능.\n\n`type`이 2일 때, 즉 weekly로 설정된 미팅의 경우 최대 12(주)까지 가능.\n\n`type`이 3일 때, 즉 monthly로 설정된 미팅의 경우 최대 3(달)까지 가능."},"weekly_days":{"type":"string","title":"매 주 무슨 요일인지를 의미.","description":"`type`이 2으로, 즉 매 주마다 반복되는 회의일 때 설정하는 값이다.\n\n만약 여러 요일을 선택할 경우에는 `,` 기호를 통해 '1,3'과 같은 형태로 숫자를 연결하여 나타낸다.\n\n- 1 - Sunday.\n- 2 - Monday.\n- 3 - Tuesday.\n- 4 - Wednesday.\n- 5 - Thursday.\n- 6 - Friday.\n- 7 - Saturday."}},"required":["type","monthly_day","monthly_week","monthly_week_day","repeat_interval","weekly_days"],"title":"미팅의 반복 주기에 대한 정보."},"settings":{"type":"object","properties":{"allow_multiple_devices":{"type":"boolean","title":"참가자가 여러 기기의 접속 가능한지 여부.","description":"등록이 활성화된 미팅에서 참가자가 여러 기기에서 접속할 수 있도록 허용할지 여부를 설정한다."},"alternative_hosts":{"type":"string","title":"세미콜론으로 구분된 대체 호스트의 이메일 주소 또는 ID 목록."},"alternative_hosts_email_notification":{"type":"boolean","title":"대체 호스트에게 이메일 알림을 보낼지 여부."},"alternative_host_update_polls":{"type":"boolean"},"approval_type":{"type":"number","enum":[0,1,2],"title":"미팅 등록 승인 설정.","description":"- 0 : 자동 승인\n- 1 : 수동 승인\n- 2 : 등록 불필요(기본값)"},"approved_or_denied_countries_or_regions":{"type":"object","properties":{"approved_list":{"type":"array","items":{"type":"string"},"title":"승인된 국가 또는 지역의 목록."},"denied_list":{"type":"array","items":{"type":"string"},"title":"차단된 국가 또는 지역의 목록."},"enable":{"type":"boolean","title":"특정 국가, 지역의 사용자 승인 또는 차단 설정의 활성화 여부."},"method":{"type":"string","enum":["deny","approve"],"title":"방식."}},"required":["enable"],"title":"승인/거부 국가 또는 지역."},"audio":{"type":"string","enum":["both","telephony","voip","thirdParty"],"title":"How participants join the audio portion of the meeting.","description":"- `both` - Both telephony and VoIP.\n- `telephony` - Telephony only.\n- `voip` - VoIP only.\n- `thirdParty` - Third party audio conference."},"audio_conference_info":{"type":"string","maxLength":2048,"title":"Third party audio conference info."},"authentication_domains":{"type":"string","title":"The meeting's authenticated domains","description":"The meeting's authenticated domains.\n\nOnly Zoom users whose email address contains an authenticated domain can join the meeting.\n\nComma-separate multiple domains or use a wildcard for listing domains."},"authentication_exception":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The participant's email address."},"name":{"type":"string","title":"The participant's name."},"join_url":{"type":"string","format":"url","title":"URL for participants to join the meeting."}},"required":["email","name","join_url"]},"title":"A list of participants that can bypass meeting authentication","description":"A list of participants that can bypass meeting authentication.\n\nThese participants will receive a unique meeting invite."},"authentication_name":{"type":"string","title":"Authentication name set in the authentication profile."},"authentication_option":{"type":"string","title":"Meeting authentication option ID."},"auto_recording":{"type":"string","enum":["none","cloud"],"title":"Automatic recording. local - Record on local.","description":"- `cloud` - Record on cloud.\n- `none` - Disabled."},"breakout_room":{"type":"object","properties":{"enable":{"type":"boolean","title":"Set this field's value to true to enable the breakout room pre-assign option","description":"Set this field's value to true to enable the breakout room pre-assign option."},"rooms":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"The breakout room's name","description":"The breakout room's name."},"participants":{"type":"array","items":{"type":"string","format":"email"},"title":"Email addresses of the participants who are to be assigned to the breakout room","description":"Email addresses of the participants who are to be assigned to the breakout room."}},"required":["name","participants"]},"title":"Create a room or rooms","description":"Create a room or rooms."}},"required":["enable"],"title":"Setting to pre-assign breakout rooms."},"calendar_type":{"type":"number","enum":[1,2],"title":"The type of calendar integration used to schedule the meeting","description":"The type of calendar integration used to schedule the meeting.\n\n- 1 - Zoom Outlook add-in\n- 2 - Zoom for Google Workspace add-on\n\nWorks with the private_meeting field to determine whether to share details of meetings or not."},"close_registration":{"type":"boolean","title":"Close registration after event date."},"cn_meeting":{"type":"boolean","title":"Host meeting in China."},"contact_email":{"type":"string","format":"email","title":"The contact email address for meeting registration."},"contact_name":{"type":"string","title":"The contact name for meeting registration."},"custom_keys":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string","maxLength":64,"title":"Custom key associated with the user."},"value":{"type":"string","maxLength":256,"title":"Value of the custom key associated with the user."},"typia.tag":{"type":"object","properties":{"target":{"type":"string","enum":["array"]},"kind":{"type":"string","enum":["maxItems"]},"value":{"type":"number","enum":[10]},"validate":{"type":"string","enum":["$input.length <= 10"]},"exclusive":{"type":"boolean"},"schema":{"type":"object","properties":{"maxItems":{"type":"number","enum":[10]}},"required":["maxItems"]}},"required":["target","kind","value","validate","exclusive","schema"],"title":"This is a dummy property for compilation","description":"This is a dummy property for compilation.\n\nIt does not mean anything in runtime."}},"required":["key","value"]},"title":"Custom keys and values assigned to the meeting."},"email_notification":{"type":"boolean","title":"Whether to send email notifications to alternative hosts and users with scheduling privileges","description":"Whether to send email notifications to alternative hosts and users with scheduling privileges."},"encryption_type":{"type":"string","enum":["enhanced_encryption","e2ee"],"title":"Choose between enhanced encryption and end-to-end encryption when starting or a meeting","description":"Choose between enhanced encryption and end-to-end encryption when starting or a meeting.\n\nWhen using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be automatically disabled.\n\n- enhanced_encryption - Enhanced encryption. Encryption is stored in the cloud if you enable this option.\n- e2ee - End-to-end encryption. The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also disables the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features."},"enforce_login":{"type":"boolean","title":"Only signed in users can join this meeting","description":"Only signed in users can join this meeting."},"enforce_login_domains":{"type":"string","deprecated":true,"title":"Only signed in users with specified domains can join meetings","description":"Only signed in users with specified domains can join meetings.\n\nThis field is deprecated and will not be supported in the future."},"focus_mode":{"type":"boolean","title":"Whether the Focus Mode feature is enabled when the meeting starts."},"global_dial_in_countries":{"type":"array","items":{"type":"string"},"title":"List of global dial-in countries."},"global_dial_in_numbers":{"type":"array","items":{"type":"object","properties":{"city":{"type":"string","title":"city of the number.","description":"City of the number, such as Chicago."},"country":{"type":"string","title":"The country code.","description":"The country code, such as BR."},"country_name":{"type":"string","title":"Full name of country.","description":"Full name of country, such as Brazil."},"number":{"type":"string","title":"A phone number.","description":"A phone number, such as `+1 2332357613`."},"type":{"type":"string","enum":["toll","tollfree"],"title":"Type of number."}},"required":["city","country","country_name","number","type"]},"title":"Global dial-in countries or regions."},"host_video":{"type":"boolean","title":"Start video when the host joins the meeting."},"in_meeting":{"type":"boolean","title":"Host meeting in India."},"jbh_time":{"type":"number","enum":[0,5,10],"title":"If the value of join_before_host field is set to true, use this field to indicate time limits when a participant may join a meeting before a host","description":"If the value of join_before_host field is set to true, use this field to indicate time limits when a participant may join a meeting before a host.\n\n- 0 - Allow participant to join anytime.\n- 5- Allow participant to join 5 minutes before meeting start time.\n- 10 - Allow participant to join 10 minutes before meeting start time."},"join_before_host":{"type":"boolean","title":"Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings","description":"Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings."},"language_interpretation":{"type":"object","properties":{"enable":{"type":"boolean","title":"Whether to enable language interpretation for the meeting","description":"Whether to enable language interpretation for the meeting."},"interpreters":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The interpreter's email address","description":"The interpreter's email address."},"languages":{"type":"string","title":"comma-separated list of the interpreter's languages","description":"comma-separated list of the interpreter's languages.\n\nThe string must contain two country IDs.\n\nFor example, if the interpreter will translate from English to Chinese, then this value will be US,CN."}},"required":["email","languages"]},"title":"Information about the meeting's sign language interpreters","description":"Information about the meeting's sign language interpreters."}},"required":["enable"]},"sign_language_interpretation":{"type":"object","properties":{"enable":{"type":"boolean","title":"Whether to enable sign language interpretation for the meeting","description":"Whether to enable sign language interpretation for the meeting."},"interpreters":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The interpreter's email address","description":"The interpreter's email address."},"sign_language":{"type":"string","title":"The interpreter's sign language","description":"The interpreter's sign language.\n\nTo get this value, use the sign_language_interpretation object's languages and custom_languages values in the Get user settings API response."}},"required":["email","sign_language"]},"title":"Information about the meeting's sign language interpreters","description":"Information about the meeting's sign language interpreters."}},"required":["enable"],"title":"The meeting's sign language interpretation settings","description":"The meeting's sign language interpretation settings.\n\nMake sure to add the language in the web portal in order to use it in the API. See link for details.\n\nNote: If this feature is not enabled on the host's account, this setting will not be applied to the meeting."},"meeting_authentication":{"type":"boolean","title":"If true, only authenticated users can join the meeting","description":"If true, only authenticated users can join the meeting."},"mute_upon_entry":{"type":"boolean","title":"Whether to mute participants upon entry","description":"Whether to mute participants upon entry."},"participant_video":{"type":"boolean","title":"Whether to start meetings with the participant video on","description":"Whether to start meetings with the participant video on."},"private_meeting":{"type":"boolean","title":"Whether to set the meeting as private","description":"Whether to set the meeting as private."},"registrants_confirmation_email":{"type":"boolean","title":"Whether to send registrants an email confirmation","description":"Whether to send registrants an email confirmation.\n\n- true - Send a confirmation email.\n- false - Do not send a confirmation email."},"registrants_email_notification":{"type":"boolean","title":"Whether to send registrants email notifications about their registration approval, cancellation, or rejection","description":"Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n- true - Send an email notification.\n- false - Do not send an email notification.\n\nSet this value to true to also use the registrants_confirmation_email parameter."},"registration_type":{"type":"number","enum":[1,2,3],"title":"The meeting's registration type","description":"The meeting's registration type.\n\n- 1 - Attendees register once and can attend any meeting occurrence.\n- 2 - Attendees must register for each meeting occurrence.\n- 3 - Attendees register once and can select one or more meeting occurrences to attend.\n\nThis field is only for recurring meetings with fixed times (8). This value defaults to 1."},"show_share_button":{"type":"boolean","title":"Whether to include social media sharing buttons on the meeting's registration page","description":"Whether to include social media sharing buttons on the meeting's registration page.\n\nThis setting is only applied to meetings with registration enabled."},"use_pmi":{"type":"boolean","title":"Whether to use a Personal Meeting ID (PMI) instead of a generated meeting ID","description":"Whether to use a Personal Meeting ID (PMI) instead of a generated meeting ID.\n\nThis field is only used for scheduled meetings (2), instant meetings (1), or recurring meetings with no fixed time (3)."},"waiting_room":{"type":"boolean","title":"Whether to enable the Waiting Room feature. If this value is true, this disables the join_before_host setting","description":"Whether to enable the Waiting Room feature. If this value is true, this disables the join_before_host setting."},"watermark":{"type":"boolean","title":"Whether to add a watermark when viewing a shared screen","description":"Whether to add a watermark when viewing a shared screen."},"host_save_video_order":{"type":"boolean","title":"Whether the Allow host to save video order feature is enabled","description":"Whether the Allow host to save video order feature is enabled."},"internal_meeting":{"type":"boolean","title":"Whether to set the meeting as an internal meeting","description":"Whether to set the meeting as an internal meeting."},"meeting_invitees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The invitee's email address","description":"The invitee's email address."}},"required":["email"]},"title":"A list of the meeting's invitees","description":"A list of the meeting's invitees."},"continuous_meeting_chat":{"type":"object","properties":{"enable":{"type":"boolean","title":"Whether to enable the Enable continuous meeting chat setting","description":"Whether to enable the Enable continuous meeting chat setting."},"auto_add_invited_external_users":{"type":"boolean","title":"Whether to enable the Automatically add invited external users setting","description":"Whether to enable the Automatically add invited external users setting."},"channel_id":{"type":"string","title":"The channel's ID","description":"The channel's ID."}},"required":["enable","auto_add_invited_external_users"],"title":"Information about the Enable continuous meeting chat feature","description":"Information about the Enable continuous meeting chat feature."},"participant_focused_meeting":{"type":"boolean","title":"Whether to set the meeting as a participant focused meeting","description":"Whether to set the meeting as a participant focused meeting."},"push_change_to_calendar":{"type":"boolean","title":"Whether to push meeting changes to the calendar","description":"Whether to push meeting changes to the calendar.\n\nTo enable this feature, configure the Configure Calendar and Contacts Service in the user's profile page of the Zoom web portal and enable the Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.\n\nsetting in the Settings page of the Zoom web portal.\n\n- true - Push meeting changes to the calendar.\n- false - Do not push meeting changes to the calendar."},"resources":{"type":"array","items":{"type":"object","properties":{"resource_type":{"type":"string","enum":["whiteboard"],"title":"The resource type","description":"The resource type."},"resource_id":{"type":"string","title":"The resource ID","description":"The resource ID."},"permission_level":{"type":"string","enum":["editor","viewer","commenter"],"title":"The permission levels for users to access the whiteboard","description":"The permission levels for users to access the whiteboard.\n\n- `editor` - Users with link access can edit the board.\n- `commenter` - Users with link access can comment on the board.\n- `viewer` - Users with link access can view the board."}},"required":["resource_type","resource_id","permission_level"]},"title":"The meeting's resources."},"auto_start_meeting_summary":{"type":"boolean","title":"Whether to automatically start a meeting summary","description":"Whether to automatically start a meeting summary."},"auto_start_ai_companion_questions":{"type":"boolean","title":"Whether to automatically start AI Companion questions","description":"Whether to automatically start AI Companion questions."}}},"start_time":{"type":"string","format":"date-time","title":"미팅 시작 시간."},"start_url":{"type":"string","format":"url","title":"미팅 주최자 권한으로 참여 가능한 URL.","description":"이 URL은 미팅의 주최자만 사용해야 하며, 다른 참가자와는 공유해서는 안 된다.\n\n이 URL을 가진 사람은 누구나 주최자 권한으로 Zoom 클라이언트에 로그인할 수 있다."},"timezone":{"type":"string","title":"`start_time`의 timezone."},"topic":{"type":"string","title":"미팅의 주제(topic)"},"tracking_fields":{"type":"array","items":{"type":"object","properties":{"field":{"type":"string","title":"`TrackingField`의 라벨."},"value":{"type":"string","title":"`TrackingField`의 값."},"visible":{"type":"boolean","title":"`TrackingField`의 노출 여부."}},"required":["field","value","visible"],"description":"Information about the meeting's tracking fields."}},"type":{"type":"number","enum":[1,2,3,8,10],"title":"미팅의 타입.","description":"- 1 : 즉석 미팅.\n- 2 : 예약된 미팅.\n- 3 : 고정된 시간이 없는 반복 미팅.\n- 8 : 고정된 시간이 있는 반복 미팅.\n- 10 : 화면 공유만 가능한 미팅."},"dynamic_host_key":{"type":"string","title":"미팅의 dynamic_host_key."}}},"description":"zoom 미팅 생성.\n\nzoom 미팅을 생성합니다."},{"method":"post","path":"/connector/sweet-tacker/get-companies/recommended","name":"connector_sweet_tacker_get_companies_recommended_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"t_invoice":{"type":"string","title":"송장번호"}},"required":["t_invoice"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"t_invoice":{"type":"string","title":"송장번호"}},"required":["t_invoice"]}}}}],"human":[]},"output":{"type":"object","properties":{"Recommend":{"type":"array","items":{"type":"object","properties":{"Name":{"type":"string","title":"택배사 이름"},"Code":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"택배사가 가지는 고유한 코드 값"}},"required":["Name","Code"],"description":"Construct a type with the properties of T except for those in type K."},"title":"택배사 목록"}},"required":["Recommend"],"title":"송장 번호에 매칭되는 택배사 목록 DTO"},"description":"송장 번호에 매칭되는 택배사 목록 조회.\n\n송장번호에 매칭되는 택배사 목록을 조회합니다\n\n송장 조회를 하기 위해서는 택배사 코드가 필수적입니다.\n따라서 유저가 송장번호는 알고 자신의 택배를 전달해줄 택배사가 어딘지 모르면 송장 조회를 할 수 없습니다.\n이 커넥터는 이러한 문제를 해결하기 위해 송장번호에 맞는 택배사를 추론해주는 기능을 제공합니다.\n다만 이 기능을 호출해도 택배사일 가능성이 있는 여러 개의 택배사로 나올 수도 있기 때문에 어느 회사가 이 택배를 운송해줄지는 알 수 없습니다.\n\n물론, 리스트에 대상이 1개라면 그 택배사일 가능성이 거의 100% 일 것입니다."},{"method":"post","path":"/connector/sweet-tacker/get-companies","name":"connector_sweet_tacker_get_companies_post","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"object","properties":{"Company":{"type":"array","items":{"type":"object","properties":{"Code":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"택배사가 가지는 고유한 코드 값"},"International":{"type":"string","enum":["true","false"],"title":"국제 배송 여부"},"Name":{"type":"string","title":"택배사 이름"}},"required":["Code","International","Name"]},"title":"택배사 목록"}},"required":["Company"],"title":"택배사 조회 응답 DTO"},"description":"택배사 목록 조회.\n\n택배사 목록을 조회합니다\n\n대한민국 국내, 국외의 택배사들을 모두 조회합니다.\n추후 송장번호를 통한 배송 조회를 할 때에는 택배사 코드가 함께 필요하기 때문에 먼저 택배사 목록부터 조회해야 합니다.\n택배사 목록을 조회한 후 자신의 택배사를 찾아서 해당 택배사의 코드를 송장 조회 시에 제공해주면 됩니다."},{"method":"post","path":"/connector/sweet-tacker/tracking-info","name":"connector_sweet_tacker_tracking_info_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"t_invoice":{"type":"string","title":"송장번호"},"t_code":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"path":"/connector/sweet-tracker/get-companies","method":"post","jmesPath":"Company[].{value:Code, label:Name}"}},{"type":"string","x-wrtn-prerequisite":{"path":"/connector/sweet-tracker/get-companies/recommended","method":"post","jmesPath":"Recommend[].{value:Code, label:Name}"}}],"title":"택배사 코드","description":"택배사 코드는 택배사 조회를 할 때 나오는 `Code` 값을 대입해야 한다\n택배사의 이름이 아닌 임의의 코드 값임에 주의해야 한다"}},"required":["t_invoice","t_code"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"t_invoice":{"type":"string","title":"송장번호"},"t_code":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"path":"/connector/sweet-tracker/get-companies","method":"post","jmesPath":"Company[].{value:Code, label:Name}"}},{"type":"string","x-wrtn-prerequisite":{"path":"/connector/sweet-tracker/get-companies/recommended","method":"post","jmesPath":"Recommend[].{value:Code, label:Name}"}}],"title":"택배사 코드","description":"택배사 코드는 택배사 조회를 할 때 나오는 `Code` 값을 대입해야 한다\n택배사의 이름이 아닌 임의의 코드 값임에 주의해야 한다"}},"required":["t_invoice","t_code"]}}}}],"human":[]},"output":{"type":"object","properties":{"senderName":{"type":"string","title":"보내는 사람 이름"},"receiverAddr":{"type":"string","title":"받는 사람 주소"},"firstDetail":{"type":"object","properties":{"code":{"type":"string","nullable":true,"title":"배송 상태 코드"},"kind":{"type":"string","title":"진행 상태"},"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"진행 단계"},"manName":{"type":"string","title":"배송기사 이름"},"manPic":{"type":"string","title":"배송기사 전화번호"},"remark":{"type":"string","nullable":true,"title":"비고"},"telno":{"type":"string","title":"배송기사 전화번호"},"telno2":{"type":"string","title":"배송기사 전화번호"},"time":{"type":"number","title":"진행 시간"},"timeString":{"type":"string","title":"진행 시간"},"where":{"type":"string","title":"진행 위치"}},"required":["code","kind","level","manName","manPic","remark","telno","telno2","time","timeString","where"]},"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"진행 단계"},"lastDetail":{"type":"object","properties":{"code":{"type":"string","nullable":true,"title":"배송 상태 코드"},"kind":{"type":"string","title":"진행 상태"},"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"진행 단계"},"manName":{"type":"string","title":"배송기사 이름"},"manPic":{"type":"string","title":"배송기사 전화번호"},"remark":{"type":"string","nullable":true,"title":"비고"},"telno":{"type":"string","title":"배송기사 전화번호"},"telno2":{"type":"string","title":"배송기사 전화번호"},"time":{"type":"number","title":"진행 시간"},"timeString":{"type":"string","title":"진행 시간"},"where":{"type":"string","title":"진행 위치"}},"required":["code","kind","level","manName","manPic","remark","telno","telno2","time","timeString","where"]},"estimate":{"type":"string","nullable":true,"title":"배송 예정 시간","description":"'15시~17시' 형식의 텍스트"},"itemImage":{"type":"string","title":"상품 이미지 URL"},"adUrl":{"type":"string","title":"택배사에서 광고용으로 사용하는 주소"},"lastStateDetail":{"type":"object","properties":{"code":{"type":"string","nullable":true,"title":"배송 상태 코드"},"kind":{"type":"string","title":"진행 상태"},"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"진행 단계"},"manName":{"type":"string","title":"배송기사 이름"},"manPic":{"type":"string","title":"배송기사 전화번호"},"remark":{"type":"string","nullable":true,"title":"비고"},"telno":{"type":"string","title":"배송기사 전화번호"},"telno2":{"type":"string","title":"배송기사 전화번호"},"time":{"type":"number","title":"진행 시간"},"timeString":{"type":"string","title":"진행 시간"},"where":{"type":"string","title":"진행 위치"}},"required":["code","kind","level","manName","manPic","remark","telno","telno2","time","timeString","where"]},"zipCode":{"type":"string","nullable":true,"title":"우편주소"},"invoiceNo":{"type":"string","title":"운송장 번호"},"completeYN":{"type":"string","enum":["Y","N"],"title":"배송 완료 여부"},"orderNumber":{"type":"string","nullable":true,"title":"주문 번호"},"complete":{"type":"boolean","title":"배송 완료 여부"},"recipient":{"type":"string","title":"수령인 정보"},"receiverName":{"type":"string","title":"받는 사람"},"result":{"type":"string","title":"조회 결과"},"productInfo":{"type":"string","nullable":true,"title":"상품 정보"},"itemName":{"type":"string","title":"상품 이름"}},"required":["firstDetail","level","lastDetail","estimate","itemImage","adUrl","lastStateDetail","zipCode","invoiceNo","completeYN","orderNumber","complete","recipient","receiverName","result","productInfo","itemName"]},"description":"송장 조회.\n\n송장 번호를 조회합니다\n\n송장을 조회하기 위해서는 자신이 조회하고자 하는 송장 번호 외에도 택배사 코드가 필요합니다.\n내 택배를 운송해줄 택배사가 어딘지 안다면 택배사를 조회하여 택배사 이름이 일치하는 택배사로부터 택배사 코드를 가져오면 됩니다.\n만약 송장 번호는 알지만 택배사 코드는 모르는 상태라면 '송장 번호에 매칭되는 택배사 목록 조회' 를 사용하여 자신의 택배를 운송해줄 택배사를 유추해볼 수 있습니다.\n택배를 조회하면 현재 택배가 어디까지 도달하였는지 그 위치와 시간, 그리고 그 택배를 운송해주는 담당자가 누군지를 알 수 있습니다.\n경우에 따라 전화번호가 있을 수도 있지만 절대적인 것은 아닙니다.\n또한, 쿠팡과 같이 커머스 업체에서 직배송하는 경우에는 송장 번호가 있어도 조회할 수 없는 경우도 있습니다."},{"method":"post","path":"/connector/hancell/sheet","name":"connector_hancell_sheet_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","title":"시트 이름","description":"존재하지 않는 시트라면 추가되고 존재한다면 수정됩니다."},"cells":{"type":"object","properties":{},"title":"셀에 담긴 정보","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}},"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"}},"required":["sheetName","cells","fileUrl"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","title":"시트 이름","description":"존재하지 않는 시트라면 추가되고 존재한다면 수정됩니다."},"cells":{"type":"object","properties":{},"title":"셀에 담긴 정보","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}}},"required":["sheetName","cells"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"}},"required":["fileUrl"]}}}}]},"output":{"type":"object","properties":{"fileUrl":{"type":"string","title":"새 한셀 파일 링크"}},"required":["fileUrl"]},"description":"한셀 수정.\n\n한셀 시트를 수정합니다.\n\n만약 시트가 이미 존재한다면 시트를 수정하고 기존에 없던 시트라면 추가합니다."},{"method":"post","path":"/connector/hancell/read","name":"connector_hancell_read_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"}},"required":["fileUrl"],"title":"한셀 읽기 조건"}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"읽어올 엑셀 파일"}},"required":["fileUrl"],"title":"한셀 읽기 조건"}}}}]},"output":{"type":"object","properties":{},"title":"한셀 읽기 응답","additionalProperties":{"type":"object","properties":{},"title":"셀에 담긴 정보","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}}},"description":"한셀 파일 읽기.\n\n한셀 파일을 읽습니다."},{"method":"post","path":"/connector/kakao-talk/message/text","name":"connector_kakao_talk_message_text_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"receiver_uuids":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-friends","jmesPath":"{value:elements[].uuid, label:elements[].profile_nickname}"}},"minItems":1,"maxItems":5,"title":"List of friends' UUIDs"},"message":{"type":"string","maxLength":200,"title":"Message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message"],"title":"인증 정보 선택","description":"secret key."}},"required":["receiver_uuids","message","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"receiver_uuids":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-friends","jmesPath":"{value:elements[].uuid, label:elements[].profile_nickname}"}},"minItems":1,"maxItems":5,"title":"List of friends' UUIDs"},"message":{"type":"string","maxLength":200,"title":"Message to send"}},"required":["receiver_uuids","message"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"successful_receiver_uuids":{"type":"array","items":{"type":"string"},"maxItems":5,"title":"List of successfully sent friend UUIDs"},"failure_info":{"type":"object","properties":{"code":{"type":"number","title":"Error Code"},"msg":{"type":"string","title":"Error Message"},"receiver_uuids":{"type":"array","items":{"type":"string"},"maxItems":5,"title":"List of friend UUIDs that failed with the given error code"}},"required":["code","msg","receiver_uuids"],"title":"Failure Information"}},"title":"Message Sending Result"},"description":"Send a message to a KakaoTalk(카카오톡) friend.\n\nSends a text type KakaoTalk(카카오톡) message to a friend\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/memo/commerce","name":"connector_kakao_talk_memo_commerce_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["commerce"],"title":"Commerce Type","x-wrtn-placeholder":"commerce"},"commerce":{"oneOf":[{"type":"object","properties":{"product_name":{"type":"string","title":"Product Name and Title"},"regular_price":{"type":"integer","title":"Regular Price"},"discount_price":{"type":"integer","title":"Discounted Price"},"currency_unit":{"type":"string","default":"원","title":"Currency Unit or Symbol"},"currency_unit_position":{"type":"number","enum":[0,1],"title":"Currency Unit Position"},"discount_rate":{"type":"integer","minimum":0,"maximum":100,"title":"Discount Rate","description":"A number between 0 and 100"}},"required":["regular_price"]},{"type":"object","properties":{"product_name":{"type":"string","title":"Product Name and Title"},"regular_price":{"type":"integer","title":"Regular Price"},"discount_price":{"type":"integer","title":"Discounted Price"},"currency_unit":{"type":"string","default":"원","title":"Currency Unit or Symbol"},"currency_unit_position":{"type":"number","enum":[0,1],"title":"Currency Unit Position"},"fixedDiscountPrice":{"type":"integer","minimum":0,"title":"Fixed Discount Price","description":"Cannot be used together with discount rate"}},"required":["regular_price"]}],"title":"Product Name and Pricing Information"},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","commerce","content"],"title":"Commerce Template"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["template_object","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["commerce"],"title":"Commerce Type","x-wrtn-placeholder":"commerce"},"commerce":{"oneOf":[{"type":"object","properties":{"product_name":{"type":"string","title":"Product Name and Title"},"regular_price":{"type":"integer","title":"Regular Price"},"discount_price":{"type":"integer","title":"Discounted Price"},"currency_unit":{"type":"string","default":"원","title":"Currency Unit or Symbol"},"currency_unit_position":{"type":"number","enum":[0,1],"title":"Currency Unit Position"},"discount_rate":{"type":"integer","minimum":0,"maximum":100,"title":"Discount Rate","description":"A number between 0 and 100"}},"required":["regular_price"]},{"type":"object","properties":{"product_name":{"type":"string","title":"Product Name and Title"},"regular_price":{"type":"integer","title":"Regular Price"},"discount_price":{"type":"integer","title":"Discounted Price"},"currency_unit":{"type":"string","default":"원","title":"Currency Unit or Symbol"},"currency_unit_position":{"type":"number","enum":[0,1],"title":"Currency Unit Position"},"fixedDiscountPrice":{"type":"integer","minimum":0,"title":"Fixed Discount Price","description":"Cannot be used together with discount rate"}},"required":["regular_price"]}],"title":"Product Name and Pricing Information"},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","commerce","content"],"title":"Commerce Template"}},"required":["template_object"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"result_code":{"type":"number","enum":[0],"title":"Response Code","description":"Indicates successful message sending"}},"required":["result_code"]},"description":"Send a message to myself on KakaoTalk(카카오톡).\n\nSends a commerce type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/memo/location","name":"connector_kakao_talk_memo_location_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["location"],"title":"Location Type","x-wrtn-placeholder":"location"},"address":{"type":"string","title":"Address of the Location to Share"},"address_title":{"type":"string","title":"Title Used in KakaoTalk Map View"},"social":{"type":"object","properties":{"like_count":{"type":"integer","title":"Number of Likes on the Content"},"comment_count":{"type":"integer","title":"Number of Comments on the Content"},"shared_count":{"type":"integer","title":"Number of Shares of the Content"},"view_count":{"type":"integer","title":"Number of Views of the Content"},"subscriber_count":{"type":"integer","title":"Number of Subscribers to the Content"}},"title":"Social Information","description":"Up to 3 out of 5 attributes will be displayed. Priority is Like > Comment > Shared > View > Subscriber."},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","address","content"],"title":"Location Template"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["template_object","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["location"],"title":"Location Type","x-wrtn-placeholder":"location"},"address":{"type":"string","title":"Address of the Location to Share"},"address_title":{"type":"string","title":"Title Used in KakaoTalk Map View"},"social":{"type":"object","properties":{"like_count":{"type":"integer","title":"Number of Likes on the Content"},"comment_count":{"type":"integer","title":"Number of Comments on the Content"},"shared_count":{"type":"integer","title":"Number of Shares of the Content"},"view_count":{"type":"integer","title":"Number of Views of the Content"},"subscriber_count":{"type":"integer","title":"Number of Subscribers to the Content"}},"title":"Social Information","description":"Up to 3 out of 5 attributes will be displayed. Priority is Like > Comment > Shared > View > Subscriber."},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","address","content"],"title":"Location Template"}},"required":["template_object"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"result_code":{"type":"number","enum":[0],"title":"Response Code","description":"Indicates successful message sending"}},"required":["result_code"]},"description":"Send a message to myself on KakaoTalk(카카오톡).\n\nSends a location type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/memo/list","name":"connector_kakao_talk_memo_list_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["list"],"title":"List Type","x-wrtn-placeholder":"list"},"header_title":{"type":"string","maxLength":200,"title":"Main Title Displayed at the Top of the List"},"header_link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information Corresponding to the Header Title"},"contents":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}]},"minItems":2,"maxItems":3,"title":"List of Contents Displayed in the List"},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","header_title","header_link","contents"],"title":"List Template"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["template_object","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["list"],"title":"List Type","x-wrtn-placeholder":"list"},"header_title":{"type":"string","maxLength":200,"title":"Main Title Displayed at the Top of the List"},"header_link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information Corresponding to the Header Title"},"contents":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}]},"minItems":2,"maxItems":3,"title":"List of Contents Displayed in the List"},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","header_title","header_link","contents"],"title":"List Template"}},"required":["template_object"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"result_code":{"type":"number","enum":[0],"title":"Response Code","description":"Indicates successful message sending"}},"required":["result_code"]},"description":"Send a message to myself on KakaoTalk(카카오톡).\n\nSends a list type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/memo/feed","name":"connector_kakao_talk_memo_feed_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["feed"],"title":"Feed Type"},"item_content":{"type":"object","properties":{"profile_text":{"type":"string","maxLength":16,"title":"Text to Display in the Header or Profile Area","description":"If `profile_image_url` is absent, it will be displayed as a bold header containing only the title."},"profile_image_url":{"type":"string","format":"url","title":"Profile Image","description":"Displayed as a small circular profile photo."},"title_image_url":{"type":"string","format":"url","title":"Item Image","description":"iOS 108x108, Android 98x98 size. Images not in a 1:1 ratio will be center cropped."},"title_image_text":{"type":"string","maxLength":24,"title":"Item Title","description":"Maximum of 2 lines."},"title_image_category":{"type":"string","maxLength":14,"title":"Category","description":"Maximum of 1 line."},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string","maxLength":6,"title":"Item Name"},"item_op":{"type":"string","maxLength":14,"title":"Item Price"}},"required":["item","item_op"],"title":"Item Information"},"maxItems":5,"title":"List of Items","description":"Information for each text item."},"sum":{"type":"string","maxLength":6,"title":"Total Amount"},"sum_op":{"type":"string","maxLength":11,"title":"Price Summary Information"}},"title":"Item Content"},"social":{"type":"object","properties":{"like_count":{"type":"integer","title":"Number of Likes on the Content"},"comment_count":{"type":"integer","title":"Number of Comments on the Content"},"shared_count":{"type":"integer","title":"Number of Shares of the Content"},"view_count":{"type":"integer","title":"Number of Views of the Content"},"subscriber_count":{"type":"integer","title":"Number of Subscribers to the Content"}},"title":"Social Information","description":"Up to 3 out of 5 attributes will be displayed. Priority is Like > Comment > Shared > View > Subscriber."},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","item_content","content"],"title":"Feed Template"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["template_object","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["feed"],"title":"Feed Type"},"item_content":{"type":"object","properties":{"profile_text":{"type":"string","maxLength":16,"title":"Text to Display in the Header or Profile Area","description":"If `profile_image_url` is absent, it will be displayed as a bold header containing only the title."},"profile_image_url":{"type":"string","format":"url","title":"Profile Image","description":"Displayed as a small circular profile photo."},"title_image_url":{"type":"string","format":"url","title":"Item Image","description":"iOS 108x108, Android 98x98 size. Images not in a 1:1 ratio will be center cropped."},"title_image_text":{"type":"string","maxLength":24,"title":"Item Title","description":"Maximum of 2 lines."},"title_image_category":{"type":"string","maxLength":14,"title":"Category","description":"Maximum of 1 line."},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string","maxLength":6,"title":"Item Name"},"item_op":{"type":"string","maxLength":14,"title":"Item Price"}},"required":["item","item_op"],"title":"Item Information"},"maxItems":5,"title":"List of Items","description":"Information for each text item."},"sum":{"type":"string","maxLength":6,"title":"Total Amount"},"sum_op":{"type":"string","maxLength":11,"title":"Price Summary Information"}},"title":"Item Content"},"social":{"type":"object","properties":{"like_count":{"type":"integer","title":"Number of Likes on the Content"},"comment_count":{"type":"integer","title":"Number of Comments on the Content"},"shared_count":{"type":"integer","title":"Number of Shares of the Content"},"view_count":{"type":"integer","title":"Number of Views of the Content"},"subscriber_count":{"type":"integer","title":"Number of Subscribers to the Content"}},"title":"Social Information","description":"Up to 3 out of 5 attributes will be displayed. Priority is Like > Comment > Shared > View > Subscriber."},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"content":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"Title."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["title","link"]},{"type":"object","properties":{"image_url":{"type":"string","format":"url","title":"Image URL","description":"The image size must not exceed `5MB`."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["image_url","link"]},{"type":"object","properties":{"description":{"type":"string","title":"Detailed Description","description":"Combined with title, displayed up to 4 lines."},"image_width":{"type":"integer","minimum":200,"title":"Image Width","description":"In pixels."},"image_height":{"type":"integer","minimum":200,"title":"Image Height","description":"In pixels."},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Link Information for Redirection"}},"required":["description","link"]}],"title":"Message Content"},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","item_content","content"],"title":"Feed Template"}},"required":["template_object"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"result_code":{"type":"number","enum":[0],"title":"Response Code","description":"Indicates successful message sending"}},"required":["result_code"]},"description":"Send a message to myself on KakaoTalk(카카오톡).\n\nSends a feed type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/memo/text","name":"connector_kakao_talk_memo_text_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["text"],"title":"Text Type"},"text":{"type":"string","maxLength":200,"title":"Body Text"},"link":{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"},"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["web_url","mobile_web_url"]},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","text","link"],"title":"Text Template"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["template_object","secretKey"],"title":"Message Sending Conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"template_object":{"type":"object","properties":{"object_type":{"type":"string","enum":["text"],"title":"Text Type"},"text":{"type":"string","maxLength":200,"title":"Body Text"},"link":{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"},"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["web_url","mobile_web_url"]},"buttons":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","x-wrtn-placeholder":"Button Name","title":"Button Name"},"link":{"oneOf":[{"type":"object","properties":{"web_url":{"type":"string","format":"url","title":"Web Link"}},"required":["web_url"],"title":"Web Link"},{"type":"object","properties":{"mobile_web_url":{"type":"string","format":"url","title":"Mobile Web Link"}},"required":["mobile_web_url"],"title":"Mobile Web Link"},{"type":"object","properties":{"android_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["android_execution_params"],"title":"Android App Link"},{"type":"object","properties":{"ios_execution_params":{"type":"string","title":"App Link","description":"Use `mobile_web_url` if this value is absent"}},"required":["ios_execution_params"],"title":"iOS App Link"}],"title":"Button Link"}},"required":["title","link"],"title":"Button Information"},"maxItems":2,"title":"List of Buttons","description":"Used to customize button titles and links. Supports two buttons and takes precedence over `button_title`."},"button_title":{"type":"string","title":"Button Title"}},"required":["object_type","text","link"],"title":"Text Template"}},"required":["template_object"],"title":"Message Sending Conditions"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_message","profile_image","profile_nickname"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Message Sending Conditions"}}}}]},"output":{"type":"object","properties":{"result_code":{"type":"number","enum":[0],"title":"Response Code","description":"Indicates successful message sending"}},"required":["result_code"]},"description":"Send a message to myself on KakaoTalk(카카오톡).\n\nSends a text type message to myself on KakaoTalk(카카오톡)\n\nWhen sending a KakaoTalk(카카오톡) message, there are buttons. If you want to add a link to the button, you should use a URL starting with `https://studio-pro.wrtn.ai/` or a redirect link. If the link starts with `https://studio-pro.wrtn.ai/`, the page will be viewed, otherwise, it will redirect to the new link. This is because only links registered in our domain are allowed according to the KakaoTalk(카카오톡) API specifications.\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/calendars/events","name":"connector_kakao_talk_calendars_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"calendar_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to create the event in"},"event":{"type":"object","properties":{"title":{"type":"string","maxLength":50,"x-wrtn-placeholder":"Event title","title":"Event title"},"time":{"type":"object","properties":{"start_at":{"type":"string","x-wrtn-placeholder":"2023-12-31T15:00:00Z","title":"Start time of the event","description":"Can be set in 5-minute intervals"},"end_at":{"type":"string","x-wrtn-placeholder":"2024-01-01T15:00:00Z","title":"End time of the event"},"time_zone":{"type":"string","default":"Asia/Seoul","title":"Timezone setting\n\nIn TZID format."},"all_day":{"type":"boolean","title":"Whether the event is all-day"},"lunar":{"type":"boolean","title":"Whether to set the date based on the lunar calendar"}},"title":"Time settings for an event"},"rrule":{"type":"string","title":"Recurrence rule for the event","description":"In RFC5545 RRULE format"},"description":{"type":"string","maxLength":5000,"x-wrtn-placeholder":"Event description","title":"Event description"},"location":{"type":"object","properties":{"name":{"type":"string","maxLength":50,"title":"Place Name"},"location_id":{"type":"number","title":"Place ID"},"address":{"type":"string","title":"Address"},"latitude":{"type":"number","title":"Latitude"},"longitude":{"type":"number","title":"Longitude"}},"title":"Location"},"reminders":{"type":"array","items":{"type":"number","multipleOf":5,"minimum":-1440,"maximum":43200},"maxItems":2,"title":"Reminder settings","description":"In minutes, can be set in 5-minute intervals, up to 2 reminders. For all-day events, can start from -1440, for non-all-day events, starts from 0."},"color":{"type":"string","enum":["BLUE","ROYAL_BLUE","NAVY_BLUE","RED","PINK","ORANGE","GREEN","LIME","OLIVE","MINT","MAGENTA","VIOLET","LAVENDER","BROWN","GRAY"],"title":"Event color"}},"required":["title","time"],"title":"Event created in KakaoTalk calendar"},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["event","secretKey"],"title":"Conditions for creating an event"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"calendar_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to create the event in"},"event":{"type":"object","properties":{"title":{"type":"string","maxLength":50,"x-wrtn-placeholder":"Event title","title":"Event title"},"time":{"type":"object","properties":{"start_at":{"type":"string","x-wrtn-placeholder":"2023-12-31T15:00:00Z","title":"Start time of the event","description":"Can be set in 5-minute intervals"},"end_at":{"type":"string","x-wrtn-placeholder":"2024-01-01T15:00:00Z","title":"End time of the event"},"time_zone":{"type":"string","default":"Asia/Seoul","title":"Timezone setting\n\nIn TZID format."},"all_day":{"type":"boolean","title":"Whether the event is all-day"},"lunar":{"type":"boolean","title":"Whether to set the date based on the lunar calendar"}},"title":"Time settings for an event"},"rrule":{"type":"string","title":"Recurrence rule for the event","description":"In RFC5545 RRULE format"},"description":{"type":"string","maxLength":5000,"x-wrtn-placeholder":"Event description","title":"Event description"},"location":{"type":"object","properties":{"name":{"type":"string","maxLength":50,"title":"Place Name"},"location_id":{"type":"number","title":"Place ID"},"address":{"type":"string","title":"Address"},"latitude":{"type":"number","title":"Latitude"},"longitude":{"type":"number","title":"Longitude"}},"title":"Location"},"reminders":{"type":"array","items":{"type":"number","multipleOf":5,"minimum":-1440,"maximum":43200},"maxItems":2,"title":"Reminder settings","description":"In minutes, can be set in 5-minute intervals, up to 2 reminders. For all-day events, can start from -1440, for non-all-day events, starts from 0."},"color":{"type":"string","enum":["BLUE","ROYAL_BLUE","NAVY_BLUE","RED","PINK","ORANGE","GREEN","LIME","OLIVE","MINT","MAGENTA","VIOLET","LAVENDER","BROWN","GRAY"],"title":"Event color"}},"required":["title","time"],"title":"Event created in KakaoTalk calendar"}},"required":["event"],"title":"Conditions for creating an event"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Conditions for creating an event"}}}}]},"output":{"type":"object","properties":{"event_id":{"type":"string","title":"ID of the created event"}},"required":["event_id"],"title":"Output of created event"},"description":"Add an event to the KakaoTalk(카카오톡) calendar.\n\nAdds an event to the KakaoTalk(카카오톡) calendar\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/get-friends","name":"connector_kakao_talk_get_friends_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"offset":{"type":"integer","default":0,"title":"Starting point of the friends list"},"limit":{"type":"integer","title":"Number of friends per page"},"order":{"type":"string","enum":["asc","desc"],"title":"Sort order of the friends list"},"friend_order":{"type":"string","enum":["favorite","nickname"],"title":"Sort criteria of the friends list\n\nIt must be one of: 'favorite', 'nickname'.\nDefault value is 'favorite'."},"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["friends"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Conditions for retrieving friends"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"offset":{"type":"integer","default":0,"title":"Starting point of the friends list"},"limit":{"type":"integer","title":"Number of friends per page"},"order":{"type":"string","enum":["asc","desc"],"title":"Sort order of the friends list"},"friend_order":{"type":"string","enum":["favorite","nickname"],"title":"Sort criteria of the friends list\n\nIt must be one of: 'favorite', 'nickname'.\nDefault value is 'favorite'."}},"required":[],"title":"Conditions for retrieving friends"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["friends"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Conditions for retrieving friends"}}}}]},"output":{"type":"object","properties":{"elements":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"Member number","description":"User ID\n\nA member number assigned to a friend in KakaoTalk, equivalent to the ID value.\nNote that the `uuid` property is used when sending messages."},"uuid":{"type":"string","title":"Friend code","description":"Friend code used when sending KakaoTalk messages. Used for actions such as sending KakaoTalk messages later.\nAlthough the property name is `uuid`, it is not in the usual uuid format, so use it with caution."},"favorite":{"type":"boolean","title":"Whether the friend is a favorite"},"profile_nickname":{"type":"string","title":"Nickname"},"profile_thumbnail_image":{"type":"string","format":"uri","enum":[""],"title":"Thumbnail"}},"required":["id","uuid","profile_nickname"],"title":"KakaoTalk friend"},"title":"Friends list"},"total_count":{"type":"integer","title":"Total number of friends"},"after_url":{"type":"string","format":"uri","nullable":true,"title":"Next page URL of the friends list"},"before_url":{"type":"string","format":"uri","nullable":true,"title":"Previous page URL of the friends list"},"favorite_count":{"type":"integer","title":"Number of favorite friends"}},"required":["elements","total_count"],"title":"Result of retrieving friends"},"description":"Retrieve the list of friends on KakaoTalk(카카오톡).\n\nRetrieves the list of friends on KakaoTalk(카카오톡)\n\nKakaoTalk(카카오톡) is a mobile messenger application in South Korea, which also provides various additional services."},{"method":"post","path":"/connector/kakao-talk/get-events","name":"connector_kakao_talk_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."},"calender_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to Retrieve Events","description":"Defaults to retrieving all calendars if not specified."},"preset":{"type":"string","enum":["TODAY","THIS_WEEK","THIS_MONTH"],"title":"Time Period for Retrieving Events","description":"Required if `from` and `to` are not included, and ignored if `next_page_token` is included."},"time_zone":{"type":"string","title":"Time Zone for Deadline Dates\n\nIn TZID format."},"limit":{"type":"integer","minimum":100,"maximum":1000,"title":"Maximum Number of Events to Receive in Response"},"from":{"type":"string","format":"date-time","title":"Start Time of the Period to Retrieve Events","description":"Required if `from` and `to` are not included and ignored if `next_page_token` is included."},"to":{"type":"string","format":"date-time","title":"End Time of the Period to Retrieve Events","description":"Required if `from` and `to` are not included and ignored if `next_page_token` is included. Must be within 31 days from `to`."}},"required":["secretKey","from","to"]},{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."},"calender_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to Retrieve Events","description":"Defaults to retrieving all calendars if not specified."},"preset":{"type":"string","enum":["TODAY","THIS_WEEK","THIS_MONTH"],"title":"Time Period for Retrieving Events","description":"Required if `from` and `to` are not included, and ignored if `next_page_token` is included."},"time_zone":{"type":"string","title":"Time Zone for Deadline Dates\n\nIn TZID format."},"limit":{"type":"integer","minimum":100,"maximum":1000,"title":"Maximum Number of Events to Receive in Response"},"next_page_token":{"type":"string","title":"Token for Pagination","description":"Query condition token including `from`, `to`, and `limit` values, available in the `after_url` received in the response."}},"required":["secretKey","next_page_token"]}],"description":"DTO for event retrieval."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."},"calender_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to Retrieve Events","description":"Defaults to retrieving all calendars if not specified."},"preset":{"type":"string","enum":["TODAY","THIS_WEEK","THIS_MONTH"],"title":"Time Period for Retrieving Events","description":"Required if `from` and `to` are not included, and ignored if `next_page_token` is included."},"time_zone":{"type":"string","title":"Time Zone for Deadline Dates\n\nIn TZID format."},"limit":{"type":"integer","minimum":100,"maximum":1000,"title":"Maximum Number of Events to Receive in Response"},"from":{"type":"string","format":"date-time","title":"Start Time of the Period to Retrieve Events","description":"Required if `from` and `to` are not included and ignored if `next_page_token` is included."},"to":{"type":"string","format":"date-time","title":"End Time of the Period to Retrieve Events","description":"Required if `from` and `to` are not included and ignored if `next_page_token` is included. Must be within 31 days from `to`."}},"required":["secretKey","from","to"]},{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."},"calender_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID to Retrieve Events","description":"Defaults to retrieving all calendars if not specified."},"preset":{"type":"string","enum":["TODAY","THIS_WEEK","THIS_MONTH"],"title":"Time Period for Retrieving Events","description":"Required if `from` and `to` are not included, and ignored if `next_page_token` is included."},"time_zone":{"type":"string","title":"Time Zone for Deadline Dates\n\nIn TZID format."},"limit":{"type":"integer","minimum":100,"maximum":1000,"title":"Maximum Number of Events to Receive in Response"},"next_page_token":{"type":"string","title":"Token for Pagination","description":"Query condition token including `from`, `to`, and `limit` values, available in the `after_url` received in the response."}},"required":["secretKey","next_page_token"]}],"description":"DTO for event retrieval."}}}}],"human":[]},"output":{"type":"object","properties":{"events":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Event ID"},"title":{"type":"string","title":"Event title"},"type":{"type":"string","title":"Event type"},"calendar_id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","x-wrtn-prerequisite":{"method":"post","path":"/connector/kakao-talk/get-calendars","jmesPath":"calendars[].{value:id, label: name || ''} || subscribe_calendars[].{value:id, label: name || ''}"},"title":"Calendar ID","description":"Fixed to primary for the default calendar"},"time":{"type":"object","properties":{"start_at":{"type":"string","x-wrtn-placeholder":"2023-12-31T15:00:00Z","title":"Start time of the event","description":"Can be set in 5-minute intervals"},"end_at":{"type":"string","x-wrtn-placeholder":"2024-01-01T15:00:00Z","title":"End time of the event"},"time_zone":{"type":"string","default":"Asia/Seoul","title":"Timezone setting\n\nIn TZID format."},"all_day":{"type":"boolean","title":"Whether the event is all-day"},"lunar":{"type":"boolean","title":"Whether to set the date based on the lunar calendar"}},"title":"Time settings for an event"},"is_host":{"type":"boolean","title":"Whether the user is the host of the event","description":"For public/subscribed or invited events"},"is_recur_event":{"type":"boolean","title":"Whether the event is recurring","description":"Required if type is USER."},"color":{"type":"string","enum":["BLUE","ROYAL_BLUE","NAVY_BLUE","RED","PINK","ORANGE","GREEN","LIME","OLIVE","MINT","MAGENTA","VIOLET","LAVENDER","BROWN","GRAY"],"title":"Event color","description":"Not included if not specified during event creation or editing."}},"required":["time"],"title":"Event"},"title":"List of events"},"has_next":{"type":"boolean","title":"Whether there is a next page"},"after_url":{"type":"string","format":"url","title":"URL of the next page\n\nA URL containing parameters and values to retrieve the next page, used as is when requesting the next page.\n\nProvided when `has_next` is true."}},"required":["events","has_next"],"title":"Result of retrieving events"},"description":"Retrieve KakaoTalk(카카오톡) calendar events.\n\nRetrieves KakaoTalk(카카오톡) calendar events.\n\nThe user needs to provide the calendar ID as an input parameter.\nIf no calendar is provided, it defaults to retrieving the user's own calendar.\nTherefore, this feature can be used even if no calendar ID is specified.\n\nThe conditions for retrieving events include specifying the period for which events are to be fetched.\nThis connector is designed to view data for either a week or a month.\n\nKakaoTalk(카카오톡) is a mobile messaging application in South Korea, and it also provides additional services."},{"method":"post","path":"/connector/kakao-talk/get-calendars","name":"connector_kakao_talk_get_calendars_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"kakao","x-wrtn-secret-scopes":["talk_calendar"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"calendars":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","title":"Calendar ID.\n\nFor calendars that users typically have by default, it is referred to as `primary`."},"name":{"type":"string","x-wrtn-placeholder":"Calendar Name","title":"Calendar Name"},"color":{"type":"string","enum":["BLUE","ROYAL_BLUE","NAVY_BLUE","RED","PINK","ORANGE","GREEN","LIME","OLIVE","MINT","MAGENTA","VIOLET","LAVENDER","BROWN","GRAY"],"title":"Event Color"},"reminder":{"type":"integer","title":"Default reminder time for non-all-day events"},"reminder_all_day":{"type":"integer","title":"Default reminder time for all-day events"}},"required":["id"],"title":"Basic Calendar","description":"List of sub-calendars"},"title":"Basic Calendar","description":"Personal calendars.\nAlthough these are personal, they are not limited to just your own events; you can view events from friends' schedules if invited or shared."},"subscribe_calendars":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","title":"Description of the subscribed calendar set by the channel"},"profile_image_url":{"type":"string","format":"url","contentMediaType":"image/*","title":"Profile image URL of the subscribed calendar\n\nIf an empty string appears, it means there is no image."},"thumbnail_url":{"type":"string","format":"url","contentMediaType":"image/*","title":"Thumbnail URL of the subscribed calendar's speech bubble"},"id":{"type":"string","default":"primary","x-wrtn-placeholder":"primary","title":"Calendar ID.\n\nFor calendars that users typically have by default, it is referred to as `primary`."},"name":{"type":"string","x-wrtn-placeholder":"Calendar Name","title":"Calendar Name"},"color":{"type":"string","enum":["BLUE","ROYAL_BLUE","NAVY_BLUE","RED","PINK","ORANGE","GREEN","LIME","OLIVE","MINT","MAGENTA","VIOLET","LAVENDER","BROWN","GRAY"],"title":"Event Color"},"reminder":{"type":"integer","title":"Default reminder time for non-all-day events"},"reminder_all_day":{"type":"integer","title":"Default reminder time for all-day events"}},"required":["id"],"title":"List of Subscribed Calendars"},"title":"List of Subscribed Calendars","description":"Subscription calendars.\nThese are managed in chat rooms where multiple members have created a group. You can view the calendars of the chat rooms you belong to."}},"title":"Talk Calendar","description":"There are two types of calendars in KakaoTalk:\n1. Basic Calendar: This is a personal calendar. While it is personal, it is not limited to viewing only your own events; you can view events shared by friends or events you were invited to.\n2. Subscription Calendar: This is a shared calendar managed by a group of members in a chat room. You can view the calendars of the chat rooms you are part of."},"description":"Retrieve KakaoTalk(카카오톡) calendar lists.\n\nRetrieves all KakaoTalk(카카오톡) calendar lists\n\nThere are two types of calendars: your primary calendars and calendars you are subscribed to.\nAll Kakao users have their own personal calendars, so there will be at least one calendar.\nThe primary calendar has an ID of `primary`, which is the user's own calendar.\n\nKakaoTalk(카카오톡) is a mobile messenger application from South Korea that also provides additional services."},{"method":"get","path":"/connector/kakao-talk/auth","name":"connector_kakao_talk_auth_get","strict":true,"parameters":[{"type":"object","properties":{"query":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"query":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"]}}}}],"human":[]},"output":{"type":"object","properties":{"access_token":{"type":"string","title":"Access token."},"token_type":{"type":"string","enum":["bearer"],"title":"Token type."},"refresh_token":{"type":"string","title":"Refresh token."},"scope":{"type":"string","title":"Scope of this access token."},"expires_in":{"type":"number","title":"Expiry time of the access token."},"refresh_token_expires_in":{"type":"number","title":"Expiry time of the refresh token."}},"required":["access_token","token_type","refresh_token","scope","expires_in","refresh_token_expires_in"],"title":"DTO for output of access token."},"description":"Issues a KakaoTalk(카카오톡) access token"},{"method":"post","path":"/connector/kakao-talk/refresh","name":"connector_kakao_talk_refresh_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"refresh_token":{"type":"string"}},"required":["refresh_token"],"title":"Conditions to Refresh Kakao Access Token"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"refresh_token":{"type":"string"}},"required":["refresh_token"],"title":"Conditions to Refresh Kakao Access Token"}}}}],"human":[]},"output":{"type":"object","properties":{"access_token":{"type":"string","title":"Access token."},"expires_in":{"type":"number","title":"Expiry time of the access token."},"token_type":{"type":"string","enum":["bearer"],"title":"Token type."}},"required":["access_token","expires_in","token_type"],"title":"Refresh Access Token"},"description":"Refreshes the KakaoTalk(카카오톡) access token"},{"method":"post","path":"/connector/kakao-map/search","name":"connector_kakao_map_search_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","x-wrtn-placeholder":"종로구 맛집","title":"검색 키워드"},"page":{"type":"integer","minimum":1,"maximum":45,"default":1,"title":"결과 페이지 번호"},"size":{"type":"integer","minimum":1,"maximum":15,"default":15,"title":"페이지 당 문서 수"}},"required":["query"],"title":"검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","x-wrtn-placeholder":"종로구 맛집","title":"검색 키워드"},"page":{"type":"integer","minimum":1,"maximum":45,"default":1,"title":"결과 페이지 번호"},"size":{"type":"integer","minimum":1,"maximum":15,"default":15,"title":"페이지 당 문서 수"}},"required":["query"],"title":"검색 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"documents":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"장소 ID"},"place_name":{"type":"string","title":"장소명, 업체명"},"category_name":{"type":"string","title":"카테고리 이름"},"category_group_code":{"type":"string","enum":["MT1","CS2","PS3","SC4","AC5","PK6","OL7","SW8","BK9","CT1","AG2","PO3","AT4","AD5","FD6","CE7","HP8","PM9",""],"title":"중요 카테고리만 그룹핑한 카테고리 그룹 코드"},"category_group_name":{"type":"string","enum":["대형마트","편의점","어린이집,유치원","학교","학원","주차장","주유소, 충전소","지하철역","은행","문화시설","중개업소","공공기관","관광명소","숙박","음식점","카페","병원","약국",""],"title":"중요 카테고리만 그룹핑한 카테고리 그룹명"},"phone":{"type":"string","title":"전화번호"},"address_name":{"type":"string","title":"전체 지번 주소"},"road_address_name":{"type":"string","title":"전체 도로명 주소"},"x":{"type":"string","title":"X 좌표값","description":"경위도인 경우 longitude (경도)"},"y":{"type":"string","title":"Y 좌표값","description":"경위도인 경우 latitude(위도)"},"place_url":{"type":"string","format":"uri","title":"장소 상세페이지 URL"},"distance":{"type":"string","title":"중심좌표까지의 거리","description":"(단, x,y 파라미터를 준 경우에만 존재) 단위 meter"}},"required":["id","place_name","category_name","category_group_code","category_group_name","phone","address_name","road_address_name","x","y","place_url","distance"],"title":"검색 결과"},"title":"검색 결과 목록"},"meta":{"type":"object","properties":{"total_count":{"type":"integer","title":"검색어에 검색된 문서 수"},"pageable_count":{"type":"integer","maximum":45,"title":"한 번에 표시되는 문서 수"},"is_end":{"type":"boolean","title":"현재 페이지가 마지막 페이지인지 여부","description":"값이 false면 다음 요청 시 page 값을 증가시켜 다음 페이지 요청 가능"},"same_name":{"type":"object","properties":{"keyword":{"type":"string","title":"질의어에서 지역 정보를 제외한 키워드","description":"'중앙로 맛집'을 검색한 경우 '맛집'에 해당하는 부분을 추출한 값"},"region":{"type":"array","items":{"type":"string"},"title":"질의어에서 인식된 지역의 리스트","description":"'중앙로 맛집'을 검색한 경우 '중앙로'에 해당하는 부분을 추출한 값"},"selected_region":{"type":"string","title":"검색에 활용된 지역 정보"}},"required":["keyword","region","selected_region"]}},"required":["total_count","pageable_count","is_end"],"title":"메타 정보"}},"required":["documents","meta"],"title":"검색 결과"},"description":"카카오 맵 검색.\n\n카카오맵으로 검색합니다"},{"method":"post","path":"/connector/kakao-navi/get-future-directions","name":"connector_kakao_navi_get_future_directions_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"departure_time":{"type":"string","x-wrtn-placeholder":"202406202000","title":"출발 시간","description":"YYYYMMDDHHMM 형식으로 현재 시간 이후 시간 설정"},"origin":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"127.111202,37.394912","title":"출발지","description":"X좌표,Y좌표 형식의 경도, 위도 값"},"destination":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"127.111202,37.394912","title":"목적지","description":"X좌표,Y좌표 형식의 경도, 위도 값"}},"required":["departure_time","origin","destination"],"title":"요청 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"departure_time":{"type":"string","x-wrtn-placeholder":"202406202000","title":"출발 시간","description":"YYYYMMDDHHMM 형식으로 현재 시간 이후 시간 설정"},"origin":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"127.111202,37.394912","title":"출발지","description":"X좌표,Y좌표 형식의 경도, 위도 값"},"destination":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?,[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"127.111202,37.394912","title":"목적지","description":"X좌표,Y좌표 형식의 경도, 위도 값"}},"required":["departure_time","origin","destination"],"title":"요청 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"trans_id":{"type":"string","title":"경로 요청 ID"},"routes":{"type":"array","items":{"type":"object","properties":{"result_code":{"type":"number","enum":[0,1,101,102,103,104,105,106,107,201,202,203,204,205,206,207,301,302,303,304],"title":"경로 탐색 결과 코드"},"result_msg":{"type":"string","title":"경로 탐색 결과 메시지"},"summary":{"type":"object","properties":{"origin":{"type":"object","properties":{"name":{"type":"string","title":"장소 이름"},"x":{"type":"number","title":"X 좌표 (경도)"},"y":{"type":"number","title":"Y 좌표 (위도)"}},"required":["name","x","y"]},"destination":{"type":"object","properties":{"name":{"type":"string","title":"장소 이름"},"x":{"type":"number","title":"X 좌표 (경도)"},"y":{"type":"number","title":"Y 좌표 (위도)"}},"required":["name","x","y"]},"waypoints":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"장소 이름"},"x":{"type":"number","title":"X 좌표 (경도)"},"y":{"type":"number","title":"Y 좌표 (위도)"}},"required":["name","x","y"]},"title":"경유지 정보"},"priority":{"type":"string","title":"경로 탐색 우선순위 옵션"},"fare":{"type":"object","properties":{"taxi":{"type":"number","title":"택시 요금(원)"},"toll":{"type":"number","title":"통행 요금(원)"}},"required":["taxi","toll"],"title":"요금 정보"},"duration":{"type":"integer","title":"전체 검색 결과 이동 시간(초)"},"bound":{"type":"object","properties":{"min_x":{"type":"number","title":"바운딩 박스 왼쪽 하단의 X 좌표"},"min_y":{"type":"number","title":"바운딩 박스 왼쪽 하단의 Y 좌표"},"max_x":{"type":"number","title":"바운딩 박스 오른쪽 상단의 X 좌표"},"max_y":{"type":"number","title":"바운딩 박스 오른쪽 상단의 Y 좌표"}},"required":["min_x","min_y","max_x","max_y"],"title":"모든 경로를 포함하는 사각형의 바운딩 박스(Bounding box)"},"distance":{"type":"integer","title":"섹션 거리(미터)"}},"required":["origin","destination","waypoints","priority","fare","duration","bound","distance"]},"sections":{"type":"array","items":{"type":"object","properties":{"distance":{"type":"integer","title":"섹션 거리(미터)"},"duration":{"type":"integer","title":"전체 검색 결과 이동 시간(초)"},"bound":{"type":"object","properties":{"min_x":{"type":"number","title":"바운딩 박스 왼쪽 하단의 X 좌표"},"min_y":{"type":"number","title":"바운딩 박스 왼쪽 하단의 Y 좌표"},"max_x":{"type":"number","title":"바운딩 박스 오른쪽 상단의 X 좌표"},"max_y":{"type":"number","title":"바운딩 박스 오른쪽 상단의 Y 좌표"}},"required":["min_x","min_y","max_x","max_y"],"title":"모든 경로를 포함하는 사각형의 바운딩 박스(Bounding box)"},"roads":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"도로 명"},"distance":{"type":"integer","title":"도로 길이(미터)"},"duration":{"type":"integer","title":"예상 이동 시간(초)","description":"현재 예상 이동 시간 및 실제 이동 시간은 동일한 값으로 설정"},"traffic_speed":{"type":"number","title":"현재 교통 정보 속도(km/h)"},"traffic_state":{"type":"number","enum":[0,1,2,3,4,6],"title":"현재 교통 정보 상태"},"vertexes":{"type":"array","items":{"type":"number"},"title":"X, Y 좌표로 구성된 1차원 배열"}},"required":["name","distance","duration","traffic_speed","traffic_state","vertexes"],"title":"도로 정보"},"title":"도로 정보"},"guides":{"type":"array","items":{"type":"object","properties":{"type":{"type":"number","enum":[0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,100,101,300,301,1000],"title":"안내 타입"},"guidance":{"type":"string","title":"안내 문구"},"road_index":{"type":"integer","title":"현재 가이드에 대한 링크 인덱스"},"name":{"type":"string","title":"장소 이름"},"x":{"type":"number","title":"X 좌표 (경도)"},"y":{"type":"number","title":"Y 좌표 (위도)"},"duration":{"type":"integer","title":"전체 검색 결과 이동 시간(초)"},"distance":{"type":"integer","title":"섹션 거리(미터)"}},"required":["type","guidance","road_index","name","x","y","duration","distance"],"title":"안내 정보"},"title":"안내 정보"}},"required":["distance","duration","bound"],"title":"구간 별 경로 정보","description":"경유지가 존재할 경우 경유지 수에 1을 더한 값만큼의 섹션이 생성된다."},"title":"구간 별 경로 정보"}},"required":["result_code","result_msg"]},"title":"경로 정보"}},"required":["trans_id","routes"],"title":"성공 응답"},"description":"카카오 네비 길찾기.\n\n카카오 네비로 길을 찾습니다."},{"method":"post","path":"/connector/google-slides/presentations/{id}/export/hanshow","name":"connector_google_slides_presentations__export_hanshow_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","description":" 변환할 프레젠테이션 아이디"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"슬라이드를 pptx로 내보내는 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","description":" 변환할 프레젠테이션 아이디"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"슬라이드를 pptx로 내보내는 조건"}}}}]},"output":{"type":"object","properties":{"hanshow":{"type":"string","format":"uri","title":"파일 다운로드 링크"}},"required":["hanshow"]},"description":"프레젠테이션을 한쇼 파일로 내보내기.\n\n구글 슬라이드 프레젠테이션을 한쇼 형식으로 내보내요!"},{"method":"post","path":"/connector/google-slides/presentations/{id}/export/power-point","name":"connector_google_slides_presentations__export_power_point_postById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","description":" 변환할 프레젠테이션 아이디"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"슬라이드를 pptx로 내보내는 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","description":" 변환할 프레젠테이션 아이디"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"슬라이드를 pptx로 내보내는 조건"}}}}]},"output":{"type":"object","properties":{"powerPoint":{"type":"string","format":"uri","title":"파일 다운로드 링크"}},"required":["powerPoint"]},"description":"프레젠테이션을 PPT 파일로 내보내기.\n\n구글 슬라이드 프레젠테이션을 파워포인트 형식으로 내보내요!\n\n이야기 또는 그림책을 생성할 때 사용될 수 있는 커넥터입니다."},{"method":"post","path":"/connector/google-slides/get-presentations","name":"connector_google_slides_get_presentations_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"presentationId":{"type":"string","title":"검색의 대상이 되는 프레젠테이션 ID."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."}},"required":["presentationId","secretKey"],"title":"프레젠테이션 검색을 위한 조건 DTO."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"presentationId":{"type":"string","title":"검색의 대상이 되는 프레젠테이션 ID."}},"required":["presentationId"],"title":"프레젠테이션 검색을 위한 조건 DTO."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"프레젠테이션 검색을 위한 조건 DTO."}}}}]},"output":{"type":"object","properties":{"title":{"type":"string","nullable":true,"title":"프레젠테이션의 제목."},"pageSize":{"type":"object","properties":{"width":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}},"height":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}}}},"presentationId":{"type":"string","nullable":true,"title":"프레젠네이션의 ID."}}},"description":"Google Slides 프레젠테이션 조회.\n\nGoogle Slides 프레젠테이션을 조회합니다."},{"method":"put","path":"/connector/google-slides/presentations/{id}/image-slide","name":"connector_google_slides_presentations_image_slide_putById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","description":" 슬라이드를 추가할 프레젠테이션 id"},"body":{"type":"object","properties":{"templates":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["Vertical"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"세로형"},{"type":"object","properties":{"type":{"type":"string","enum":["Square"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"정방형","description":"이야기 또는 그림책을 생성할 때는 정방형으로만 사용해주세요."},{"type":"object","properties":{"type":{"type":"string","enum":["Landscape"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"가로형"},{"type":"object","properties":{"type":{"type":"string","enum":["Entire"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"전체보기 가로형(16:9)"},{"type":"object","properties":{"type":{"type":"string","enum":["QuarterDivision"],"title":"템플릿의 타입."},"contents":{"type":"array","title":"슬라이드의 내용물","items":{"oneOf":[{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]}]},"minItems":4,"maxItems":4}},"required":["type","contents"],"title":"4분할 정방형 (컷 만화형)"}]},"title":"한 번에 생성하고자 하는 템플릿의 목록.","description":"이야기 또는 그림책을 생성할 때는 정방형으로만 사용해주세요."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."}},"required":["templates","secretKey"],"title":"슬라이드를 붙이기 위한 요청 DTO."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","description":" 슬라이드를 추가할 프레젠테이션 id"},"body":{"type":"object","properties":{"templates":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["Vertical"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"세로형"},{"type":"object","properties":{"type":{"type":"string","enum":["Square"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"정방형","description":"이야기 또는 그림책을 생성할 때는 정방형으로만 사용해주세요."},{"type":"object","properties":{"type":{"type":"string","enum":["Landscape"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"가로형"},{"type":"object","properties":{"type":{"type":"string","enum":["Entire"],"title":"템플릿의 타입."},"contents":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"],"title":"슬라이드의 내용물"}},"required":["type","contents"],"title":"전체보기 가로형(16:9)"},{"type":"object","properties":{"type":{"type":"string","enum":["QuarterDivision"],"title":"템플릿의 타입."},"contents":{"type":"array","title":"슬라이드의 내용물","items":{"oneOf":[{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]},{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"이미지의 URL."},"text":{"type":"object","properties":{"text":{"type":"string","nullable":true,"title":"추가할 텍스트"},"objectId":{"type":"string","nullable":true,"title":"아이디"}}}},"required":["url","text"]}]},"minItems":4,"maxItems":4}},"required":["type","contents"],"title":"4분할 정방형 (컷 만화형)"}]},"title":"한 번에 생성하고자 하는 템플릿의 목록.","description":"이야기 또는 그림책을 생성할 때는 정방형으로만 사용해주세요."}},"required":["templates"],"title":"슬라이드를 붙이기 위한 요청 DTO."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"슬라이드를 붙이기 위한 요청 DTO."}}}}]},"output":{"type":"object","properties":{"title":{"type":"string","nullable":true,"title":"프레젠테이션의 제목."},"pageSize":{"type":"object","properties":{"width":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}},"height":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}}}},"presentationId":{"type":"string","nullable":true,"title":"프레젠네이션의 ID."}}},"description":"Google Slides 프레젠테이션에 이미지 및 텍스트 슬라이드를 추가합니다.\n\nGoogle Slides 프레젠테이션에 슬라이드를 추가합니다.\n\n이야기 또는 그림책을 생성할 때 connector/google-slides/createPresentation 커넥터와 함께 사용해주세요.\n\n이야기 또는 그림책을 생성할 때 connector/google-slides/createPresentation 커넥터로 부터 생성된 프레젠테이션에 이 커넥터를 사용해서 생성된 이야기와 그림을 넣어주세요.\n\n이야기 또는 그림책을 생성할 때 해당 커넥터를 사용하지 않으면 빈 그림책이 될 수 있으니 조심해주세요."},{"method":"post","path":"/connector/google-slides/presentations","name":"connector_google_slides_presentations_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."},"title":{"type":"string","nullable":true,"title":"프레젠테이션의 제목."}},"required":["secretKey"],"title":"Google Slides의 프레젠테이션을 생성하기 위한 요청 DTO."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","nullable":true,"title":"프레젠테이션의 제목."}},"required":[],"title":"Google Slides의 프레젠테이션을 생성하기 위한 요청 DTO."}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/presentations"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"Google Slides의 프레젠테이션을 생성하기 위한 요청 DTO."}}}}]},"output":{"type":"object","properties":{"title":{"type":"string","nullable":true,"title":"프레젠테이션의 제목."},"pageSize":{"type":"object","properties":{"width":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}},"height":{"type":"object","properties":{"magnitude":{"type":"number","nullable":true,"title":"규모."},"unit":{"type":"string","enum":["UNIT_UNSPECIFIED","EMU","PT"],"nullable":true,"title":"크기 단위."}}}}},"presentationId":{"type":"string","nullable":true,"title":"프레젠네이션의 ID."}}},"description":"Google Slides 프레젠테이션 생성.\n\nGoogle Slides 프레젠테이션을 생성합니다.\n\n이야기 또는 그림책을 생성할 때 사용될 수 있는 커넥터입니다.\n\n이야기 또는 그림책을 생성할 때 connector/google-slides/appendImageSlide 커넥터와 함께 사용해주세요.\n\n이야기 또는 그림책을 생성할 때 이 커넥터로 새로운 프레젠테이션을 생성하고 connector/google-slides/appendImageSlide 커넥터를 사용해서 생성된 이야기와 그림을 슬라이드에 넣어주세요.\n\n이야기 또는 그림책을 생성할 때 connector/google-slides/appendImageSlide 커넥터와 같이 사용하지 않으면 빈 그림책이 될 수 있으니 조심해주세요."},{"method":"post","path":"/connector/imweb/get-products","name":"connector_imweb_get_products_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"prod_status":{"type":"string","enum":["sale","soldout","nosale"],"title":"the sales status of a product\n\nYou can deliver the value when you want to inquire based on the sales status of the product.\nYou can select 'sale', 'soldout', 'nosale'."},"category":{"type":"string","title":"product category code\n\nYou can also search with the product's category code,\nbut this code is randomly determined by `Imweb`, so it's currently unavailable.\nIf you don't know the exact category code, it's better not to use it."},"key":{"type":"string","title":"API Key\n\nThis can be found in the configuration settings on the `Imweb`."},"secret":{"type":"string","title":"API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`."}},"required":["key","secret"],"title":"상품 조회 요청 DTO."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"prod_status":{"type":"string","enum":["sale","soldout","nosale"],"title":"the sales status of a product\n\nYou can deliver the value when you want to inquire based on the sales status of the product.\nYou can select 'sale', 'soldout', 'nosale'."},"category":{"type":"string","title":"product category code\n\nYou can also search with the product's category code,\nbut this code is randomly determined by `Imweb`, so it's currently unavailable.\nIf you don't know the exact category code, it's better not to use it."},"key":{"type":"string","title":"API Key\n\nThis can be found in the configuration settings on the `Imweb`."},"secret":{"type":"string","title":"API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`."}},"required":["key","secret"],"title":"상품 조회 요청 DTO."}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"no":{"type":"number","title":"Product number"},"prod_status":{"type":"string","enum":["sale","soldout","nosale"],"title":"Status of product"},"categories":{"type":"array","items":{"type":"string"},"title":"Category codes"},"custom_prod_code":{"type":"string","nullable":true,"title":"Custom product code"},"name":{"type":"string","title":"Name of product"},"images":{"type":"array","items":{"type":"string"},"title":"File code of product images"},"image_url":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"title":"File urls\n\nCan't call it right away because it's not a completed URL."},"content":{"type":"string","title":"Detailed description"},"simple_content":{"type":"string","title":"Simple description of product's content","description":"Text that contains html tags and is generally difficult to use"},"simple_content_plain":{"type":"string","title":"Simple description of product's content","description":"Pure string except html tag"},"use_mobile_prod_content":{"type":"boolean","title":"Whether or not mobile details are used"},"mobile_content":{"type":"string","title":"Description of mobile details"},"prod_type":{"type":"string","enum":["normal","digital","subscribe"],"title":"Setting the sales method\n\nIt will be 'normal', 'digital' and 'subscribe' product."},"prod_type_data":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"use_limit":{"type":"boolean","title":"Download Limit Setting"},"period":{"type":"integer","title":"Period Limit"},"maximum":{"type":"integer","title":"Usage Limit"}},"required":["use_limit","period","maximum"]},{"type":"object","properties":{"group_code":{"type":"string","title":"Target Group Code"},"period":{"type":"integer","title":"Group Retention Period (Days)"}},"required":["group_code","period"]}]},"title":"Sales method data"},"use_pre_sale":{"type":"boolean","title":"Whether the sales period is set or not"},"pre_sale_start_date":{"type":"number","title":"Timestamp for sale"},"pre_sale_end_date":{"type":"number","title":"Timestamp is the end of the sale period"},"price":{"type":"number","title":"Price"},"price_org":{"type":"number","title":"The price before the discount\n\nTo provide an experience as if the product was discounted,\nthe seller can also set the original price of the product differently from the actual price it sells.\nThis is a common sales promotion strategy in commerce."},"price_tax":{"type":"boolean","title":"Whether taxes are included or not"},"price_none":{"type":"boolean","title":"Whether or not there is no price"},"point":{"type":"object","properties":{"type":{"type":"string","enum":["common","individual"],"title":"Point Configuration Type"},"value_type":{"type":"string","enum":["percent","price"],"title":"Point Accumulation Unit"},"value":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"Point Value\n\nCalculated as a percentage if `value_type` is percent"}},"required":["type"],"title":"Point Configuration Data Structure"},"product_discount_options":{"type":"array","items":{"type":"string","enum":["coupon","point","shopping_group_dc"]},"title":"Set Discount Usage."},"weight":{"type":"string","title":"Product Weight"},"stock":{"type":"object","properties":{"stock_use":{"type":"boolean","title":"Use Stock"},"stock_unlimit":{"type":"boolean","title":"Allow Orders After Stock Depletion"},"stock_no_option":{"oneOf":[{"type":"integer"},{"type":"string","enum":[""]}],"title":"Product Stock Quantity"},"sku_no_option":{"oneOf":[{"type":"integer"},{"type":"string","enum":[""]}],"title":"Product Stock Number (SKU)"}},"required":["stock_use","stock_unlimit","stock_no_option","sku_no_option"],"title":"Product Stock Information Data Structure"},"origin":{"type":"string","title":"Origin"},"maker":{"type":"string","title":"Manufacturer"},"brand":{"type":"string","title":"Brand"},"badge":{"type":"object","properties":{"new":{"type":"boolean","title":"New Product"},"best":{"type":"boolean","title":"Best Product"},"md":{"type":"boolean","title":"MD Recommended"},"hot":{"type":"boolean","title":"High Demand"}},"required":["new","best","md","hot"],"title":"Badge Information Data Structure"},"sync":{"type":"object","properties":{"pay_product_name":{"type":"string","title":"Product Name for Naver and Kakao Shopping Exposure"},"event_words":{"type":"string","title":"Naver Shopping Event Phrase"},"naver_category":{"type":"string","title":"Naver Shopping Category ID"},"product_flag":{"type":"string","enum":["소매","도매","렌탈","대여","할부","예약판매","구매대행"],"title":"Naver Shopping Sales Method"},"product_condition":{"type":"string","enum":["신상품","중고","리퍼","전시","반품","스크래치"],"title":"Naver Shopping Product Condition"},"import_flag":{"type":"boolean","title":"Overseas Buying Agent"},"parallel_import":{"type":"boolean","title":"Parallel Import"},"is_culture_benefit":{"type":"boolean","title":"Cultural Performance Income Deduction"},"order_made":{"type":"boolean","title":"Made to Order"}},"required":["pay_product_name","event_words","naver_category","product_flag","product_condition","import_flag","parallel_import","is_culture_benefit","order_made"],"title":"External Integration Information Data Structure"},"etc":{"type":"object","properties":{"minimum_purchase_quantity":{"type":"integer","title":"Minimum Purchase Quantity"},"maximum_purchase_quantity":{"type":"integer","title":"Maximum Quantity per Purchase"},"member_maximum_purchase_quantity":{"type":"integer","title":"Maximum Quantity per Member Purchase"},"optional_limit_type":{"type":"string","enum":["relative","limit","unique"],"title":"Maximum Purchase Quantity Limit Type for Free Options"},"optional_limit":{"type":"integer","title":"Maximum Purchase Quantity for Free Options\n\nMaximum Purchase Quantity Limit"},"use_unipass_number":{"type":"string","enum":["default","Y","N"]},"adult":{"type":"boolean","title":"Minor Purchase Restriction"}},"required":["minimum_purchase_quantity","maximum_purchase_quantity","member_maximum_purchase_quantity","optional_limit_type","use_unipass_number","adult"],"title":"Miscellaneous Settings Data Structure"},"prodinfo":{"type":"array","items":{},"title":"Product Information Disclosure\n\nType is not specified, so it is denoted as an array of `any`."},"is_exist_options":{"type":"string","enum":["Y","N"],"title":"Existence of Product Options"},"is_mix":{"type":"string","enum":["Y","N"],"title":"Combination Option for Product"},"add_time":{"type":"number","title":"Product Add Time Timestamp"},"edit_time":{"type":"number","title":"Product Last Edit Time Timestamp"}},"required":["no","prod_status","categories","custom_prod_code","name","images","image_url","content","simple_content","simple_content_plain","use_mobile_prod_content","prod_type","use_pre_sale","price","price_tax","price_none","point","product_discount_options","weight","stock","origin","maker","brand","badge","sync","etc","prodinfo","is_exist_options","is_mix","add_time","edit_time"]}},"description":"Get my sales product from `Imweb`.\n\nLook up the sales product\n\nThe `Imweb` seller uses the seller's authentication key and secret to import his or her product.\n`Imweb` is a Korean webbuilder site that offers a similar experience to the service called Wix.\nIf a commerce site is opened using `Imweb`,\nsellers can register the items they are selling,\nwhich is only available to sellers who open `Imweb` pages and is intended to bring up their products.\nSellers must provide their API keys and secrets to import `Imweb` products."},{"method":"post","path":"/connector/imweb/auth","name":"connector_imweb_auth_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"key":{"type":"string","title":"API Key\n\nThis can be found in the configuration settings on the `Imweb`."},"secret":{"type":"string","title":"API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`."}},"required":["key","secret"],"title":"Imweb Access Token Request DTO\n\nAn API Key and Secret Key must be issued first to use the Rest API.\nThese keys are generated on a site-by-site basis."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"key":{"type":"string","title":"API Key\n\nThis can be found in the configuration settings on the `Imweb`."},"secret":{"type":"string","title":"API Secret Key\n\nThis can be found in the configuration settings on the `Imweb`."}},"required":["key","secret"],"title":"Imweb Access Token Request DTO\n\nAn API Key and Secret Key must be issued first to use the Rest API.\nThese keys are generated on a site-by-site basis."}}}}],"human":[]},"output":{"type":"object","properties":{"msg":{"type":"string","enum":["SUCCESS"],"title":"Response Message"},"code":{"type":"number","enum":[200],"title":"IMWEB Custom Code"},"http_code":{"type":"number","enum":[200],"title":"HTTP Status Code"},"access_token":{"type":"string","title":"Access Token"}},"required":["msg","code","http_code","access_token"],"title":"Imweb Token Issuance Request Response DTO"},"description":"아임웹 액세스 토큰 발급."},{"method":"post","path":"/connector/open-data/getRTMSDataSvcSHRent","name":"connector_open_data_getRTMSDataSvcSHRent_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"useOfRenewalRight":{"type":"string","title":"갱신요구권사용"},"yearOfConstruction":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"건축년도"},"typeOfContract":{"type":"string","title":"계약구분"},"contractPeriod":{"type":"string","title":"계약기간"},"year":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"년"},"legalDistrict":{"type":"string","title":"법정동"},"depositAmount":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"보증금액"},"month":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":12}],"title":"월"},"monthlyRentAmount":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"월세금액"},"day":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":31}],"title":"일"},"previousContractDeposit":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약보증금"},"previousContractMonthlyRent":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약월세"},"areaCode":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"지역코드"}},"required":["useOfRenewalRight","typeOfContract","contractPeriod","year","legalDistrict","depositAmount","month","monthlyRentAmount","day","previousContractDeposit","previousContractMonthlyRent","areaCode"]}}},"required":["data"]},"description":"Retrieve multi-family lease and rental information.\n\n[Ministry of Land, Infrastructure and Transport] Retrieves information on single-family homes and multi-family homes for lease or rent.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getRTMSDataSvcOffiRent","name":"connector_open_data_getRTMSDataSvcOffiRent_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"exclusiveArea":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"전용면적"},"lotNumber":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"지번"},"floor":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"층"},"useOfRenewalRight":{"type":"string","title":"갱신요구권사용"},"typeOfContract":{"type":"string","title":"계약구분"},"contractPeriod":{"type":"string","title":"계약기간"},"year":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"년"},"legalDistrict":{"type":"string","title":"법정동"},"month":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":12}],"title":"월"},"day":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":31}],"title":"일"},"previousContractDeposit":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약보증금"},"previousContractMonthlyRent":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약월세"},"areaCode":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"지역코드"}},"required":["exclusiveArea","lotNumber","floor","useOfRenewalRight","typeOfContract","contractPeriod","year","legalDistrict","month","day","previousContractDeposit","previousContractMonthlyRent","areaCode"]}}},"required":["data"]},"description":"Retrieve officetel lease and rental information.\n\n[Ministry of Land, Infrastructure and Transport] Retrieves officetel lease and rent information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getRTMSDataSvcAptRent","name":"connector_open_data_getRTMSDataSvcAptRent_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"LAWD_CD":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"DEAL_YMD":{"type":"string","x-wrtn-placeholder":"202201","title":"실거래 자료의 계약년월(6자리)"}},"required":["LAWD_CD","DEAL_YMD"]}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"useOfRenewalRight":{"type":"string","title":"갱신요구권사용"},"yearOfConstruction":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"건축년도"},"typeOfContract":{"type":"string","title":"계약구분"},"contractPeriod":{"type":"string","title":"계약기간"},"year":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"년"},"legalDistrict":{"type":"string","title":"법정동"},"depositAmount":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"보증금액"},"apartment":{"type":"string","title":"아파트"},"month":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":12}],"title":"월"},"monthlyRentAmount":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"월세금액"},"day":{"oneOf":[{"type":"string"},{"type":"integer","minimum":1,"maximum":31}],"title":"일"},"exclusiveArea":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"전용면적"},"previousContractDeposit":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약보증금"},"previousContractMonthlyRent":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"종전계약월세"},"lotNumber":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"지번"},"areaCode":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"지역코드"},"floor":{"oneOf":[{"type":"string"},{"type":"integer"}],"title":"층"}},"required":["useOfRenewalRight","typeOfContract","contractPeriod","year","legalDistrict","depositAmount","apartment","month","monthlyRentAmount","day","exclusiveArea","previousContractDeposit","previousContractMonthlyRent","lotNumber","areaCode","floor"]}}},"required":["data"]},"description":"Retrieve apartment lease and rental information.\n\n[Ministry of Land, Infrastructure and Transport] Retrieves apartment lease and rent information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getLHLeaseInfo","name":"connector_open_data_getLHLeaseInfo_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"CNP_CD":{"type":"number","enum":[11,26,27,28,29,30,31,41,42,43,44,45,46,47,48,50,36110],"title":"지역 코드"},"SPL_TP_CD":{"type":"string","enum":["07","08","09","10","11","13","17"],"title":"공급유형코드"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["CNP_CD"],"title":"LH 임대주택 조회 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"CNP_CD":{"type":"number","enum":[11,26,27,28,29,30,31,41,42,43,44,45,46,47,48,50,36110],"title":"지역 코드"},"SPL_TP_CD":{"type":"string","enum":["07","08","09","10","11","13","17"],"title":"공급유형코드"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["CNP_CD"],"title":"LH 임대주택 조회 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"nextPage":{"type":"boolean","title":"다음 페이지 유무"},"data":{"type":"array","items":{"type":"object","properties":{"SUM_HSH_CNT":{"type":"string","x-wrtn-placeholder":"873","title":"총세대수"},"RFE":{"type":"string","x-wrtn-placeholder":"373500","title":"월임대료(원)"},"RNUM":{"type":"string","x-wrtn-placeholder":"1","title":"순번"},"HSH_CNT":{"type":"string","x-wrtn-placeholder":"72","title":"세대수"},"ARA_NM":{"type":"string","x-wrtn-placeholder":"서울특별시 강남구","title":"지역명"},"LS_GMY":{"type":"string","x-wrtn-placeholder":"45003000","title":"임대보증금"},"AIS_TP_CD_NM":{"type":"string","x-wrtn-placeholder":"국민임대","title":"공급유형명"},"SBD_LGO_NM":{"type":"string","x-wrtn-placeholder":"서울강남 3블록","title":"단지명"},"ALL_CNT":{"type":"string","x-wrtn-placeholder":"157","title":"전체건수"},"DDO_AR":{"type":"string","x-wrtn-placeholder":"46.71","title":"전용면적"},"MVIN_XPC_YM":{"type":"string","x-wrtn-placeholder":"201311","title":"최초입주년월"}},"required":["SUM_HSH_CNT","RFE","RNUM","HSH_CNT","ARA_NM","LS_GMY","AIS_TP_CD_NM","SBD_LGO_NM","ALL_CNT","DDO_AR","MVIN_XPC_YM"]}}},"required":["nextPage","data"],"title":"LH 임대주택 조회 응답"},"description":"Retrieve LH rental housing information.\n\n[Korea Land and Housing Corporation] Retrieves information on LH rental housing complexes.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getParkingLot","name":"connector_open_data_getParkingLot_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"rdnmadr":{"type":"string","title":"소재지도로명주소"}}},{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"lnmadr":{"type":"string","title":"소재지지번주소"}}}],"description":"Conditions for querying parking lots"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"rdnmadr":{"type":"string","title":"소재지도로명주소"}}},{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"lnmadr":{"type":"string","title":"소재지지번주소"}}}],"description":"Conditions for querying parking lots"}}}}],"human":[]},"output":{"type":"object","properties":{"parkingLots":{"type":"array","items":{"type":"object","properties":{"prkplceNo":{"type":"string","title":"주차장관리번호"},"prkplceNm":{"type":"string","title":"주차장명"},"prkplceSe":{"type":"string","title":"주차장구분"},"prkplceType":{"type":"string","title":"주차장유형"},"rdnmadr":{"type":"string","title":"소재지도로명주소"},"lnmadr":{"type":"string","title":"소재지지번주소"},"prkcmprt":{"type":"string","title":"주차구획수"},"feedingSe":{"type":"string","title":"급지구분"},"enforceSe":{"type":"string","title":"부제시행구분"},"operDay":{"type":"string","title":"운영요일"},"weekdayOperOpenHhmm":{"type":"string","title":"평일운영시작시각"},"weekdayOperColseHhmm":{"type":"string","title":"평일운영종료시각"},"satOperOperOpenHhmm":{"type":"string","title":"토요일운영시작시각"},"satOperCloseHhmm":{"type":"string","title":"토요일운영종료시각"},"holidayOperOpenHhmm":{"type":"string","title":"공휴일운영시작시각"},"holidayCloseOpenHhmm":{"type":"string","title":"공휴일운영종료시각"},"parkingchrgeInfo":{"type":"string","title":"요금정보"},"basicTime":{"type":"string","title":"주차기본시간"},"basicCharge":{"type":"string","title":"주차기본요금"},"addUnitTime":{"type":"string","title":"추가단위시간"},"addUnitCharge":{"type":"string","title":"추가단위요금"},"dayCmmtktAdjTime":{"type":"string","title":"1일주차권요금적용시간"},"dayCmmtkt":{"type":"string","title":"1일주차권요금"},"monthCmmtkt":{"type":"string","title":"월정기권요금"},"metpay":{"type":"string","title":"결제방법"},"spcmnt":{"type":"string","title":"특기사항"},"institutionNm":{"type":"string","title":"관리기관명"},"phoneNumber":{"type":"string","title":"전화번호"},"latitude":{"type":"string","title":"위도"},"longitude":{"type":"string","title":"경도"},"pwdbsPpkZoneYn":{"type":"string","title":"장애인전용주차구역보유여부"},"referenceDate":{"type":"string","title":"데이터기준일자"},"instt_code":{"type":"string","title":"제공기관코드"},"instt_nm":{"type":"string","title":"제공기관기관명"}}},"title":"주차장 정보"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"totalCount":{"type":"number","title":"Total number of records"}},"required":["parkingLots","totalCount"],"title":"주차장 조회 응답"},"description":"Retrieve parking lot information.\n\n[National Information Society Agency] Retrieves parking lot information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getBuildingInfo","name":"connector_open_data_getBuildingInfo_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sigunguCd":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"bjdongCd":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"법정동 코드"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["sigunguCd","bjdongCd"],"title":"빌딩 조회 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sigunguCd":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"시군구 코드"},"bjdongCd":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","jmesPath":"rows[].{value:sigunguCd, label:sigunguNm}"},"title":"법정동 코드"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["sigunguCd","bjdongCd"],"title":"빌딩 조회 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"bulidings":{"type":"array","items":{"type":"object","properties":{"mainPurpsCdNm":{"type":"string","title":"주용도코드명"},"etcPurps":{"type":"string","title":"기타용도"},"roofCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"지붕코드"},"roofCdNm":{"type":"string","title":"지붕코드명"},"etcRoof":{"type":"string","title":"기타지붕"},"hhldCnt":{"type":"number","title":"세대수(세대)"},"fmlyCnt":{"type":"number","title":"가구수(가구)"},"heit":{"type":"number","title":"높이(m)"},"grndFlrCnt":{"type":"number","title":"지상층수"},"ugrndFlrCnt":{"type":"number","title":"지하층수"},"rideUseElvtCnt":{"type":"number","title":"승용승강기수"},"emgenUseElvtCnt":{"type":"number","title":"비상용승강기수"},"atchBldCnt":{"type":"number","title":"부속건축물수"},"atchBldArea":{"type":"number","title":"부속건축물면적(㎡)"},"totDongTotArea":{"type":"number","title":"총동연면적(㎡)"},"indrMechUtcnt":{"type":"number","title":"옥내기계식대수(대)"},"indrMechArea":{"type":"number","title":"옥내기계식면적(㎡)"},"oudrMechUtcnt":{"type":"number","title":"옥외기계식대수(대)"},"oudrMechArea":{"type":"number","title":"옥외기계식면적(㎡)"},"indrAutoUtcnt":{"type":"number","title":"옥내자주식대수(대)"},"indrAutoArea":{"type":"number","title":"옥내자주식면적(㎡)"},"oudrAutoUtcnt":{"type":"number","title":"옥외자주식대수(대)"},"oudrAutoArea":{"type":"number","title":"옥외자주식면적(㎡)"},"pmsDay":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"허가일"},"stcnsDay":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"착공일"},"useAprDay":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"사용승인일"},"pmsnoYear":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"허가번호년"},"pmsnoKikCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"허가번호기관코드"},"pmsnoKikCdNm":{"type":"string","title":"허가번호기관코드명"},"pmsnoGbCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"허가번호구분코드"},"pmsnoGbCdNm":{"type":"string","title":"허가번호구분코드명"},"hoCnt":{"type":"number","title":"호수(호)"},"engrGrade":{"type":"string","title":"에너지효율등급"},"engrRat":{"type":"number","title":"에너지절감율"},"engrEpi":{"type":"number","title":"EPI점수"},"gnBldGrade":{"type":"string","title":"친환경건축물등급"},"gnBldCert":{"type":"number","title":"친환경건축물인증점수"},"itgBldGrade":{"type":"string","title":"지능형건축물등급"},"itgBldCert":{"type":"number","title":"지능형건축물인증점수"},"crtnDay":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"생성일자"},"rnum":{"type":"number","title":"순번"},"platPlc":{"type":"string","title":"대지위치"},"sigunguCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"시군구코드"},"bjdongCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"법정동코드"},"platGbCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"대지구분코드"},"bun":{"type":"string","title":"번","description":"한국 주소 명칭 중 하나"},"ji":{"type":"string","title":"지","description":"한국 주소 명칭 중 하나"},"mgmBldrgstPk":{"type":"string","title":"관리건축물대장PK"},"regstrGbCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"대장구분코드"},"regstrGbCdNm":{"type":"string","title":"대장구분코드명"},"regstrKindCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"대장종류코드"},"regstrKindCdNm":{"type":"string","title":"대장종류코드명"},"newPlatPlc":{"type":"string","title":"도로명대지위치"},"bldNm":{"type":"string","title":"건물명"},"splotNm":{"type":"string","title":"특수지명"},"block":{"type":"string","title":"블록"},"lot":{"type":"string","title":"로트"},"bylotCnt":{"type":"number","title":"외필지수"},"naRoadCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"새주소도로코드"},"naBjdongCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"새주소법정동코드"},"naUgrndCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"새주소지상지하코드"},"naMainBun":{"type":"number","title":"새주소본번"},"naSubBun":{"type":"number","title":"새주소부번"},"dongNm":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"동명칭"},"mainAtchGbCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"주부속구분코드"},"mainAtchGbCdNm":{"type":"string","title":"주부속구분코드명"},"platArea":{"type":"number","title":"대지면적(㎡)"},"archArea":{"type":"number","title":"건축면적(㎡)"},"bcRat":{"type":"number","title":"건폐율(%)"},"totArea":{"type":"number","title":"연면적(㎡)"},"vlRatEstmTotArea":{"type":"number","title":"용적률산정연면적(㎡)"},"vlRat":{"type":"number","title":"용적률(%)"},"strctCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"구조코드"},"strctCdNm":{"type":"string","title":"구조코드명"},"etcStrct":{"type":"string","title":"기타구조"},"mainPurpsCd":{"oneOf":[{"type":"string"},{"type":"number"}],"title":"주용도코드"},"rserthqkDsgnApplyYn":{"oneOf":[{"type":"number","enum":[0,1]},{"type":"string","enum":[" "]}],"title":"내진설계적용여부"},"rserthqkAblty":{"type":"string","title":"내진능력"}},"required":["crtnDay","platPlc","sigunguCd","bjdongCd","mgmBldrgstPk"]},"title":"빌딩 정보 목록"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"totalCount":{"type":"number","title":"Total number of records"}},"required":["bulidings","totalCount"],"title":"빌딩 조회 응답"},"description":"Retrieve building registration information.\n\n[Ministry of Land, Infrastructure and Transport] Retrieves building registration information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getStandardRegionCodeList","name":"connector_open_data_getStandardRegionCodeList_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"locatadd_nm":{"type":"string","x-wrtn-placeholder":"Seoul Special City","title":"Region address name"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["locatadd_nm"],"title":"Request for Administrative Standard Code Lookup"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"locatadd_nm":{"type":"string","x-wrtn-placeholder":"Seoul Special City","title":"Region address name"},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"}},"required":["locatadd_nm"],"title":"Request for Administrative Standard Code Lookup"}}}}],"human":[]},"output":{"type":"object","properties":{"rows":{"type":"array","items":{"type":"object","properties":{"region_cd":{"type":"string","title":"Region code"},"sido_cd":{"type":"string","title":"City code"},"sgg_cd":{"type":"string","title":"District code"},"sigunguCd":{"type":"string","title":"City and District Code","description":"Combination of city code and district code"},"sigunguNm":{"type":"string","title":"District name"},"umd_cd":{"type":"string","title":"Town/Village code"},"ri_cd":{"type":"string","title":"Ri code"},"bjdongCd":{"type":"string","title":"Legal Dong code","description":"Combination of Town/Village code and Ri code"},"locatjumin_cd":{"type":"string","title":"Resident region code"},"locatjijuk_cd":{"type":"string","title":"Land region code"},"locatadd_nm":{"type":"string","title":"Region address name"},"locat_order":{"type":"integer","title":"Sequence"},"locat_rm":{"type":"string","title":"Remark"},"locathigh_cd":{"type":"string","title":"Parent region code"},"locallow_nm":{"type":"string","title":"Lowest region name"},"adpt_de":{"type":"string","title":"Date of creation"}},"required":["region_cd","sigunguNm"]}},"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"totalCount":{"type":"number","title":"Total number of records"}},"required":["rows","totalCount"],"title":"Result of Administrative Standard Code Lookup"},"description":"Retrieve administrative standard codes.\n\n[Ministry of the Interior and Safety] Retrieves administrative standard codes for domestic regions.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getStockPriceInfo","name":"connector_open_data_getStockPriceInfo_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"likeItmsNm":{"type":"string","maxLength":120,"x-wrtn-placeholder":"Samsung Electronics","title":"Keyword for stock name search"},"basDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"Base date","description":"Searches for data matching the search value and base date"}}},{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"likeItmsNm":{"type":"string","maxLength":120,"x-wrtn-placeholder":"Samsung Electronics","title":"Keyword for stock name search"},"beginBasDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"Start date (inclusive)","description":"Searches for data where the base date is greater than or equal to the search value"},"endBasDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"End date (exclusive)","description":"Searches for data where the base date is less than the search value"}}}],"description":"Conditions for querying market capitalization"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"likeItmsNm":{"type":"string","maxLength":120,"x-wrtn-placeholder":"Samsung Electronics","title":"Keyword for stock name search"},"basDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"Base date","description":"Searches for data matching the search value and base date"}}},{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"likeItmsNm":{"type":"string","maxLength":120,"x-wrtn-placeholder":"Samsung Electronics","title":"Keyword for stock name search"},"beginBasDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"Start date (inclusive)","description":"Searches for data where the base date is greater than or equal to the search value"},"endBasDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"End date (exclusive)","description":"Searches for data where the base date is less than the search value"}}}],"description":"Conditions for querying market capitalization"}}}}],"human":[]},"output":{"type":"object","properties":{"response":{"type":"object","properties":{"body":{"type":"object","properties":{"numOfRows":{"type":"integer","default":10,"title":"Number of results per page"},"pageNo":{"type":"integer","default":1,"title":"Page number"},"totalCount":{"type":"number","title":"Total number of records"},"items":{"type":"object","properties":{"item":{"type":"array","items":{"type":"object","properties":{"basDt":{"type":"string","x-wrtn-placeholder":"20220919","title":"Base date"},"srtnCd":{"type":"string","title":"Short code","description":"6-digit code shorter than stock code and uniquely guaranteed"},"isinCd":{"type":"string","title":"ISIN code","description":"International Securities Identification Number"},"itmsNm":{"type":"string","title":"Stock name"},"mrktCtg":{"type":"string","enum":["KOSPI","KOSDAQ","KONEX"],"title":"Market category"},"clpr":{"type":"string","title":"Closing price","description":"Final price formed at the end of regular trading hours"},"vs":{"type":"string","title":"Change","description":"Fluctuation compared to the previous day"},"fltRt":{"type":"string","title":"Rate of change","description":"Ratio of fluctuation compared to the previous day"},"mkp":{"type":"string","title":"Opening price","description":"Initial price formed after opening"},"hipr":{"type":"string","title":"Highest price","description":"Highest price during the day"},"lopr":{"type":"string","title":"Lowest price","description":"Lowest price during the day"},"trqu":{"type":"string","title":"Trading volume","description":"Cumulative total of trade quantities"},"trPrc":{"type":"string","title":"Trading amount","description":"Cumulative total of trade prices * quantities"},"lstgStCnt":{"type":"string","title":"Listed shares"},"mrktTotAmt":{"type":"string","title":"Market capitalization","description":"Closing price * listed shares"}},"required":["basDt","srtnCd","isinCd","itmsNm","mrktCtg","clpr","vs","fltRt","mkp","hipr","lopr","trqu","trPrc","lstgStCnt","mrktTotAmt"]}}},"required":["item"],"title":"Retrieved company information"}},"required":["numOfRows","pageNo","totalCount","items"]}},"required":["body"]}},"required":["response"],"title":"Result of querying market capitalization and stock information"},"description":"Retrieve market capitalization and stock information.\n\n[Financial Services Commission] Retrieves market capitalization and stock information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/open-data/getShortTermForecast","name":"connector_open_data_getShortTermForecast_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["latitude_and_longitude","grid_coordinates"],"title":"Definition of nx, ny\n\nuse 'latitude_and_longitude' or 'grid_coordinates'.\nThis property can never be used except for these two strings."},"nx":{"type":"number","title":"Longitude or x_position\n\nIf the type property in this object is 'latitude_and_longitude', this value means longitude.\nIf not, use x position value of grid coordinates in Korea."},"ny":{"type":"number","title":"Latitude or y_position\n\nIf the type property in this object is 'latitude_and_longitude', this value means latitude.\nIf not, use y position value of grid coordinates in Korea."}},"required":["type","nx","ny"],"title":"Weather query request conditions"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["latitude_and_longitude","grid_coordinates"],"title":"Definition of nx, ny\n\nuse 'latitude_and_longitude' or 'grid_coordinates'.\nThis property can never be used except for these two strings."},"nx":{"type":"number","title":"Longitude or x_position\n\nIf the type property in this object is 'latitude_and_longitude', this value means longitude.\nIf not, use x position value of grid coordinates in Korea."},"ny":{"type":"number","title":"Latitude or y_position\n\nIf the type property in this object is 'latitude_and_longitude', this value means latitude.\nIf not, use y position value of grid coordinates in Korea."}},"required":["type","nx","ny"],"title":"Weather query request conditions"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"baseDate":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"Date value composed of year, month, and day, e.g., `20240619`."},"baseTime":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"Time value indicating the exact hour, e.g., `1200`."},"category":{"type":"string","enum":["POP","PTY","PCP","REH","SNO","SKY","TMP","TMN","TMX","UUU","VVV","WAV","VEC","VEC","WSD","T1H","T1H","RN1"],"title":"Category","description":"Classification of what each value represents"},"nx":{"type":"number","title":"Longitude"},"ny":{"type":"number","title":"Latitude"},"obsrValue":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"Value corresponding to the category"}},"required":["baseDate","baseTime","category","nx","ny","obsrValue"],"title":"Weather query result","description":"Processed results"}},"description":"Retrieve today's weather from the Korea Meteorological Administration.\n\n[Korea Meteorological Administration] Retrieves today's weather information.\n\nLatitude and longitude coordinates are required for querying.\nWhen provided, the latitude and longitude will be used to get current weather data based on the 00 minute mark of each hour for that region.\nThe output will be converted from grid coordinates to latitude and longitude, and provide weather-related information such as current weather, wind direction, and wind speed for the region.\nThe currently provided information includes:\n\n- POP: Probability of Precipitation\n- PTY: Precipitation Type\n- PCP: Precipitation Amount in the Last Hour\n- REH: Humidity\n- SNO: Snowfall in the Last Hour\n- SKY: Sky Condition\n- TMP: Temperature in the Last Hour\n- TMN: Daily Minimum Temperature\n- TMX: Daily Maximum Temperature\n- UUU: Wind Speed (East-West Component)\n- VVV: Wind Speed (North-South Component)\n- WAV: Wave Height\n- VEC: Wind Direction\n- WSD: Wind Speed\n- T1H: Temperature\n- RN1: Precipitation Amount in the Last Hour\n- VEC: Wind Direction\n- T1H: Temperature\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea.\n\nThere are two types in request body.\nOne is 'latitude_and_longitude' and the other is 'grid_coordinates'.\nThis function uses grid coordinate values to express Korean geographical conditions inside,\nso grid coordinates must be entered.\nHowever, grid coordinates also allow for latitude values because it is difficult for users to know their local coordinates. In this case,\nyou must deliver the values of nx and ny together with the values of 'latitude_and_longitude'.\nIf the latitude hardness value is delivered,\nit is converted to grid coordinate value from the inside and used."},{"method":"post","path":"/connector/open-data/getCopyRight","name":"connector_open_data_getCopyRight_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"perPage":{"type":"integer","default":10,"title":"한 페이지 당 결과 수"},"page":{"type":"integer","default":1,"title":"페이지 번호"},"REG_ID":{"type":"string","title":"저작권 등록번호","description":"완전일치하는 저작권만 조회된다."},"CONT_TITLE":{"type":"string","x-wrtn-placeholder":"제호 (명칭)","title":"제호(명칭)"},"AUTHOR_NAME":{"type":"string","x-wrtn-placeholder":"저작자 이름","title":"저작권 이름"}},"title":"저작권 조회 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"perPage":{"type":"integer","default":10,"title":"한 페이지 당 결과 수"},"page":{"type":"integer","default":1,"title":"페이지 번호"},"REG_ID":{"type":"string","title":"저작권 등록번호","description":"완전일치하는 저작권만 조회된다."},"CONT_TITLE":{"type":"string","x-wrtn-placeholder":"제호 (명칭)","title":"제호(명칭)"},"AUTHOR_NAME":{"type":"string","x-wrtn-placeholder":"저작자 이름","title":"저작권 이름"}},"title":"저작권 조회 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"currentCount":{"type":"integer","title":"현재 페이지 개수"},"matchCount":{"type":"integer","title":"검색 조건에 일치하는 저작권 수"},"data":{"type":"array","items":{"type":"object","properties":{"REG_ID":{"type":"string","title":"저작권 등록번호","description":"완전일치하는 저작권만 조회된다."},"CONT_TITLE":{"type":"string","x-wrtn-placeholder":"제호 (명칭)","title":"제호(명칭)"},"AUTHOR_NAME":{"type":"string","x-wrtn-placeholder":"저작자 이름","title":"저작권 이름"},"REG_DATE":{"type":"string","format":"date","title":"저작권 등록일"}},"required":["REG_DATE"]},"title":"검색 결과"},"page":{"type":"integer","default":1,"title":"페이지 번호"},"perPage":{"type":"integer","default":10,"title":"한 페이지 당 결과 수"}},"required":["currentCount","matchCount","data"],"title":"저작권 조회 결과"},"description":"[Copyright Registration Information Service (New)].\n\n[Korea Copyright Commission] Searches for copyright information.\n\nThis Connect is based on data obtained from public data portals in Korea.\nIf you talk about a specific organization here, it is an organization in Korea, and information or deducible facts that data or statistics point to can also be limited to Korea."},{"method":"post","path":"/connector/prompt/generate","name":"connector_prompt_generate_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"user_request":{"type":"string","x-wrtn-placeholder":"제품 이름과 제품 특징을 참고해서 광고 문구를 기발하고 유머러스하게 만들어주세요.","title":"유저 요청 사항"},"system_prompt":{"type":"string","x-wrtn-placeholder":"친절한 어투로 말해주세요.","title":"시스템 프롬프트"}},"required":["user_request"],"title":"프롬프트 입력"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"user_request":{"type":"string","x-wrtn-placeholder":"제품 이름과 제품 특징을 참고해서 광고 문구를 기발하고 유머러스하게 만들어주세요.","title":"유저 요청 사항"},"system_prompt":{"type":"string","x-wrtn-placeholder":"친절한 어투로 말해주세요.","title":"시스템 프롬프트"}},"required":["user_request"],"title":"프롬프트 입력"}}}}],"human":[]},"output":{"type":"object","properties":{"result":{"type":"string","title":"입력된 프롬프트를 통해 받은 결과"}},"required":["result"],"title":"프롬프트를 통해 받은 결과"},"description":"프롬프트 노드.\n\nLLM에게 지시할 요청사항을 입력합니다."},{"method":"get","path":"/connector/korea-eximbank/exchange","name":"connector_korea_eximbank_exchange_get","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"output":{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"],"nullable":true},"description":"한국 수출입 은행 현재 환율 조회"},{"method":"post","path":"/connector/story-generator","name":"connector_story_generator_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string"},"chatHistory":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string"},"content":{"type":"string"}},"required":["role","content"]}},"previousStories":{"type":"array","items":{"type":"string"}}},"required":["query","chatHistory","previousStories"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string"},"chatHistory":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string"},"content":{"type":"string"}},"required":["role","content"]}},"previousStories":{"type":"array","items":{"type":"string"}}},"required":["query","chatHistory","previousStories"]}}}}],"human":[]},"output":{"type":"object","properties":{"done":{"type":"boolean","title":"Whether the story has reached a natural conclusion and is ready to be outputted","description":"Whether the story has reached a natural conclusion and is ready to be outputted."},"messageToUser":{"type":"string","title":"When there is not enough information to create the next story line, prompt the user for more information","description":"When there is not enough information to create the next story line, prompt the user for more information."},"storyLine":{"type":"string","title":"If the next story line can be generated, provide it here","description":"If the next story line can be generated, provide it here.\nOnly generate the story when you have a good idea of what the user wants.\nWhen the user is not sure, you can suggest stories but ask the user first before generating the story line."},"title":{"type":"string","title":"If the entire story has been generated, provide the title here","description":"If the entire story has been generated, provide the title here."}},"required":["done"],"description":"When there is not enough information to create the next story line, prompt the user for more information."},"description":"스토리 생성.\n\n유저의 입력을 기반으로 스토리를 짭니다.\n\n그림책 또는 이야기 생성을 위한 챗봇 워크플로우를 제작할 때 사용될 수 있는 커넥터입니다.\n\n스토리 이미지 생성 커넥터와 연계해서 사용해주세요.\n\nconnector/story-image-generator 커넥터를 사용하여 생성된 스토리를 기반으로 이미지를 생성해주세요.\n\n생성된 스토리와 이미지를 구글 슬라이드를 이용해서 내보내주세요.\n\nconnector/google-slides/presentations 커넥터를 사용하여 생성된 스토리와 이미지를 구글 슬라이드로 내보내주세요."},{"method":"post","path":"/connector/story-image-generator","name":"connector_story_image_generator_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"storyLine":{"type":"string","title":"이미지를 생성할 스토리.","description":"이미지를 생성할 스토리."},"previousStories":{"type":"array","items":{"type":"string"},"title":"이전 스토리들.","description":"이전에 있었던 스토리들."}},"required":["storyLine","previousStories"],"title":"이미지 생성을 위한 입력."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"storyLine":{"type":"string","title":"이미지를 생성할 스토리.","description":"이미지를 생성할 스토리."},"previousStories":{"type":"array","items":{"type":"string"},"title":"이전 스토리들.","description":"이전에 있었던 스토리들."}},"required":["storyLine","previousStories"],"title":"이미지 생성을 위한 입력."}}}}],"human":[]},"output":{"type":"object","properties":{"imageUrl":{"type":"string","title":"이미지 URL.","description":"생성된 이미지 URL입니다."}},"required":["imageUrl"]},"description":"스토리 이미지 생성.\n\n주어진 입력으로부터 이미지를 생성합니다.\n\n그림책 또는 이야기 생성을 위한 챗봇 워크플로우를 제작할 때 사용될 수 있는 커넥터입니다."},{"method":"post","path":"/connector/stable-diffusion-beta/generate","name":"connector_stable_diffusion_beta_generate_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"프롬프트","description":"생성하고자 하는 이미지에 포함하고 싶은 요소, 스타일, 주제 등을 구체적으로 적어주세요. 이 프롬프트는 모델이 이미지를 생성할 때 원하는 특징과 디테일을 반영하도록 지시합니다."},"image_ratio":{"type":"string","enum":["square","landscape","portrait"],"title":"이미지 사이즈","description":"생성할 이미지 사이즈 프리셋 입니다.\n\n가능한 값으로는 \"square\", \"landscape\", \"portrait\" 3가지만 가능합니다."},"style_preset":{"type":"string","enum":["3d-model","analog-film","anime","cinematic","comic-book","digital-art","enhance","fantasy-art","isometric","line-art","low-poly","modeling-compound","neon-punk","origami","photographic","pixel-art","tile-texture"],"title":"스타일 프리셋","description":"이미지를 특정한 스타일로 생성합니다.\n\n가능한 값으로는 \"3d-model\", \"analog-film\", \"anime\", \"cinematic\", \"comic-book\", \"digital-art\", \"enhance\", \"fantasy-art\", \"isometric\", \"line-art\", \"low-poly\", \"modeling-compound\", \"neon-punk\", \"origami\", \"photographic\", \"pixel-art\", \"tile-texture\" 16가지만 가능합니다."}},"required":["prompt","image_ratio"],"title":"이미지 생성기 설정"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"프롬프트","description":"생성하고자 하는 이미지에 포함하고 싶은 요소, 스타일, 주제 등을 구체적으로 적어주세요. 이 프롬프트는 모델이 이미지를 생성할 때 원하는 특징과 디테일을 반영하도록 지시합니다."},"image_ratio":{"type":"string","enum":["square","landscape","portrait"],"title":"이미지 사이즈","description":"생성할 이미지 사이즈 프리셋 입니다.\n\n가능한 값으로는 \"square\", \"landscape\", \"portrait\" 3가지만 가능합니다."},"style_preset":{"type":"string","enum":["3d-model","analog-film","anime","cinematic","comic-book","digital-art","enhance","fantasy-art","isometric","line-art","low-poly","modeling-compound","neon-punk","origami","photographic","pixel-art","tile-texture"],"title":"스타일 프리셋","description":"이미지를 특정한 스타일로 생성합니다.\n\n가능한 값으로는 \"3d-model\", \"analog-film\", \"anime\", \"cinematic\", \"comic-book\", \"digital-art\", \"enhance\", \"fantasy-art\", \"isometric\", \"line-art\", \"low-poly\", \"modeling-compound\", \"neon-punk\", \"origami\", \"photographic\", \"pixel-art\", \"tile-texture\" 16가지만 가능합니다."}},"required":["prompt","image_ratio"],"title":"이미지 생성기 설정"}}}}],"human":[]},"output":{"type":"object","properties":{"imgUrl":{"type":"string","format":"uri","contentMediaType":"image/*","title":"생성된 이미지 Url","description":"생성된 이미지 url"}},"required":["imgUrl"],"title":"이미지 생성 결과"},"description":"스테이블 디퓨전 이미지 생성기 노드.\n\n스테이블 디퓨전 모델을 이용하여 이미지를 생성합니다."},{"method":"post","path":"/connector/dall-e-3/generate","name":"connector_dall_e_3_generate_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"프롬프트","description":"이미지를 생성하기 위한 프롬프트"},"image_ratio":{"type":"string","enum":["square","landscape","portrait"],"title":"이미지 사이즈","description":"생성할 이미지 사이즈 프리셋 입니다.\n\n가능한 값으로는 \"square\", \"landscape\", \"portrait\" 3가지만 가능합니다."}},"required":["prompt","image_ratio"],"title":"이미지 생성을 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"프롬프트","description":"이미지를 생성하기 위한 프롬프트"},"image_ratio":{"type":"string","enum":["square","landscape","portrait"],"title":"이미지 사이즈","description":"생성할 이미지 사이즈 프리셋 입니다.\n\n가능한 값으로는 \"square\", \"landscape\", \"portrait\" 3가지만 가능합니다."}},"required":["prompt","image_ratio"],"title":"이미지 생성을 위한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"imgUrl":{"type":"string","format":"uri","contentMediaType":"image/*","title":"생성된 이미지 Url","description":"생성된 이미지 url"}},"required":["imgUrl"],"title":"이미지 생성 결과"},"description":"dall-e-3 이미지 생성기 노드.\n\ndall-e-3 모델을 이용하여 이미지를 생성합니다."},{"method":"post","path":"/connector/google-search","name":"connector_google_search_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"구글 검색.\n\n입력한 검색어를 구글에서 검색합니다."},{"method":"post","path":"/connector/google-search/wanted","name":"connector_google_search_wanted_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"원티드 채용 공고 검색.\n\n원티드에서 채용 공고를 검색합니다."},{"method":"post","path":"/connector/google-search/incruit","name":"connector_google_search_incruit_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"인크루트 채용 공고 검색.\n\n인크루트에서 채용 공고를 검색합니다."},{"method":"post","path":"/connector/google-search/saramin","name":"connector_google_search_saramin_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"사람인 채용 공고 검색.\n\n사람인에서 채용 공고를 검색합니다."},{"method":"post","path":"/connector/google-search/jumpit","name":"connector_google_search_jumpit_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"점핏 채용 공고 검색.\n\n점핏에서 채용 공고를 검색합니다."},{"method":"post","path":"/connector/google-search/careerly","name":"connector_google_search_careerly_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"꼭 들어가야하는 키워드","description":"검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"들어가면 좋은 키워드","description":"검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"들어가면 안되는 키워드","description":"검색 결과에 들어가면 안되는 키워드를 설정합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["andKeywords","max_results"],"title":"검색하기 위한 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"검색 결과 제목"},"link":{"type":"string","format":"uri","title":"검색 결과 링크"},"snippet":{"type":"string","title":"검색 결과 요약"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"검색 결과 thumbnail"}},"required":["title","link"],"title":"검색 결과"}},"description":"커리어리 검색.\n\n커리어리에서 게시물을 검색합니다."},{"method":"post","path":"/connector/google-shopping/aladine","name":"connector_google_shopping_aladine_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"알라딘 검색.\n\n상품을 알라딘에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/ali-express","name":"connector_google_shopping_ali_express_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"알리 익스프레스 검색.\n\n상품을 알리 익스프레스에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/coupang","name":"connector_google_shopping_coupang_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"쿠팡 검색.\n\n상품을 쿠팡에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/eql","name":"connector_google_shopping_eql_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"EQL 검색.\n\n상품을 EQL에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/iherb","name":"connector_google_shopping_iherb_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"아이허브 검색.\n\n상품을 아이허브에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/market-kurly","name":"connector_google_shopping_market_kurly_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"마켓컬리 검색.\n\n상품을 마켓컬리에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/oco","name":"connector_google_shopping_oco_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"OCO 검색.\n\n상품을 OCO에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/olive-young","name":"connector_google_shopping_olive_young_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"올리브영 검색.\n\n상품을 올리브영에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/twenty-nine-centimeter","name":"connector_google_shopping_twenty_nine_centimeter_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"29cm 검색.\n\n상품을 29cm에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/uniqlo","name":"connector_google_shopping_uniqlo_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"유니클로 검색.\n\n상품을 유니클로에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/yes-twenty-four","name":"connector_google_shopping_yes_twenty_four_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"yes24 검색.\n\n상품을 yes24에서 검색합니다."},{"method":"post","path":"/connector/google-shopping/musinsa","name":"connector_google_shopping_musinsa_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","max_results"],"title":"상품 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"상품명"},"link":{"type":"string","format":"uri","enum":["#"],"title":"상품 링크"},"price":{"type":"string","title":"상품 가격","description":"₩57,600 형식"},"source":{"type":"string","title":"상품 출처"},"deliveryCost":{"type":"string","title":"배송비"},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"상품 이미지"}},"required":["title","link","price","thumbnail"],"title":"상품 검색 결과"}},"description":"무신사 검색.\n\n상품을 무신사에서 검색합니다."},{"method":"post","path":"/connector/google-ads/generateKeywordIdeas/keywordsAndUrl","name":"connector_google_ads_generateKeywordIdeas_keywordsAndUrl_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keywords":{"type":"array","items":{"type":"string"},"minItems":1,"title":"키워드 생성을 위한 검색 키워드"},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"url":{"type":"string","title":"광고 키워드 아이디어 생성에 참조할 URL."}},"required":["keywords","secretKey","url"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keywords":{"type":"array","items":{"type":"string"},"minItems":1,"title":"키워드 생성을 위한 검색 키워드"},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"url":{"type":"string","title":"광고 키워드 아이디어 생성에 참조할 URL."}},"required":["keywords","url"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"results":{"type":"array","items":{"type":"object","properties":{"keywordIdeaMetrics":{"type":"object","properties":{"competition":{"type":"string","enum":["LOW","MEDIUM","HIGH"],"title":"검색어에 대한 경쟁 수준"},"monthlySearchVolumes":{"type":"array","items":{"type":"object","properties":{"month":{"type":"string","enum":["JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER"],"title":"검색량이 발생한 달"},"year":{"type":"string","title":"검색량이 발생한 연도"},"monthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","nullable":true,"title":"해당 달의 대략적인 검색 수","description":"null 값은 해당 월에 대한 검색량을 확인할 수 없음을 나타냅니다."}},"required":["month","year","monthlySearches"]},"title":"지난 12개월 동안 이 검색어가 실행된 대략적인 검색 횟수"},"avgMonthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"지난 12개월 간의 이 검색어에 대한 대략적인 월별 검색 수"},"competitionIndex":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"경쟁 지수"},"lowTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 마이크로 단위 페이지 상단 입찰가 하위 범위 (20번째 백분위수)"},"highTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 상세 페이지 상단 입찰가 (80번째 백분위수)"}},"required":["monthlySearchVolumes","avgMonthlySearches","competitionIndex"]},"text":{"type":"string","title":"키워드"}},"required":["keywordIdeaMetrics","text"]},"title":"결과 목록"},"totalSize":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"전체 결과 수"},"nextPageToken":{"type":"string","nullable":true,"title":"다음 페이지를 조회할 때 사용할 수 있는 토큰","description":"다음 페이지가 없을 경우에는 조회 불가능"}},"required":["results","totalSize"]},"description":"키워드와 URL을 통한 키워드 생성.\n\n구글 광고를 위한 키워드를 추천받아요!\n\nGoogle Ads에서 광고를 집행하기 위해서는 키워드들을 등록해야 합니다.\n키워드는 광고의 엔드 유저들을 타겟팅하기 위해 등록되어야 하며, 이는 Google Ads의\n리소스 중 `adGroup`에 매핑되는 `adGroupCriteria` 중 하나입니다.\n이 커넥터는 그러한 키워드를 추천받기 위한 기능으로 사용자가 등록하고자 했던\n키워드들과 URL을 입력 시 그에 파생될 수 있는 다른 키워드들을 추천해줍니다.\n\n요청 결과는 키워드들의 목록과 각 키워드들의 경쟁 지수, 단가, 광고 등록 시 예상되는 지표 값들이 조회됩니다.\n\n이 커넥터는 성인 광고를 위한 키워드를 제외하며, 언어적 조건은 한국어, 지리적 조건은 한국(South Korea)으로 설정되어 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/generateKeywordIdeas/keywords","name":"connector_google_ads_generateKeywordIdeas_keywords_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keywords":{"type":"array","items":{"type":"string"},"minItems":1,"title":"키워드 생성을 위한 검색 키워드"},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["keywords","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keywords":{"type":"array","items":{"type":"string"},"minItems":1,"title":"키워드 생성을 위한 검색 키워드"},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["keywords"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"results":{"type":"array","items":{"type":"object","properties":{"keywordIdeaMetrics":{"type":"object","properties":{"competition":{"type":"string","enum":["LOW","MEDIUM","HIGH"],"title":"검색어에 대한 경쟁 수준"},"monthlySearchVolumes":{"type":"array","items":{"type":"object","properties":{"month":{"type":"string","enum":["JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER"],"title":"검색량이 발생한 달"},"year":{"type":"string","title":"검색량이 발생한 연도"},"monthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","nullable":true,"title":"해당 달의 대략적인 검색 수","description":"null 값은 해당 월에 대한 검색량을 확인할 수 없음을 나타냅니다."}},"required":["month","year","monthlySearches"]},"title":"지난 12개월 동안 이 검색어가 실행된 대략적인 검색 횟수"},"avgMonthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"지난 12개월 간의 이 검색어에 대한 대략적인 월별 검색 수"},"competitionIndex":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"경쟁 지수"},"lowTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 마이크로 단위 페이지 상단 입찰가 하위 범위 (20번째 백분위수)"},"highTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 상세 페이지 상단 입찰가 (80번째 백분위수)"}},"required":["monthlySearchVolumes","avgMonthlySearches","competitionIndex"]},"text":{"type":"string","title":"키워드"}},"required":["keywordIdeaMetrics","text"]},"title":"결과 목록"},"totalSize":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"전체 결과 수"},"nextPageToken":{"type":"string","nullable":true,"title":"다음 페이지를 조회할 때 사용할 수 있는 토큰","description":"다음 페이지가 없을 경우에는 조회 불가능"}},"required":["results","totalSize"]},"description":"키워드를 통한 키워드 생성.\n\n구글 광고를 위한 키워드를 추천받아요!\n\nGoogle Ads에서 광고를 집행하기 위해서는 키워드들을 등록해야 합니다.\n키워드는 광고의 엔드 유저들을 타겟팅하기 위해 등록되어야 하며, 이는 Google Ads의\n리소스 중 `adGroup`에 매핑되는 `adGroupCriteria` 중 하나입니다.\n이 커넥터는 그러한 키워드를 추천받기 위한 기능으로 사용자가 등록하고자 했던\n키워드들을 입력 시 그에 파생될 수 있는 다른 키워드들을 추천해줍니다.\n\n요청 결과는 키워드들의 목록과 각 키워드들의 경쟁 지수, 단가, 광고 등록 시 예상되는 지표 값들이 조회됩니다.\n\n이 커넥터는 성인 광고를 위한 키워드를 제외하며, 언어적 조건은 한국어, 지리적 조건은 한국(South Korea)으로 설정되어 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/generateKeywordIdeas/url","name":"connector_google_ads_generateKeywordIdeas_url_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"광고 키워드 아이디어 생성에 참조할 URL."},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["url","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"광고 키워드 아이디어 생성에 참조할 URL."},"pageSize":{"type":"integer","minimum":1,"maximum":10000,"title":"한 페이지 당 결과의 수"},"pageToken":{"type":"string","title":"다음 페이지 토큰","description":"이전 요청으로부터 받을 수 있는 페이지 토큰을 사용한다."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["url"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"results":{"type":"array","items":{"type":"object","properties":{"keywordIdeaMetrics":{"type":"object","properties":{"competition":{"type":"string","enum":["LOW","MEDIUM","HIGH"],"title":"검색어에 대한 경쟁 수준"},"monthlySearchVolumes":{"type":"array","items":{"type":"object","properties":{"month":{"type":"string","enum":["JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER"],"title":"검색량이 발생한 달"},"year":{"type":"string","title":"검색량이 발생한 연도"},"monthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","nullable":true,"title":"해당 달의 대략적인 검색 수","description":"null 값은 해당 월에 대한 검색량을 확인할 수 없음을 나타냅니다."}},"required":["month","year","monthlySearches"]},"title":"지난 12개월 동안 이 검색어가 실행된 대략적인 검색 횟수"},"avgMonthlySearches":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"지난 12개월 간의 이 검색어에 대한 대략적인 월별 검색 수"},"competitionIndex":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"경쟁 지수"},"lowTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 마이크로 단위 페이지 상단 입찰가 하위 범위 (20번째 백분위수)"},"highTopOfPageBidMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"키워드의 상세 페이지 상단 입찰가 (80번째 백분위수)"}},"required":["monthlySearchVolumes","avgMonthlySearches","competitionIndex"]},"text":{"type":"string","title":"키워드"}},"required":["keywordIdeaMetrics","text"]},"title":"결과 목록"},"totalSize":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"전체 결과 수"},"nextPageToken":{"type":"string","nullable":true,"title":"다음 페이지를 조회할 때 사용할 수 있는 토큰","description":"다음 페이지가 없을 경우에는 조회 불가능"}},"required":["results","totalSize"]},"description":"URL을 통한 키워드 생성.\n\n구글 광고를 위한 키워드를 추천받아요!\n\nGoogle Ads에서 광고를 집행하기 위해서는 키워드들을 등록해야 합니다.\n키워드는 광고의 엔드 유저들을 타겟팅하기 위해 등록되어야 하며, 이는 Google Ads의\n리소스 중 `adGroup`에 매핑되는 `adGroupCriteria` 중 하나입니다.\n이 커넥터는 그러한 키워드를 추천받기 위한 기능으로 사용자가 등록하고자 했던\nURL을 입력 시 그에 파생될 수 있는 다른 키워드들을 추천해줍니다.\n\n요청 결과는 키워드들의 목록과 각 키워드들의 경쟁 지수, 단가, 광고 등록 시 예상되는 지표 값들이 조회됩니다.\n\n이 커넥터는 성인 광고를 위한 키워드를 제외하며, 언어적 조건은 한국어, 지리적 조건은 한국(South Korea)으로 설정되어 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/customerClientLink","name":"connector_google_ads_customerClientLink_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"뤼튼을 관리자로 등록하기.\n\n해당 유저의 광고 계정 관리자로 뤼튼을 지정해요\n\n특정 구글 계정에 대하여 Google Ads API를 호출하기 위해서는 해당 광고 계정을 소유하거나 또는 관리자로 등록되어야 합니다.\n이 커넥터는 `Wrtn` 광고 계정을 고객의 관리자로 등록하기 위해 유저의 모든 구글 광고 계정에 일종의 초대장을 보내는 커넥터입니다.\n해당 커넥터가 실행된 다음 Gmail을 통해 고객 계정에 등록되어 있는 이메일이 전송됩니다.\n메일을 받으신 분께서는 해당 메일을 통해 대시보드로 이동하여 `Wrtn` 계정에 관리자 권한을 줄 수 있습니다.\n`Wrtn`이 관리자로 등록된 경우, Google Ads에 생성되어 있는 다른 API들을 사용할 수 있게 됩니다.\n\n이 관리자 지정은 키워드 추천 등 `customerId`를 인자로 받지 않는 커넥터들을 제외한 모든 Google Ads 커넥터 호출에 선행되어야 합니다.\n하지만 이 커넥터를 호출했다고 하더라도 유저의 승인 없이 `Wrtn`이 관리자로 지정되는 일은 없으니 걱정할 필요는 없습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/get-customers","name":"connector_google_ads_get_customers_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"고객 아이디","description":"고객마다 고유한 값을 가지고 있다."},"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/customerClients\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"고객 리소스 명"},"descriptiveName":{"type":"string","title":"지정된 이름"},"currencyCode":{"type":"string","title":"통화 단위, 통화 코드","description":"'USD', 'EUR', 'KRW' 등을 의미"}},"required":["id","resourceName","currencyCode"]}},"description":"광고 계정을 조회합니다.\n\n고객의 광고 계정을 가져와요\n\n유저의 액세스 토큰을 이용하여 `Wrtn`이 관리자로 있는 계정 중 해당 유저의 광고 계정, 즉 `customer`를 조회합니다.\n유저가 광고 계정이 있다고 하더라도 `Wrtn`이 관리자로 있지 않을 경우에는 리스트에 조회되지 않습니다.\n따라서 `Wrtn`을 관리자로 등록한 적이 없다면 `POST connector/google-ads/customerClientLink` 커넥터를 호출해야 합니다.\n\n또한 이 커넥터에서는 한국 통화 단위인 `KRW`를 사용하지 않는 광고 계정은 필터링됩니다.\n이렇게 하는 까닭은 추후 다른 캠페인 예산 수정이나 광고 상태 변경 커넥터에서 실수가 발생할 일을 방지하기 위함입니다.\nGoogle Ads 커넥터를 통해 광고를 생성할 때 각 계정의 통화 단위에 따라 예산 설정에 휴먼 에러가 발생할 수도 있기 때문입니다.\n예컨대 통화 단위가 `USD`인 계정을 `KRW`인 계정처럼 예산을 등록할 경우 그 환율만큼의 예산 차이가 발생할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/get-campaigns","name":"connector_google_ads_get_campaigns_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"campaign":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"},"advertisingChannelType":{"type":"string","enum":["DEMAND_GEN","DISPLAY","HOTEL","LOCAL","LOCAL_SERVICES","MULTI_CHANNEL","PERFORMANCE_MAX","SEARCH","SHOPPING","SMART","TRAVEL","UNKNOWN","UNSPECIFIED","VIDEO"],"title":"캠페인 광고 채널"},"name":{"type":"string","title":"캠페인 이름"},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 일자"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 일자"}},"required":["resourceName","status","advertisingChannelType","name","id","startDate","endDate"],"title":"구글 광고 캠페인"},"campaignBudget":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaignBudgets\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"캠페인 예산 리소스 명"},"amountMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"예산 (마이크로 단위)"}},"required":["resourceName","amountMicros"]}},"required":["campaign","campaignBudget"],"title":"캠페인 정보"}},"description":"캠페인 목록을 조회합니다.\n\n구글 고객 계정의 캠페인 목록을 가져와요\n\n유저에게 `customerId`를 넘겨 받아 그 고객 광고 계정에 있는 캠페인들을 조회합니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n캠페인은 구글 리소스 중 `campaign`에 해당하는 것이며 광고 채널, 예산과 광고들의 집행 시작 날짜, 종료 날짜를 담당합니다.\n채널에는 반응형 검색 광고(=responsive search ad), 반응형 디스플레이 광고(=responsive display ad) 등 구글 광고 상품을 의미합니다.\n만약 캠페인이 검색 광고라면 광고 그룹과 광고 역시 검색 광고만 존재합니다.\n유저는 이 커넥터를 통해 자신이 가진 캠페인과 캠페인의 상태를 조회하고, 원하는 캠페인에 광고 그룹을 생성하는 등 이후 액션에 활용할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/get-ad-groups","name":"connector_google_ads_get_ad_groups_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"campaignId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"부모 캠페인의 아이디","description":"해당 캠페인의 아이디만 검색하고 싶을 경우"},"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹의 리소스 명","description":"해당 광고 그룹 리소스 명으로만 검색하고 싶을 경우"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"campaignId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"부모 캠페인의 아이디","description":"해당 캠페인의 아이디만 검색하고 싶을 경우"},"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹의 리소스 명","description":"해당 광고 그룹 리소스 명으로만 검색하고 싶을 경우"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"campaign":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"}},"required":["id","resourceName","status"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroup":{"type":"object","properties":{"type":{"type":"string","enum":["SEARCH_STANDARD","DISPLAY_STANDARD"],"title":"광고 그룹의 타입"},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 그룹의 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹 리소스 명","description":"`customers/${number}/adGroups/${number}` 형식"}},"required":["type","id","resourceName"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroupAds":{"type":"array","items":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"},"policySummary":{"type":"object","properties":{"approvalStatus":{"type":"string","enum":["APPROVED","APPROVED_LIMITED","AREA_OF_INTEREST_ONLY","DISAPPROVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 승인 여부","description":"구글에서 해당 광고가 송출되어도 무방한지 판단한 내용입니다."},"reviewStatus":{"type":"string","enum":["ELIGIBLE_MAY_SERVE","REVIEWED","REVIEW_IN_PROGRESS","UNDER_APPEAL","UNKNOWN","UNSPECIFIED"],"title":"광고의 검토 상태","description":"검토가 완료된 광고만이 승인, 비승인 여부를 알 수 있습니다."}},"required":["approvalStatus","reviewStatus"],"title":"광고 심사 및 정책에 대한 평가 내역"}},"required":["resourceName","policySummary"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"광고 그룹 광고의 목록"},"keywords":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"resourceName":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1"},"criterionId":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"]}},"required":["text","resourceName","criterionId","matchType"]},"title":"키워드 목록"}},"required":["campaign","adGroup","adGroupAds","keywords"]}},"description":"광고 그룹 목록을 조회합니다.\n\n구글 고객 계정의 광고 그룹 목록을 가져와요\n\n유저에게 `customerId`를 넘겨 받아 그 고객 광고 계정에 있는 광고 그룹(=adGroup)들을 조회합니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n만약 `campaignId`를 함께 넘겨받을 경우 해당 캠페인의 자식 광고 그룹들만을 조회합니다.\n광고 그룹은 타겟팅을 담당하는 영역이며, 또한 광고(ad)의 부모 이기도 합니다.\n이 커넥터의 결과로는 광고 그룹의 부모가 되는 캠페인의 간단한 정보와 광고 그룹의 정보,\n해당 광고 그룹에 속한 광고의 목록 및 현재 상태, 간단한 정보들을 담고 있습니다.\n또한 광고 그룹에 연결되어 있는 키워드들의 정보 또한 담겨 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/get-ads","name":"connector_google_ads_get_ads_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 상태"},"policySummary":{"type":"object","properties":{"approvalStatus":{"type":"string","enum":["APPROVED","APPROVED_LIMITED","AREA_OF_INTEREST_ONLY","DISAPPROVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 승인 여부","description":"구글에서 해당 광고가 송출되어도 무방한지 판단한 내용입니다."},"reviewStatus":{"type":"string","enum":["ELIGIBLE_MAY_SERVE","REVIEWED","REVIEW_IN_PROGRESS","UNDER_APPEAL","UNKNOWN","UNSPECIFIED"],"title":"광고의 검토 상태","description":"검토가 완료된 광고만이 승인, 비승인 여부를 알 수 있습니다."}},"required":["approvalStatus","reviewStatus"],"title":"광고 심사 및 정책에 대한 평가 내역"}},"required":["resourceName","status","policySummary"],"description":"From T, pick a set of properties whose keys are in the union K"}},"description":"캠페인 광고 목록을 조회합니다.\n\n구글 고객 계정의 광고 목록을 가져와요\n\n유저에게 `customerId`를 넘겨 받아 그 고객 광고 계정에 있는 광고(=ad)들을 조회합니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n광고는 캠페인, 광고 그룹, 광고로 이루어진 트리 구조의 말단에 존재하는 노드로 소재를 담당하는 구간이며,\n또한 엔드 유저에게 노출되는 단위입니다.\n광고 그룹(=adGroup)의 리소스 이름을 인자로 함께 전달할 경우 해당 광고 그룹에 속한 광고만을 조회합니다.\n이 커넥터의 목적은 유저의 광고가 현재 집행 중인 상태인지 아닌지 파악하기 위함입니다.\n`Wrtn` 관리자의 경우 유저가 Google Ads 대시보드에서 직접 유저의 캠페인과 광고 그룹 상태를 변경하지 않는 한 캠페인과 광고 그룹을 `PAUSED` 상태로 변경하지 않습니다.\n따라서, 일반적인 경우, 광고의 상태가 `ENABLED`이면 광고는 집행되며 `PAUSED`이면 광고는 중단된 것으로 이해합니다.\n다시 말하지만, `Wrtn` 커넥터에서는 캠페인이나 광고 그룹의 상태는 변경하지 않습니다.\n\n이 기능은 광고를 조회하는 것 외에 광고가 제대로 집행되고 있는지 체크하기 위해서 사용될 수도 있습니다.\n각 광고에서는 광고 심사 및 정책에 대한 평가 내역이 존재하는데, 이는 `PolicySummary` 라는 프로퍼티로 존재합니다.\n이 프로퍼티에는 광고의 승인 여부가 존재하며 `APPROVED` 상태는 곧 Google의 심사가 승인되어 적격 판정을 받은 것을 의미합니다.\n\n광고 상태 변경은 `PATCH connector/google-ads/campaigns/ads/status`에서 변경할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/ad-groups/get-metrics","name":"connector_google_ads_ad_groups_get_metrics_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"date":{"type":"string","format":"date","title":"통계 조회 날짜"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["date","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"date":{"type":"string","format":"date","title":"통계 조회 날짜"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["date"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"metrics":{"type":"object","properties":{"impressions":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"노출 수"},"clicks":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"클릭 수"},"costMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 지출 (마이크로 단위)","description":"1,000,000분의 1로 원화 가치 표시"},"videoViews":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"비디오 뷰"},"averagePageViews":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"평균 페이지 뷰"},"videoQuartileP25Rate":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"동영상을 25% 본 수"},"videoQuartileP50Rate":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"동영상을 50% 본 수"},"videoQuartileP75Rate":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"동영상을 75% 본 수"},"videoQuartileP100Rate":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"동영상을 100% 본 수"}},"required":["impressions","clicks","costMicros","videoViews"]},"adGroupAd":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"}},"required":["resourceName"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["metrics","adGroupAd"]}},"description":"광고 그룹의 성과(metrics)를 조회합니다.\n\n구글 고객 계정 광고 당 지표를 조회해요\n\n유저에게 `customerId`를 넘겨 받아 그 고객 광고 그룹에 대하여 통계 지표들을 조회합니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n유저는 이 커넥터를 통해 특정 날짜의 광고 지표를 조회할 수 있으며,\n이 지표에는 노출수, 클릭수, 비디오 조회 수, 비디오 재생 범위에 따른 조회 수, 평균 페이지 수를 확인할 수 있습니다.\n또한 광고 그룹의 리소스 이름 등 조회한 내역에 대한 간단한 정보를 확인하실 수 있습니다.\n이와 더불어 `costMicros` 정보를 제공하고 있는데, 이는 마이크로 단위의 광고 지출이며 실제로 집행된 금액을 의미합니다.\n만약 이 수치가 `1,000,000` 이라면 통화 단위가 `KRW`인 경우 1원을 사용한 것입니다.\n이 수치는 캠페인 예산과 달리 실제로 사용된 금액이며, 구글 정책 상 예산보다 약간 더 광고 비용이 지출될 수도 있습니다.\n또한, 해당 캠페인 내 광고 그룹의 지출 총합은 캠페인의 지출 총합과 같아야 합니다.\n\n유저는 이 커넥터를 통해 자신의 광고가 비용과 성과 측면에서 효율적으로 집행되고 있는지를 확인할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/campaigns/ads/get-keywords","name":"connector_google_ads_campaigns_ads_get_keywords_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ad-groups","jmesPath":"[].adGroup.{value:resourceName, label:resourceName}"},"title":"광고 그룹 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["adGroupResourceName","secretKey"],"title":"키워드 조회 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ad-groups","jmesPath":"[].adGroup.{value:resourceName, label:resourceName}"},"title":"광고 그룹 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["adGroupResourceName"],"title":"키워드 조회 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"키워드 조회 조건"}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"adGroupCriterion":{"type":"object","properties":{"type":{"type":"string","enum":["KEYWORD"],"title":"타입"},"keyword":{"type":"object","properties":{"text":{"type":"string","title":"키워드 텍스트"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"],"title":"키워드 일치 타입"}},"required":["text","matchType"]},"resourceName":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1","title":"광고 그룹 표준 리소스 이름\n\n`customers/${number}/adGroupCriteria/number~${number}` 형식"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"광고 그룹 표준 상태"},"criterionId":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 그룹 표준 아이디"},"text":{"type":"string","title":"키워드 텍스트"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"],"title":"키워드 일치 타입"}},"required":["type","keyword","resourceName","status","criterionId","text","matchType"]}},"required":["adGroupCriterion"]}},"description":"광고에 키워드를 추가해요.\n\n구글 고객 계정의 광고에 검색 키워드를 추가해요\n\n엄밀히 말해 광고 그룹(=adGroup)에 광고 키워드를 추가합니다.\n\n이 커넥터에서는 편의 상 광고의 리소스 명을 받아 해당 광고의 부모 광고 그룹을 찾은 다음 키워드를 넣게끔 되어 있습니다.\n이 커넥터의 결과 값은 키워드 추가 후 전체 키워드를 재조회하여 제대로 추가되어 있는지 유저가 확인할 수 있도록 돕습니다.\n하지만 키워드가 추가되었다고 해서 모두 광고에 사용되는 것은 아닙니다.\n키워드는 구글에서 심사를 통해 타겟팅에 사용되며, 이 때 키워드는 부적합 심사를 받아 광고 키워드에서 제외될 수도 있습니다.\n다만, 다른 키워드들이 있다면 광고는 무사히 동작할 것이기 때문에, 유저가 유입될 수 있도록 다양한 키워드들을 등록하는 것이 유리합니다.\n\n키워드에 대한 추천 커넥터들 또한 존재합니다.\n\n이 커넥터는 고객 계정에 대한 인증으로서 광고 계정을 유저에게 인자로 전달받지만 이 또한 선택적입니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"patch","path":"/connector/google-ads/campaigns/ads/status","name":"connector_google_ads_campaigns_ads_status_patch","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED"],"title":"광고 상태"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["adGroupAdResourceName","status","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED"],"title":"광고 상태"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["adGroupAdResourceName","status"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"광고의 상태를 변경해요.\n\n구글 고객 계정의 광고 상태를 변경해요\n\n유저에게 광고 계정의 아이디와 광고그룹 내 광고의 리소스 이름 (=`adGroupAd`의 `ResourceName`) 을 전달 받아 광고 상태를 변경합니다.\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n이 커넥터에서 지원하는 광고 상태는 `ENABLED`와 `PAUSED` 두 상태이며 각각 광고의 집행과 중단을 의미합니다.\n`Wrtn` 관리자 계정은 캠페인과 광고 그룹의 상태는 변경하지 않으면서 광고의 상태만을 변경하기 때문에,\n유저가 Google Ads 대시보드에서 직접 캠페인과 광고 그룹의 상태를 변경하지 않은 이상 광고의 상태는 곧 지출이 발생하는지 여부를 의미합니다.\n만약 유저가 광고 그룹의 상태를 변경하고 싶다면 광고 그룹의 상태를 변경하는 대신 광고 그룹을 조회하여 해당 광고 그룹 내 모든 광고의 상태를 변경하십시오.\n만약 유저가 캠페인의 상태를 변경하고 싶다면 캠페인의 상태를 변경하는 대신 캠페인을 조회하여 해당 캠페인 내 모든 광고의 상태를 변경하십시오.\n단, 캠페인의 상태를 변경할 경우, Google Ads 광고 구조 상 캠페인, 광고 그룹을 타고 내려가 모든 광고를 종료하여야 합니다.\n\n또한 우리 커넥터 상에서는 광고의 삭제를 지원하지 않습니다.\n만약 캠페인, 광고 그룹, 광고 등의 삭제를 원하는 유저가 있다면 해당 노드의 모든 자식 광고들을 `PAUSED` 상태로 변경하는 것을 추천합니다.\n광고의 삭제는 이전 성과와 지표를 조회할 수 있는 수단을 잃는 것이기 떄문에 광고 삭제 대신 광고를 종료하는 것이 추후 광고 재집행에도 유리합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/campaigns/ads/keywords","name":"connector_google_ads_campaigns_ads_keywords_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ad-groups","jmesPath":"[].adGroup.{value:resourceName, label:resourceName}"},"title":"키워드를 추가할 광고 그룹의 리소스 네임"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["adGroupResourceName","keywords","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ad-groups","jmesPath":"[].adGroup.{value:resourceName, label:resourceName}"},"title":"키워드를 추가할 광고 그룹의 리소스 네임"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["adGroupResourceName","keywords"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1"}},"description":"광고에 키워드를 추가해요.\n\n구글 고객 계정의 광고에 검색 키워드를 추가해요\n\n엄밀히 말해 해당 광고의 부모인 광고 그룹(=adGroup)에 키워드를 추가합니다.\n키워드는 광고 그룹에 추가되는 대상이기 때문에 자식 광고들에 모두 적용됩니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"delete","path":"/connector/google-ads/campaigns/ads/keywords","name":"connector_google_ads_campaigns_ads_keywords_erase","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"resourceNames":{"type":"array","items":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-keywords","jmesPath":"[].adGroupCriterion.{value:resourceName, label:text}"}},"title":"삭제할 키워드의 아이디"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["resourceNames","secretKey"],"title":"키워드 삭제 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"resourceNames":{"type":"array","items":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-keywords","jmesPath":"[].adGroupCriterion.{value:resourceName, label:text}"}},"title":"삭제할 키워드의 아이디"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["resourceNames"],"title":"키워드 삭제 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"키워드 삭제 조건"}}}}]},"description":"광고에 키워드를 삭제해요.\n\n구글 고객 계정의 특정 광고에서 키워드를 삭제해요\n\n유저에게 키워드 (=`AdGroupCriterion`)의 리소스 이름을 받아 모두 삭제합니다.\n키워드는 `AdGroupCriterion` 중 `type`이 `KEYWORD`인 것으로 다른 타입의 리소스가 존재할 수 있기 때문에 이에 주의해야 합니다.\n만약 모든 키워드가 삭제된 광고라면 키워드 삭제 시 광고 집행이 중단되는 등 영향이 갈 수 있기 때문에 주의해야 합니다.\n\n또한, 광고의 키워드를 삭제할 경우, 해당 광고의 부모인 광고 그룹을 공유하는 다른 광고에도 영향이 갈 수 있습니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/campaigns/ads/get-details","name":"connector_google_ads_campaigns_ads_get_details_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["adGroupAdResourceName","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"adGroupAdResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-ads","jmesPath":"[].{value:resourceName, label:resourceName}"},"title":"광고 그룹 광고의 리소스 명"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["adGroupAdResourceName"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 현재 상태"},"ad":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/ads\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고의 리소스 명"},"detail":{"oneOf":[{"type":"object","properties":{"descriptions":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"등록된 설명"}},"required":["text"]},"title":"설명 목록"},"headlines":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"등록된 제목"}},"required":["text"]},"title":"제목 목록"}},"required":["descriptions","headlines"]},{"type":"object","properties":{"longHeadline":{"title":"긴 제목"},"businessName":{"title":"브랜드 이름"},"marketingImages":{},"squareMarketingImages":{},"squareLogoImages":{},"descriptions":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"등록된 설명"}},"required":["text"]},"title":"설명 목록"},"headlines":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"등록된 제목"}},"required":["text"]},"title":"제목 목록"}},"required":["longHeadline","businessName","marketingImages","squareMarketingImages","squareLogoImages","descriptions","headlines"]}],"title":"광고 소재 정보"}},"required":["resourceName","detail"],"title":"조회한 광고 내역"}},"required":["resourceName","status","ad"]},"description":"광고 상세 조회.\n\n광고의 상세를 조회해요\n\n캠페인에 따라 반응형 검색 광고(=responsive search ad) 혹은 반응형 디스플레이 광고(=responsive display ad) 입니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/campaigns/ads","name":"connector_google_ads_campaigns_ads_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":15,"title":"제목 리스트"},"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":4,"title":"설명 리스트"},"type":{"type":"string","enum":["SEARCH_STANDARD"],"title":"광고 그룹 타입"},"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"캠페인 리소스 이름"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["customerId","secretKey","finalUrl","headlines","descriptions","type","campaignResourceName","keywords"]},{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":5,"title":"짧은 제목 리스트"},"longHeadline":{"type":"string","minLength":1,"maxLength":90,"title":"긴 제목"},"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":5,"title":"설명 리스트"},"businessName":{"type":"string","minLength":1,"maxLength":25,"title":"비즈니스 및 브랜드 이름"},"landscapeImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"가로형 이미지","description":"1.91:1의 가로형 이미지이며 권장은 5장"},"logoImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":5,"title":"로고 이미지","description":"정방형 이미지로 최소 크기는 128x128px, 권장은 1200x1200px"},"squareImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"정방형 이미지","description":"1.91:1의 가로형 이미지이며 최소 크기는 300x300px, 권장은 600x600px"},"type":{"type":"string","enum":["DISPLAY_STANDARD"],"title":"광고 그룹 타입"},"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"캠페인 리소스 이름"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["customerId","secretKey","finalUrl","headlines","longHeadline","descriptions","businessName","landscapeImages","logoImages","squareImages","type","campaignResourceName","keywords"]}],"description":"광고 생성 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"oneOf":[{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":15,"title":"제목 리스트"},"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":4,"title":"설명 리스트"},"type":{"type":"string","enum":["SEARCH_STANDARD"],"title":"광고 그룹 타입"},"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"캠페인 리소스 이름"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["customerId","secretKey","finalUrl","headlines","descriptions","type","campaignResourceName","keywords"]},{"type":"object","properties":{"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":5,"title":"짧은 제목 리스트"},"longHeadline":{"type":"string","minLength":1,"maxLength":90,"title":"긴 제목"},"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":5,"title":"설명 리스트"},"businessName":{"type":"string","minLength":1,"maxLength":25,"title":"비즈니스 및 브랜드 이름"},"landscapeImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"가로형 이미지","description":"1.91:1의 가로형 이미지이며 권장은 5장"},"logoImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":5,"title":"로고 이미지","description":"정방형 이미지로 최소 크기는 128x128px, 권장은 1200x1200px"},"squareImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"정방형 이미지","description":"1.91:1의 가로형 이미지이며 최소 크기는 300x300px, 권장은 600x600px"},"type":{"type":"string","enum":["DISPLAY_STANDARD"],"title":"광고 그룹 타입"},"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"캠페인 리소스 이름"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["customerId","secretKey","finalUrl","headlines","longHeadline","descriptions","businessName","landscapeImages","logoImages","squareImages","type","campaignResourceName","keywords"]}],"description":"광고 생성 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"campaign":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"}},"required":["id","resourceName","status"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroup":{"type":"object","properties":{"type":{"type":"string","enum":["SEARCH_STANDARD","DISPLAY_STANDARD"],"title":"광고 그룹의 타입"},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 그룹의 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹 리소스 명","description":"`customers/${number}/adGroups/${number}` 형식"}},"required":["type","id","resourceName"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroupAds":{"type":"array","items":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"},"policySummary":{"type":"object","properties":{"approvalStatus":{"type":"string","enum":["APPROVED","APPROVED_LIMITED","AREA_OF_INTEREST_ONLY","DISAPPROVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 승인 여부","description":"구글에서 해당 광고가 송출되어도 무방한지 판단한 내용입니다."},"reviewStatus":{"type":"string","enum":["ELIGIBLE_MAY_SERVE","REVIEWED","REVIEW_IN_PROGRESS","UNDER_APPEAL","UNKNOWN","UNSPECIFIED"],"title":"광고의 검토 상태","description":"검토가 완료된 광고만이 승인, 비승인 여부를 알 수 있습니다."}},"required":["approvalStatus","reviewStatus"],"title":"광고 심사 및 정책에 대한 평가 내역"}},"required":["resourceName","policySummary"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"광고 그룹 광고의 목록"},"keywords":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"resourceName":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1"},"criterionId":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"]}},"required":["text","resourceName","criterionId","matchType"]},"title":"키워드 목록"}},"required":["campaign","adGroup","adGroupAds","keywords"]},"description":"광고를 생성해요.\n\n구글 고객 계정의 광고를 생성해요\n\n`Wrtn` 관리자는 편의 상 광고 그룹 당 광고를 1개 씩 생성하게 하고 있습니다.\n따라서 이 커넥터에서는 광고를 생성할 광고 그룹(=adGroup)의 리소스 이름이나 아이디를 받고 있지 않고 광고 생성 시 광고 그룹부터 생성이 됩니다.\n생성 가능한 광고의 타입은 캠페인에 달려 있기 때문에 캠페인을 조회한 후 생성해야 합니다.\n예를 들어, 검색 광고는 검색 캠페인에 생성해야 합니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n광고는 생성 직후 바로 검토 중으로 넘어가며, 이 때 구글 심사가 통과되면 광고는 집행되여 지출이 발생하게 됩니다.\n하지만 이 커넥터로 광고를 생성할 경우에는 광고 상태가 `PAUSED`로 설정이 됩니다.\n이는 만약의 사태를 대비하여 유저가 캠페인, 광고 그룹, 광고 등을 재조회하여 자신이 원하는 상태로 만들어졌는지 체크하게 하기 위함입니다.\n따라서 광고의 검토가 끝나더라도 광고는 집행되지 않으며 성과와 지출 역시 발생하지 않습니다.\n광고가 올바른지 체크하였다면, 유저는 `광고 수정 커넥터`를 이용하여 광고의 상태(status)를 `ENABLED` 값으로 변경할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/campaigns","name":"connector_google_ads_campaigns_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["advertisingChannelType","campaignBudget","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["advertisingChannelType","campaignBudget"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"campaign":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"},"advertisingChannelType":{"type":"string","enum":["DEMAND_GEN","DISPLAY","HOTEL","LOCAL","LOCAL_SERVICES","MULTI_CHANNEL","PERFORMANCE_MAX","SEARCH","SHOPPING","SMART","TRAVEL","UNKNOWN","UNSPECIFIED","VIDEO"],"title":"캠페인 광고 채널"},"name":{"type":"string","title":"캠페인 이름"},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 일자"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 일자"}},"required":["resourceName","status","advertisingChannelType","name","id","startDate","endDate"],"title":"구글 광고 캠페인"},"campaignBudget":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaignBudgets\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"캠페인 예산 리소스 명"},"amountMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"예산 (마이크로 단위)"}},"required":["resourceName","amountMicros"]}},"required":["campaign","campaignBudget"],"title":"캠페인 정보"},"description":"캠페인을 생성합니다.\n\n구글 고객 계정의 광고 캠페인을 생성해요\n\n캠페인(=campaign)을 생성합니다.\n캠페인은 Google Ads에서 계정 아래에 귀속되며, 캠페인, 광고 그룹, 광고로 이루어지는 트리 구조 상 최상단에 위치하게 됩니다.\n캠페인은 광고 그룹을 묶기 위한 부모 개체로써, 광고의 기간과 예산, 목적, 채널 등을 담당합니다.\n캠페인 이름을 지정하지 않을 경우 무작위 이름으로 지정됩니다. 이 경우 식별하기 어려울 수 있습니다.\n따라서 권장은 캠페인의 목적에 따라 각기 다른 이름을 지어 구분할 수 있도록 하는 것입니다.\n캠페인의 이름은 유저가 식별하기 편하게 할 뿐으로써, 광고의 효력에는 전혀 영향을 미치지 않으므로 안심해도 좋습니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"patch","path":"/connector/google-ads/campaigns","name":"connector_google_ads_campaigns_patch","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"수정할 캠페인의 리소스 아이디"},"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["campaignResourceName","secretKey"],"title":"캠페인 수정 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"campaignResourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-campaigns","jmesPath":"[].campaign.{value:name, label:id}"},"title":"수정할 캠페인의 리소스 아이디"},"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["campaignResourceName"],"title":"캠페인 수정 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"캠페인 수정 조건"}}}}]},"description":"캠페인을 수정해요.\n\n구글 고객 계정의 광고 캠페인을 수정해요\n\n캠페인(campaign)을 수정합니다.\n캠페인에서 수정 가능한 대상은 캠페인의 이름과 예산, 그리고 종료 날짜 뿐입니다.\n캠페인의 이름은 사람이 인식하기 위한 값으로 광고에는 아무런 영향을 주지 않으니 편할대로 지정하면 됩니다.\n예산의 경우, 통화 단위 원화(KRW)에 맞춰 광고하고자 하는 예산을 기입하면 되며, 이 경우 하루 광고 지출은 예산의 위 아래로 형성됩니다.\n경우에 따라 예산보다 많이 지출되거나, 광고 최적화가 이루어지지 않은 경우 예산보다 더 적게 지출될 수도 있습니다.\n마지막의 종료 날짜는, 지정하지 않은 경우에는 광고가 종료되지 않고 계속 이루어지기 때문에 예약 종료 날짜로써 사용할 수 있습니다.\n단, 이미 지정한 종료 날짜를 지우지 않을 경우에는 추후 광고를 켜더라도 광고가 집행되지 않을 수도 있습니다.\n종료된 캠페인의 광고를 켜고 싶은 경우 캠페인의 종료 예정 날짜를 함께 변경하셔야 합니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/search-ads","name":"connector_google_ads_search_ads_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ad":{"type":"object","properties":{"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":4,"title":"설명 리스트"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":15,"title":"제목 리스트"},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["descriptions","headlines","finalUrl","keywords"],"description":"Construct a type with the properties of T except for those in type K."},"campaign":{"type":"object","properties":{"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"}},"required":["campaignBudget","advertisingChannelType"],"description":"Construct a type with the properties of T except for those in type K."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["ad","campaign","secretKey"],"title":"구글 검색 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ad":{"type":"object","properties":{"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":4,"title":"설명 리스트"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":15,"title":"제목 리스트"},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"}},"required":["descriptions","headlines","finalUrl","keywords"],"description":"Construct a type with the properties of T except for those in type K."},"campaign":{"type":"object","properties":{"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"}},"required":["campaignBudget","advertisingChannelType"],"description":"Construct a type with the properties of T except for those in type K."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["ad","campaign"],"title":"구글 검색 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"구글 검색 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}}]},"output":{"type":"object","properties":{"ad":{"type":"object","properties":{"campaign":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"}},"required":["id","resourceName","status"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroup":{"type":"object","properties":{"type":{"type":"string","enum":["SEARCH_STANDARD","DISPLAY_STANDARD"],"title":"광고 그룹의 타입"},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 그룹의 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹 리소스 명","description":"`customers/${number}/adGroups/${number}` 형식"}},"required":["type","id","resourceName"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroupAds":{"type":"array","items":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"},"policySummary":{"type":"object","properties":{"approvalStatus":{"type":"string","enum":["APPROVED","APPROVED_LIMITED","AREA_OF_INTEREST_ONLY","DISAPPROVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 승인 여부","description":"구글에서 해당 광고가 송출되어도 무방한지 판단한 내용입니다."},"reviewStatus":{"type":"string","enum":["ELIGIBLE_MAY_SERVE","REVIEWED","REVIEW_IN_PROGRESS","UNDER_APPEAL","UNKNOWN","UNSPECIFIED"],"title":"광고의 검토 상태","description":"검토가 완료된 광고만이 승인, 비승인 여부를 알 수 있습니다."}},"required":["approvalStatus","reviewStatus"],"title":"광고 심사 및 정책에 대한 평가 내역"}},"required":["resourceName","policySummary"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"광고 그룹 광고의 목록"},"keywords":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"resourceName":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1"},"criterionId":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"]}},"required":["text","resourceName","criterionId","matchType"]},"title":"키워드 목록"}},"required":["campaign","adGroup","adGroupAds","keywords"]},"campaignBudget":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaignBudgets\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"캠페인 예산 리소스 명"},"amountMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"예산 (마이크로 단위)"}},"required":["resourceName","amountMicros"]},"campaign":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"},"advertisingChannelType":{"type":"string","enum":["DEMAND_GEN","DISPLAY","HOTEL","LOCAL","LOCAL_SERVICES","MULTI_CHANNEL","PERFORMANCE_MAX","SEARCH","SHOPPING","SMART","TRAVEL","UNKNOWN","UNSPECIFIED","VIDEO"],"title":"캠페인 광고 채널"},"name":{"type":"string","title":"캠페인 이름"},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 일자"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 일자"}},"required":["resourceName","status","advertisingChannelType","name","id","startDate","endDate"],"title":"구글 광고 캠페인"}},"required":["ad","campaignBudget","campaign"]},"description":"구글 고객 계정에 반응형 검색 광고를 한 번에 만들어요.\n\n구글 고객 계정에 광고를 한 번에 만들어요\n\n구글 광고를 한 번에 생성하는 것은 Google Ads 트리 구조 상 존재하는 캠페인, 광고 그룹, 광고를 한꺼번에 생성하는 것을 의미합니다.\n이 경우, 어떤 캠페인에 대해서 광고를 생성할 것인지 지정하지 않아도 됩니다.\n왜냐하면 첫 리소스인 캠페인부터 광고까지를 한꺼번에 모두 생성하기 때문입니다.\n\nGoogle Ads의 캠페인 트리 구조는 최상단 캠페인 노드에서 예산을 담당하고, 광고가 최적화될 때 광고 그룹과 광고는 캠페인의 예산을 공유하는 형태가 됩니다.\n이는 쉽게 말해 캠페인 내에서 광고는 어떤 것이 엔드 유저에게 노출될지 스스로 학습되고 최적화되고 있음을 의미합니다.\n따라서 이를 한 번에 생성하는 커넥터 구조 상 광고 생성은 간편하나 만일 여러 개의 광고를 생성하고자 한다면 부적합할 수 있습니다.\n단, 광고 소재가 여러 개가 있어, 여러 개의 광고를 생성하고 비교할 목적이 아니라면 간편하게 광고를 집행할 수 있어 매우 편리할 것입니다.\n\n대부분의 경우에는 이 방식으로 광고를 생성하더라도 문제가 되지 않습니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n광고는 생성 직후 바로 검토 중으로 넘어가며, 이 때 구글 심사가 통과되면 광고는 집행되여 지출이 발생하게 됩니다.\n하지만 이 커넥터로 광고를 생성할 경우에는 광고 상태가 `PAUSED`로 설정이 됩니다.\n이는 만약의 사태를 대비하여 유저가 캠페인, 광고 그룹, 광고 등을 재조회하여 자신이 원하는 상태로 만들어졌는지 체크하게 하기 위함입니다.\n따라서 광고의 검토가 끝나더라도 광고는 집행되지 않으며 성과와 지출 역시 발생하지 않습니다.\n광고가 올바른지 체크하였다면, 유저는 `광고 수정 커넥터`를 이용하여 광고의 상태(status)를 `ENABLED` 값으로 변경할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/google-ads/display-ads","name":"connector_google_ads_display_ads_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ad":{"type":"object","properties":{"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":5,"title":"설명 리스트"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":5,"title":"짧은 제목 리스트"},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"},"longHeadline":{"type":"string","minLength":1,"maxLength":90,"title":"긴 제목"},"businessName":{"type":"string","minLength":1,"maxLength":25,"title":"비즈니스 및 브랜드 이름"},"landscapeImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"가로형 이미지","description":"1.91:1의 가로형 이미지이며 권장은 5장"},"logoImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":5,"title":"로고 이미지","description":"정방형 이미지로 최소 크기는 128x128px, 권장은 1200x1200px"},"squareImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"정방형 이미지","description":"1.91:1의 가로형 이미지이며 최소 크기는 300x300px, 권장은 600x600px"}},"required":["descriptions","headlines","finalUrl","keywords","longHeadline","businessName","landscapeImages","logoImages","squareImages"],"description":"Construct a type with the properties of T except for those in type K."},"campaign":{"type":"object","properties":{"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"}},"required":["campaignBudget","advertisingChannelType"],"description":"Construct a type with the properties of T except for those in type K."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["ad","campaign","secretKey"],"title":"구글 디스플레이 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ad":{"type":"object","properties":{"descriptions":{"type":"array","items":{"type":"string","minLength":1,"maxLength":90},"minItems":1,"maxItems":5,"title":"설명 리스트"},"headlines":{"type":"array","items":{"type":"string","minLength":1,"maxLength":30},"minItems":1,"maxItems":5,"title":"짧은 제목 리스트"},"finalUrl":{"type":"string","format":"uri","title":"광고의 대상이 되는 홈페이지"},"keywords":{"type":"array","items":{"type":"string"},"title":"생성할 키워드"},"longHeadline":{"type":"string","minLength":1,"maxLength":90,"title":"긴 제목"},"businessName":{"type":"string","minLength":1,"maxLength":25,"title":"비즈니스 및 브랜드 이름"}},"required":["descriptions","headlines","finalUrl","keywords","longHeadline","businessName"],"description":"Construct a type with the properties of T except for those in type K."},"campaign":{"type":"object","properties":{"campaignName":{"type":"string","title":"캠페인 이름\n\n이름이 비어있을 경우 무작위 이름이 생성됩니다. 이름은 기존에 생성된 캠페인과 중복되서는 안 됩니다."},"campaignBudget":{"type":"number","title":"광고 예산","description":"한국 통화 단위로써, 원화 단위"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 시간"},"advertisingChannelType":{"type":"string","enum":["SEARCH","DISPLAY"],"title":"캠페인 타입"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 시간"}},"required":["campaignBudget","advertisingChannelType"],"description":"Construct a type with the properties of T except for those in type K."},"customerId":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","x-wrtn-prerequisite":{"method":"post","path":"connector/google-ads/get-customers","jmesPath":"[].{value:id, label:id}"},"title":"고객 리소스 아이디","description":"고객의 리소스 아이디이다.\n\n`customers/${number}` 형식에서 'custmers/'을 제거한 나머지 숫자 형식을 의미한다.\n\n`Wrtn`의 `google ads` 관련 커넥터들은 해당 고객이 가지고 있는 광고 계정, 즉 customer 중 어떤 광고 계정을 사용할 것인지를 `customerId` 라는 프로퍼티로 받아야 하는데,\n\n이 때 대부분의 유저들은 광고 계정이 1개이기 때문에 `customerId`를 인자로 주지 않으면 무조건 0번쨰로 조회되는 광고 계정을 사용한다.\n\n만약 광고 계정이 2개 이상인 유저가 `customerId`를 주지 않을 경우에는 무조건 실패로 간주한다."}},"required":["ad","campaign"],"title":"구글 디스플레이 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ad":{"type":"object","properties":{"landscapeImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"가로형 이미지","description":"1.91:1의 가로형 이미지이며 권장은 5장"},"logoImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":5,"title":"로고 이미지","description":"정방형 이미지로 최소 크기는 128x128px, 권장은 1200x1200px"},"squareImages":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"minItems":1,"maxItems":15,"title":"정방형 이미지","description":"1.91:1의 가로형 이미지이며 최소 크기는 300x300px, 권장은 600x600px"}},"required":["landscapeImages","logoImages","squareImages"],"description":"Construct a type with the properties of T except for those in type K."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/adwords"],"title":"인증 정보 선택","description":"secret key."}},"required":["ad","secretKey"],"title":"구글 디스플레이 캠페인부터 광고까지 한 번에 만드는 요청 조건"}}}}]},"output":{"type":"object","properties":{"ad":{"type":"object","properties":{"campaign":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"}},"required":["id","resourceName","status"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroup":{"type":"object","properties":{"type":{"type":"string","enum":["SEARCH_STANDARD","DISPLAY_STANDARD"],"title":"광고 그룹의 타입"},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"광고 그룹의 아이디"},"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroups\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroups/1","title":"광고 그룹 리소스 명","description":"`customers/${number}/adGroups/${number}` 형식"}},"required":["type","id","resourceName"],"description":"From T, pick a set of properties whose keys are in the union K"},"adGroupAds":{"type":"array","items":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/adGroupAds\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupAds/1~1","title":"광고 그룹 광고의 리소스 명","description":"`customers/${number}/adGroupAds/${number}~${number}` 형식"},"policySummary":{"type":"object","properties":{"approvalStatus":{"type":"string","enum":["APPROVED","APPROVED_LIMITED","AREA_OF_INTEREST_ONLY","DISAPPROVED","UNKNOWN","UNSPECIFIED"],"title":"광고의 승인 여부","description":"구글에서 해당 광고가 송출되어도 무방한지 판단한 내용입니다."},"reviewStatus":{"type":"string","enum":["ELIGIBLE_MAY_SERVE","REVIEWED","REVIEW_IN_PROGRESS","UNDER_APPEAL","UNKNOWN","UNSPECIFIED"],"title":"광고의 검토 상태","description":"검토가 완료된 광고만이 승인, 비승인 여부를 알 수 있습니다."}},"required":["approvalStatus","reviewStatus"],"title":"광고 심사 및 정책에 대한 평가 내역"}},"required":["resourceName","policySummary"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"광고 그룹 광고의 목록"},"keywords":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string"},"resourceName":{"type":"string","pattern":"(customers\\/(.*)\\/adGroupCriteria\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?~[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/adGroupCriteria/1"},"criterionId":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"},"matchType":{"type":"string","enum":["UNSPECIFIED","UNKNOWN","EXACT","PHRASE","BROAD"]}},"required":["text","resourceName","criterionId","matchType"]},"title":"키워드 목록"}},"required":["campaign","adGroup","adGroupAds","keywords"]},"campaignBudget":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"^(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaignBudgets\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"캠페인 예산 리소스 명"},"amountMicros":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"예산 (마이크로 단위)"}},"required":["resourceName","amountMicros"]},"campaign":{"type":"object","properties":{"resourceName":{"type":"string","pattern":"(customers\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\/campaigns\\/[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"customers/1/campaigns/1","title":"캠페인 리소스 명"},"status":{"type":"string","enum":["ENABLED","PAUSED","REMOVED","UNKNOWN","UNSPECIFIED"],"title":"캠페인 상태"},"advertisingChannelType":{"type":"string","enum":["DEMAND_GEN","DISPLAY","HOTEL","LOCAL","LOCAL_SERVICES","MULTI_CHANNEL","PERFORMANCE_MAX","SEARCH","SHOPPING","SMART","TRAVEL","UNKNOWN","UNSPECIFIED","VIDEO"],"title":"캠페인 광고 채널"},"name":{"type":"string","title":"캠페인 이름"},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-placeholder":"1","title":"캠페인 아이디"},"startDate":{"type":"string","format":"date","title":"캠페인 시작 일자"},"endDate":{"type":"string","format":"date","title":"캠페인 종료 일자"}},"required":["resourceName","status","advertisingChannelType","name","id","startDate","endDate"],"title":"구글 광고 캠페인"}},"required":["ad","campaignBudget","campaign"]},"description":"구글 계정 광고에 반응형 디스플레이 광고를 한 번에 만들어요.\n\n구글 고객 계정에 광고를 한 번에 만들어요\n\n구글 광고를 한 번에 생성하는 것은 Google Ads 트리 구조 상 존재하는 캠페인, 광고 그룹, 광고를 한꺼번에 생성하는 것을 의미합니다.\n이 경우, 어떤 캠페인에 대해서 광고를 생성할 것인지 지정하지 않아도 됩니다.\n왜냐하면 첫 리소스인 캠페인부터 광고까지를 한꺼번에 모두 생성하기 때문입니다.\n\nGoogle Ads의 캠페인 트리 구조는 최상단 캠페인 노드에서 예산을 담당하고, 광고가 최적화될 때 광고 그룹과 광고는 캠페인의 예산을 공유하는 형태가 됩니다.\n이는 쉽게 말해 캠페인 내에서 광고는 어떤 것이 엔드 유저에게 노출될지 스스로 학습되고 최적화되고 있음을 의미합니다.\n따라서 이를 한 번에 생성하는 커넥터 구조 상 광고 생성은 간편하나 만일 여러 개의 광고를 생성하고자 한다면 부적합할 수 있습니다.\n단, 광고 소재가 여러 개가 있어, 여러 개의 광고를 생성하고 비교할 목적이 아니라면 간편하게 광고를 집행할 수 있어 매우 편리할 것입니다.\n\n대부분의 경우에는 이 방식으로 광고를 생성하더라도 문제가 되지 않습니다.\n\n만약 `customerId`를 전달하지 않을 경우에는 해당 유저에게서 `Wrtn`이 접근 가능한 광고 계정이 단 1개인 경우에 한하여 자동으로 선택합니다.\n\n광고는 생성 직후 바로 검토 중으로 넘어가며, 이 때 구글 심사가 통과되면 광고는 집행되여 지출이 발생하게 됩니다.\n하지만 이 커넥터로 광고를 생성할 경우에는 광고 상태가 `PAUSED`로 설정이 됩니다.\n이는 만약의 사태를 대비하여 유저가 캠페인, 광고 그룹, 광고 등을 재조회하여 자신이 원하는 상태로 만들어졌는지 체크하게 하기 위함입니다.\n따라서 광고의 검토가 끝나더라도 광고는 집행되지 않으며 성과와 지출 역시 발생하지 않습니다.\n광고가 올바른지 체크하였다면, 유저는 `광고 수정 커넥터`를 이용하여 광고의 상태(status)를 `ENABLED` 값으로 변경할 수 있습니다.\n\n기능을 호출하기 전 유저에게 `customerId`를 물어봐야 하며 따라서 `customerId`를 확인할 수 있는 커넥터를 제안해야 한다."},{"method":"post","path":"/connector/arxiv-search","name":"connector_arxiv_search_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"num_results":{"type":"integer","x-wrtn-placeholder":"10","title":"검색 결과 개수","description":"몇 개의 검색 결과를 가져올지 설정합니다."},"from_date":{"type":"string","format":"date","title":"검색 결과 시작 날짜","description":"검색 결과 시작 날짜를 설정합니다."},"to_date":{"type":"string","format":"date","title":"검색 결과 종료 날짜","description":"검색 결과 종료 날짜를 설정합니다."},"and_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"반드시 포함되어야 하는 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"or_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"포함되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"not_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"포함되면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."}},"required":["and_keywords"],"title":"검색 조건","description":"검색 조건을 입력합니다."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"num_results":{"type":"integer","x-wrtn-placeholder":"10","title":"검색 결과 개수","description":"몇 개의 검색 결과를 가져올지 설정합니다."},"from_date":{"type":"string","format":"date","title":"검색 결과 시작 날짜","description":"검색 결과 시작 날짜를 설정합니다."},"to_date":{"type":"string","format":"date","title":"검색 결과 종료 날짜","description":"검색 결과 종료 날짜를 설정합니다."},"and_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"반드시 포함되어야 하는 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"or_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"포함되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"not_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"포함되면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."}},"required":["and_keywords"],"title":"검색 조건","description":"검색 조건을 입력합니다."}}}}],"human":[]},"output":{"type":"object","properties":{"references":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]},"title":"산출물 정보","description":"검색 결과에 대한 산출물 정보를 담고 있습니다."}},"required":["references"],"title":"검색 결과"},"description":"아카이브 논문 검색.\n\n입력한 검색 조건을 기반으로 아카이브에서 논문을 검색합니다."},{"method":"post","path":"/connector/daum/blog","name":"connector_daum_blog_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"다음 검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"다음 검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"다음 검색 결과에 들어가면 안되는 키워드를 설정합니다."},"sort":{"type":"string","enum":["accuracy","recency"],"title":"결과 문서 정렬 방식","description":"- accuracy: 정확도순 (default)\n- recency: 최신순"},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"결과 페이지 번호","description":"결과 페이지의 번호입니다."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"한 페이지에 보여질 문서 수","description":"한 페이지에 보여질 문서 수 입니다."}},"required":["andKeywords"],"title":"다음 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"다음 검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"다음 검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"다음 검색 결과에 들어가면 안되는 키워드를 설정합니다."},"sort":{"type":"string","enum":["accuracy","recency"],"title":"결과 문서 정렬 방식","description":"- accuracy: 정확도순 (default)\n- recency: 최신순"},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"결과 페이지 번호","description":"결과 페이지의 번호입니다."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"한 페이지에 보여질 문서 수","description":"한 페이지에 보여질 문서 수 입니다."}},"required":["andKeywords"],"title":"다음 검색에 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"meta":{"type":"object","properties":{"totalCount":{"type":"number","title":"검색된 컨텐츠 수","description":"검색된 문서의 총 개수입니다."},"pageableCount":{"type":"number","title":"검색된 문서 중 노출 가능한 컨텐츠 수","description":"검색된 문서 중 노출 가능한 컨텐츠의 개수입니다."},"isEnd":{"type":"boolean","title":"현재 페이지가 마지막 페이지인지 여부","description":"값이 false면 page를 증가시켜 다음 페이지를 요청할 수 있습니다."}},"required":["totalCount","pageableCount","isEnd"]},"documents":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"문서의 제목","description":"검색된 문서의 제목입니다."},"contents":{"type":"string","title":"문서 본문중 일부","description":"검색된 문서의 본문 중 일부입니다."},"url":{"type":"string","title":"문서 URL","description":"검색된 문서의 URL입니다."},"blogName":{"type":"string","title":"블로그의 이름","description":"검색된 블로그의 이름입니다."},"thumbnail":{"type":"string","contentMediaType":"image/*","title":"썸네일 이미지 URL","description":"검색 시스템에서 추출한 대표 미리보기 이미지 URL."},"dateTime":{"type":"string","title":"문서 작성 시간","description":"검색된 문서가 작성된 시간입니다."}},"required":["title","contents","url","blogName","thumbnail","dateTime"]}}},"required":["meta","documents"],"title":"다음 블로그 검색 결과"},"description":"다음 블로그 검색.\n\n다음 블로그 컨텐츠를 검색합니다."},{"method":"post","path":"/connector/daum/cafe","name":"connector_daum_cafe_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"다음 검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"다음 검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"다음 검색 결과에 들어가면 안되는 키워드를 설정합니다."},"sort":{"type":"string","enum":["accuracy","recency"],"title":"결과 문서 정렬 방식","description":"- accuracy: 정확도순 (default)\n- recency: 최신순"},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"결과 페이지 번호","description":"결과 페이지의 번호입니다."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"한 페이지에 보여질 문서 수","description":"한 페이지에 보여질 문서 수 입니다."}},"required":["andKeywords"],"title":"다음 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"다음 검색 결과에 들어가야하는 키워드를 설정합니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"다음 검색 결과에 들어가면 좋은 키워드를 설정합니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"다음 검색 결과에 들어가면 안되는 키워드를 설정합니다."},"sort":{"type":"string","enum":["accuracy","recency"],"title":"결과 문서 정렬 방식","description":"- accuracy: 정확도순 (default)\n- recency: 최신순"},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"결과 페이지 번호","description":"결과 페이지의 번호입니다."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"한 페이지에 보여질 문서 수","description":"한 페이지에 보여질 문서 수 입니다."}},"required":["andKeywords"],"title":"다음 검색에 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"meta":{"type":"object","properties":{"totalCount":{"type":"number","title":"검색된 다음 카페 컨텐츠 수","description":"검색된 다음 카페의 총 갯수 입니다."},"pageableCount":{"type":"number","title":"검색된 다음 카페 컨텐츠 중 노출 가능한 컨텐츠 수","description":"검색된 다음 카페 컨텐츠 중 노출 가능한 컨텐츠의 개수입니다."},"isEnd":{"type":"boolean","title":"현재 페이지가 마지막 페이지인지 여부","description":"값이 false면 page를 증가시켜 다음 페이지를 요청할 수 있습니다."}},"required":["totalCount","pageableCount","isEnd"]},"documents":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"문서의 제목","description":"검색된 문서의 제목입니다."},"contents":{"type":"string","title":"문서 본문중 일부","description":"검색된 문서의 본문 중 일부입니다."},"url":{"type":"string","title":"문서 URL","description":"검색된 문서의 URL입니다."},"cafeName":{"type":"string","title":"카페 이름","description":"검색된 다음 카페 이름입니다."},"thumbnail":{"type":"string","contentMediaType":"image/*","title":"썸네일 이미지 URL","description":"검색 시스템에서 추출한 대표 미리보기 이미지 URL."},"dateTime":{"type":"string","title":"문서 작성 시간","description":"검색된 문서가 작성된 시간입니다."}},"required":["title","contents","url","cafeName","thumbnail","dateTime"]}}},"required":["meta","documents"],"title":"다음 카페 검색 결과"},"description":"다음 카페 검색.\n\n다음 카페 컨텐츠를 검색합니다."},{"method":"post","path":"/connector/naver/cafe","name":"connector_naver_cafe_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"검색 결과에 반드시 포함되어야 하는 키워드입니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"검색할 개수","description":"검색 결과를 몇 개 받아올 것인지 설정합니다.\n최소 1개, 최대 100개, 기본 10개입니다."},"sort":{"type":"string","enum":["date","sim"],"title":"검색 결과 정렬 방법","description":"검색 결과를 어떤 기준으로 정렬할 것인지 설정합니다."}},"required":["andKeywords"],"title":"검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"검색 결과에 반드시 포함되어야 하는 키워드입니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"검색할 개수","description":"검색 결과를 몇 개 받아올 것인지 설정합니다.\n최소 1개, 최대 100개, 기본 10개입니다."},"sort":{"type":"string","enum":["date","sim"],"title":"검색 결과 정렬 방법","description":"검색 결과를 어떤 기준으로 정렬할 것인지 설정합니다."}},"required":["andKeywords"],"title":"검색 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"object","properties":{"lastBuildDate":{"type":"string","title":"검색 결과를 생성한 시간.","description":"검색 결과를 생성한 시간입니다."},"total":{"type":"number","title":"총 검색 결과 개수.","description":"검색 결과의 총 개수입니다."},"start":{"type":"number","title":"검색 시작 위치.","description":"검색 결과의 시작 위치입니다."},"display":{"type":"number","title":"한 번에 표시할 검색 결과 개수.","description":"한 번에 표시할 검색 결과의 개수입니다."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"게시글 제목.","description":"네이버 카페 게시글의 제목."},"link":{"type":"string","title":"게시글 링크.","description":"네이버 카페 게시글의 링크."},"description":{"type":"string","title":"게시글 요약 내용.","description":"네이버 카페 게시글의 요약 내용."},"cafename":{"type":"string","title":"게시글이 있는 카페 이름.","description":"네이버 카페 게시글이 있는 카페의 이름."},"cafeurl":{"type":"string","title":"게시글이 있는 카페 링크.","description":"네이버 카페 게시글이 있는 카페의 링크."}},"required":["title","link","description","cafename","cafeurl"],"title":"네이버 카페 검색 데이터"},"title":"개별 검색 결과.","description":"개별 검색 결과입니다."}},"required":["lastBuildDate","total","start","display","items"],"title":"네이버 카페 검색 결과물 데이터.","description":"네이버 카페 검색 결과물 데이터."}},"required":["data"],"title":"네이버 카페 검색 결과"},"description":"네이버 카페 검색.\n\n네이버 카페 컨텐츠를 검색합니다."},{"method":"post","path":"/connector/naver/blog","name":"connector_naver_blog_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"검색 결과에 반드시 포함되어야 하는 키워드입니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"검색할 개수","description":"검색 결과를 몇 개 받아올 것인지 설정합니다.\n최소 1개, 최대 100개, 기본 10개입니다."},"sort":{"type":"string","enum":["date","sim"],"title":"검색 결과 정렬 방법","description":"검색 결과를 어떤 기준으로 정렬할 것인지 설정합니다."}},"required":["andKeywords"],"title":"검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"꼭 들어가야하는 키워드","description":"검색 결과에 반드시 포함되어야 하는 키워드입니다."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"들어가면 좋은 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"들어가면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"검색할 개수","description":"검색 결과를 몇 개 받아올 것인지 설정합니다.\n최소 1개, 최대 100개, 기본 10개입니다."},"sort":{"type":"string","enum":["date","sim"],"title":"검색 결과 정렬 방법","description":"검색 결과를 어떤 기준으로 정렬할 것인지 설정합니다."}},"required":["andKeywords"],"title":"검색 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"lastBuildDate":{"type":"string","title":"검색 결과를 생성한 시간.","description":"검색 결과를 생성한 시간입니다."},"total":{"type":"number","title":"총 검색 결과 개수.","description":"검색 결과의 총 개수입니다."},"start":{"type":"number","title":"검색 시작 위치.","description":"검색 결과의 시작 위치입니다."},"display":{"type":"number","title":"한 번에 표시할 검색 결과 개수.","description":"한 번에 표시할 검색 결과의 개수입니다."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"게시글 제목.","description":"네이버 블로그 게시물의 제목."},"link":{"type":"string","title":"게시글 링크.","description":"네이버 블로그 게시물의 링크."},"description":{"type":"string","title":"게시글 요약 내용.","description":"네이버 블로그 게시물의 요약 내용."},"bloggername":{"type":"string","title":"블로그 포스트가 있는 블로그의 이름.","description":"네이버 블로그 게시물이 있는 블로그의 이름."},"bloggerlink":{"type":"string","title":"블로그 포스트가 있는 블로그의 주소.","description":"네이버 블로그 게시물이 있는 블로그의 주소."},"postdate":{"type":"string","title":"블로그 포스트가 작성된 날짜.","description":"네이버 블로그 게시물이 작성된 날짜."}},"required":["title","link","description","bloggername","bloggerlink","postdate"],"title":"네이버 블로그 검색 데이터"},"title":"개별 검색 결과.","description":"개별 검색 결과입니다."}},"required":["lastBuildDate","total","start","display","items"],"title":"네이버 블로그 검색 결과"},"description":"네이버 블로그 검색.\n\n네이버 블로그 컨텐츠를 검색합니다."},{"method":"post","path":"/connector/youtube-search","name":"connector_youtube_search_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"and_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"minItems":1,"title":"반드시 포함되어야 하는 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"or_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"포함되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"not_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"포함되면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."}},"required":["and_keywords"],"title":"유튜브 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"and_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"minItems":1,"title":"반드시 포함되어야 하는 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"or_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"포함되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"not_keywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"포함되면 안되는 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."}},"required":["and_keywords"],"title":"유튜브 검색 조건"}}}}],"human":[]},"output":{"type":"object","properties":{"references":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"산출물의 제목입니다."},"type":{"type":"string","enum":["video","image","news_article","research_paper"],"title":"산출물 타입","description":"비디오, 이미지, 뉴스기사, 논문..\n\n가능한 값: video, image, news_article, research_paper"},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"],"title":"산출물의 출처","description":"유튜브, 페이스북, 인스타그램, 구글 검색, arxiv, 구글 뉴스\n\n가능한 값: youtube, facebook, instagram, google_search, arxiv, google_news"},"url":{"type":"string","format":"uri","title":"URL 주소","description":"산출물의 URL 주소입니다."},"contents":{"type":"string","title":"산출물 내용","description":"산출물의 내용입니다."},"image":{"type":"string","format":"uri","title":"산출물 이미지 url","description":"산출물의 이미지 URL 주소입니다."},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}}}},"required":["title","type","source","url"]},"title":"산출물 정보","description":"검색 결과에 대한 산출물 정보를 담고 있습니다."}},"required":["references"],"title":"검색 결과"},"description":"유튜브 영상 검색 결과를 가져옵니다.\n\n검색 결과는 영상의 제목과 링크가 있습니다.\n대부분의 사용자들이 이 기능을 사용한다면, 아마도 영상을 보기를 원할 것이기 때문에 URL을 제공해주는 편이 좋습니다."},{"method":"post","path":"/connector/google-scholar","name":"connector_google_scholar_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"꼭 포함할 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"orKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"포함 되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"제외할 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"max_results":{"type":"integer","x-wrtn-placeholder":"10","title":"검색 결과 갯수","description":"몇 개의 검색 결과를 받아올 것인지 설정합니다."}},"required":["andKeyword","max_results"],"title":"검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"꼭 포함할 키워드","description":"검색 결과에 포함되어야 하는 키워드입니다."},"orKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"포함 되면 좋겠는 키워드","description":"검색 결과에 포함되면 좋겠는 키워드입니다."},"notKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"제외할 키워드","description":"검색 결과에 포함되면 안되는 키워드입니다."},"max_results":{"type":"integer","x-wrtn-placeholder":"10","title":"검색 결과 갯수","description":"몇 개의 검색 결과를 받아올 것인지 설정합니다."}},"required":["andKeyword","max_results"],"title":"검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"검색 결과 데이터 고유 id","description":"검색 결과 데이터의 고유 id 입니다."},"title":{"type":"string","title":"검색된 논문 제목","description":"검색된 논문의 제목입니다."},"link":{"type":"string","format":"uri","nullable":true,"title":"검색된 논문 링크","description":"검색된 논문의 링크입니다."},"snippet":{"type":"string","title":"검색 결과 내용 단편","description":"검색 결과의 내용 단편입니다."},"publication_info":{"type":"string","title":"출판 요약 정보","description":"검색된 논문의 출판 요약 정보입니다."},"resource":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"참고 자료 제목","description":"참고 자료의 제목입니다."},"file_format":{"type":"string","title":"참고자료 파일 형식","description":"참고자료 파일의 형식입니다."},"link":{"type":"string","format":"uri","title":"참고자료 링크","description":"참고자료의 링크입니다."}},"required":["title","link"],"title":"참고 자료"},"nullable":true,"title":"참고자료 정보","description":"검색된 논문의 참고자료 정보입니다."},"citation_count":{"type":"integer","title":"인용된 횟수","description":"검색된 논문이 인용된 횟수입니다."},"related_pages_link":{"type":"string","format":"uri","title":"관련 학술 자료 링크","description":"검색된 논문과 관련된 학술 자료 링크입니다."},"version_info":{"type":"object","properties":{"version":{"type":"integer","nullable":true,"title":"버전 정보","description":"버전 정보입니다."},"link":{"type":"string","format":"uri","nullable":true,"title":"버전 관련 링크","description":"버전 관련 링크입니다."}},"required":["version","link"],"title":"버전"}},"required":["id","title","link","snippet","publication_info","resource","citation_count","related_pages_link","version_info"],"title":"검색 결과"}},"description":"구글 스콜라 논문 목록 검색.\n\n구글 스콜라에 있는 논문 목록을 가져옵니다."},{"method":"post","path":"/connector/csv/read","name":"connector_csv_read_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"파일","description":"읽어올 Csv 파일입니다."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"읽어올 Csv 파일 구분자 입니다."}},"required":["s3Url","delimiter"],"title":"Csv 파일 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"읽어올 Csv 파일 구분자 입니다."}},"required":["delimiter"],"title":"Csv 파일 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"파일","description":"읽어올 Csv 파일입니다."}},"required":["s3Url"],"title":"Csv 파일 정보"}}}}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"csv 데이터 리스트.","description":"읽어온 csv 파일 데이터."}},"required":["data"],"title":"Csv 파일 읽기 결과"},"description":"CSV 파일 읽기.\n\nCSV 파일 내용을 읽어옵니다."},{"method":"post","path":"/connector/csv/write","name":"connector_csv_write_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileName":{"type":"string","x-wrtn-placeholder":"example.csv","title":"파일명","description":"생성할 Csv 파일명입니다."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"생성할 Csv 파일 구분자 입니다."},"values":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"파일 데이터 값들","description":"생성할 Csv 파일에 넣을 데이터 값 들 입니다."}},"required":["fileName","delimiter","values"],"title":"Csv 파일 생성에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileName":{"type":"string","x-wrtn-placeholder":"example.csv","title":"파일명","description":"생성할 Csv 파일명입니다."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"생성할 Csv 파일 구분자 입니다."},"values":{"type":"array","items":{"type":"object","properties":{},"additionalProperties":{"type":"string"}},"title":"파일 데이터 값들","description":"생성할 Csv 파일에 넣을 데이터 값 들 입니다."}},"required":["fileName","delimiter","values"],"title":"Csv 파일 생성에 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"s3Url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"csv 파일","description":"작성된 csv 파일의 s3 url입니다."}},"required":["s3Url"],"title":"Csv 파일 생성 결과"},"description":"CSV 파일 생성.\n\nCSV 파일을 생성합니다."},{"method":"post","path":"/connector/csv/csv-to-excel","name":"connector_csv_csv_to_excel_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"파일","description":"csv에서 excel로 변환할 파일입니다."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"csv에서 excel로 변환할 파일 구분자 입니다."}},"required":["s3Url","delimiter"],"title":"Csv 파일을 Excel 파일로 변환하는데 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"구분자","description":"csv에서 excel로 변환할 파일 구분자 입니다."}},"required":["delimiter"],"title":"Csv 파일을 Excel 파일로 변환하는데 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"파일","description":"csv에서 excel로 변환할 파일입니다."}},"required":["s3Url"],"title":"Csv 파일을 Excel 파일로 변환하는데 필요한 정보"}}}}]},"output":{"type":"object","properties":{"url":{"type":"string","format":"uri","contentMediaType":"text/csv","title":"s3 url","description":"변환된 excel 파일의 s3 url입니다."}},"required":["url"],"title":"Csv 파일을 Excel 파일 변환 결과"},"description":"CSV 파일 Excel 파일 변환.\n\nCSV 파일을 엑셀 파일로 변환합니다."},{"method":"post","path":"/connector/notion/page","name":"connector_notion_page_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요.","title":"부모 페이지","description":"새로 생성할 페이지의 부모 페이지"},"title":{"type":"string","x-wrtn-placeholder":"테스트 페이지.","title":"페이지 제목","description":"새로 생성할 페이지 제목"},"content":{"type":"string","x-wrtn-placeholder":"테스트 페이지를 생성했습니다.","title":"내용","description":"페이지에 생성할 내용"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["parentPageId","title","content","secretKey"],"title":"페이지 생성에 필요한 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요.","title":"부모 페이지","description":"새로 생성할 페이지의 부모 페이지"},"title":{"type":"string","x-wrtn-placeholder":"테스트 페이지.","title":"페이지 제목","description":"새로 생성할 페이지 제목"},"content":{"type":"string","x-wrtn-placeholder":"테스트 페이지를 생성했습니다.","title":"내용","description":"페이지에 생성할 내용"}},"required":["parentPageId","title","content"],"title":"페이지 생성에 필요한 조건"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"페이지 생성에 필요한 조건"}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["id"],"title":"페이지 생성 결과"},"description":"페이지 생성.\n\n노션 페이지를 생성합니다."},{"method":"post","path":"/connector/notion/get/page","name":"connector_notion_get_page_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"pageId":{"type":"string","title":"id","description":"페이지 고유 id"},"title":{"type":"string","title":"제목","description":"페이지 제목"}},"required":["pageId","title"],"title":"페이지 목록 조회 결과"}},"description":"페이지 목록 조회.\n\n노션 워크스페이스에 존재하는 모든 페이지 목록을 조회합니다."},{"method":"post","path":"/connector/notion/get/users","name":"connector_notion_get_users_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"유저 고유 id"},"name":{"type":"string","title":"이름","description":"유저 이름"}},"required":["id","name"],"title":"유저 목록 조회 결과"}},"description":"유저 목록 조회.\n\n워크스페이스에 있는 유저 목록을 조회합니다."},{"method":"post","path":"/connector/notion/page/content/{pageId}","name":"connector_notion_page_content_postByPageid","strict":true,"parameters":[{"type":"object","properties":{"pageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title || ''}"}},"body":{"type":"object","properties":{"content":{"type":"string","x-wrtn-placeholder":"뤼튼 스튜디오","title":"내용","description":"페이지에 추가할 내용"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["content","secretKey"],"title":"페이지에 내용을 추가할 때 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"pageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title || ''}"}},"body":{"type":"object","properties":{"content":{"type":"string","x-wrtn-placeholder":"뤼튼 스튜디오","title":"내용","description":"페이지에 추가할 내용"}},"required":["content"],"title":"페이지에 내용을 추가할 때 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"페이지에 내용을 추가할 때 필요한 정보"}}}}]},"description":"페이지에 내용 추가.\n\n페이지 끝에 내용을 추가합니다."},{"method":"post","path":"/connector/notion/get/database-info","name":"connector_notion_get_database_info_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"데이터베이스 고유 id"},"title":{"type":"string","title":"제목P","description":"데이터베이스 제목"},"properties":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T","additionalProperties":{"oneOf":[{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["number"]},"number":{"type":"object","properties":{"format":{"type":"string","enum":["number","percent","number_with_commas","dollar","canadian_dollar","singapore_dollar","euro","pound","yen","ruble","rupee","won","yuan","real","lira","rupiah","franc","hong_kong_dollar","new_zealand_dollar","krona","norwegian_krone","mexican_peso","rand","new_taiwan_dollar","danish_krone","zloty","baht","forint","koruna","shekel","chilean_peso","philippine_peso","dirham","colombian_peso","riyal","ringgit","leu","argentine_peso","uruguayan_peso","peruvian_sol"]}},"required":["format"]}},"required":["id","name","type","number"],"title":"데이터베이스 숫자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["formula"]},"formula":{"type":"object","properties":{"expression":{"type":"string"}},"required":["expression"]}},"required":["id","name","type","formula"],"title":"데이터베이스 공식 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["select"]},"select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}}},"required":["options"]}},"required":["id","name","type","select"],"title":"데이터베이스 선택 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["multi_select"]},"multi_select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}}},"required":["options"]}},"required":["id","name","type","multi_select"],"title":"데이터베이스 다중 선택 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["status"]},"status":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}},"groups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]},"option_ids":{"type":"array","items":{"type":"string"}}},"required":["id","name","color","option_ids"]}}},"required":["options","groups"]}},"required":["id","name","type","status"],"title":"데이터베이스 상태 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["relation"]},"relation":{"type":"object","properties":{"database_id":{"type":"string"},"synced_property_id":{"type":"string"},"synced_property_name":{"type":"string"}},"required":["database_id","synced_property_id","synced_property_name"]}},"required":["id","name","type","relation"],"title":"데이터베이스 관계 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["rollup"]},"rollup":{"type":"object","properties":{"rollup_property_name":{"type":"string"},"relation_property_name":{"type":"string"},"rollup_property_id":{"type":"string"},"relation_property_id":{"type":"string"},"function":{"type":"string","enum":["average","unique","count","count_values","empty","not_empty","show_unique","percent_empty","percent_not_empty","sum","median","min","max","range","earliest_date","latest_date","date_range","checked","unchecked","percent_checked","percent_unchecked","count_per_group","percent_per_group","show_original"]}},"required":["rollup_property_name","relation_property_name","rollup_property_id","relation_property_id","function"]},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","rollup","id","name"],"title":"데이터베이스 집계 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["title"]},"title":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","title","id","name"],"title":"데이터베이스 제목 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["rich_text"]},"rich_text":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","rich_text"],"title":"데이터베이스 텍스트 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["url"]},"url":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","url","id","name"],"title":"데이터베이스 Url 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["people"]},"people":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","people"],"title":"데이터베이스 사람 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["files"]},"files":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","files"],"title":"데이터베이스 파일 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["email"]},"email":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","email"],"title":"데이터베이스 이메일 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["phone_number"]},"phone_number":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","phone_number"],"title":"데이터베이스 전화번호 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["date"]},"date":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","date"],"title":"데이터베이스 날짜 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["checkbox"]},"checkbox":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","checkbox"],"title":"데이터베이스 체크박스 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["created_by"]}},"required":["id","name","type"],"title":"데이터베이스 작성자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["created_time"]},"created_time":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","created_time"],"title":"데이터베이스 작성 시간 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["last_edited_by"]},"last_edited_by":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","last_edited_by"],"title":"데이터베이스 마지막 수정자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["last_edited_time"]},"last_edited_time":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","last_edited_time"],"title":"데이터베이스 수정 시간 속성"}]}}},"required":["id","title","properties"],"title":"데이터베이스 정보"}},"description":"데이터베이스 목록 조회.\n\n데이터베이스에 아이템을 생성하기 위해 데이터베이스 목록을 조회합니다."},{"method":"post","path":"/connector/notion/get/database-info/{databaseId}","name":"connector_notion_get_database_info_postByDatabaseid","strict":true,"parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"데이터베이스 고유 id"},"title":{"type":"string","title":"제목P","description":"데이터베이스 제목"},"properties":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T","additionalProperties":{"oneOf":[{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["number"]},"number":{"type":"object","properties":{"format":{"type":"string","enum":["number","percent","number_with_commas","dollar","canadian_dollar","singapore_dollar","euro","pound","yen","ruble","rupee","won","yuan","real","lira","rupiah","franc","hong_kong_dollar","new_zealand_dollar","krona","norwegian_krone","mexican_peso","rand","new_taiwan_dollar","danish_krone","zloty","baht","forint","koruna","shekel","chilean_peso","philippine_peso","dirham","colombian_peso","riyal","ringgit","leu","argentine_peso","uruguayan_peso","peruvian_sol"]}},"required":["format"]}},"required":["id","name","type","number"],"title":"데이터베이스 숫자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["formula"]},"formula":{"type":"object","properties":{"expression":{"type":"string"}},"required":["expression"]}},"required":["id","name","type","formula"],"title":"데이터베이스 공식 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["select"]},"select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}}},"required":["options"]}},"required":["id","name","type","select"],"title":"데이터베이스 선택 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["multi_select"]},"multi_select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}}},"required":["options"]}},"required":["id","name","type","multi_select"],"title":"데이터베이스 다중 선택 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["status"]},"status":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]}},"required":["id","name","color"]}},"groups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string","enum":["default","gray","brown","orange","yellow","green","blue","purple","pink","red"]},"option_ids":{"type":"array","items":{"type":"string"}}},"required":["id","name","color","option_ids"]}}},"required":["options","groups"]}},"required":["id","name","type","status"],"title":"데이터베이스 상태 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["relation"]},"relation":{"type":"object","properties":{"database_id":{"type":"string"},"synced_property_id":{"type":"string"},"synced_property_name":{"type":"string"}},"required":["database_id","synced_property_id","synced_property_name"]}},"required":["id","name","type","relation"],"title":"데이터베이스 관계 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["rollup"]},"rollup":{"type":"object","properties":{"rollup_property_name":{"type":"string"},"relation_property_name":{"type":"string"},"rollup_property_id":{"type":"string"},"relation_property_id":{"type":"string"},"function":{"type":"string","enum":["average","unique","count","count_values","empty","not_empty","show_unique","percent_empty","percent_not_empty","sum","median","min","max","range","earliest_date","latest_date","date_range","checked","unchecked","percent_checked","percent_unchecked","count_per_group","percent_per_group","show_original"]}},"required":["rollup_property_name","relation_property_name","rollup_property_id","relation_property_id","function"]},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","rollup","id","name"],"title":"데이터베이스 집계 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["title"]},"title":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","title","id","name"],"title":"데이터베이스 제목 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["rich_text"]},"rich_text":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","rich_text"],"title":"데이터베이스 텍스트 속성"},{"type":"object","properties":{"type":{"type":"string","enum":["url"]},"url":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"id":{"type":"string"},"name":{"type":"string"}},"required":["type","url","id","name"],"title":"데이터베이스 Url 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["people"]},"people":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","people"],"title":"데이터베이스 사람 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["files"]},"files":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","files"],"title":"데이터베이스 파일 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["email"]},"email":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","email"],"title":"데이터베이스 이메일 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["phone_number"]},"phone_number":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","phone_number"],"title":"데이터베이스 전화번호 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["date"]},"date":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","date"],"title":"데이터베이스 날짜 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["checkbox"]},"checkbox":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","checkbox"],"title":"데이터베이스 체크박스 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["created_by"]}},"required":["id","name","type"],"title":"데이터베이스 작성자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["created_time"]},"created_time":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","created_time"],"title":"데이터베이스 작성 시간 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["last_edited_by"]},"last_edited_by":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","last_edited_by"],"title":"데이터베이스 마지막 수정자 속성"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["last_edited_time"]},"last_edited_time":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"}},"required":["id","name","type","last_edited_time"],"title":"데이터베이스 수정 시간 속성"}]}}},"required":["id","title","properties"],"title":"데이터베이스 정보"},"description":"데이터베이스 정보 조회.\n\n데이터베이스에 아이템을 생성하기 위한 데이터베이스 정보를 조회합니다."},{"method":"post","path":"/connector/notion/database-item/{databaseId}","name":"connector_notion_database_item_postByDatabaseid","strict":true,"parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 아이템을 생성할 데이터베이스 고유 id"},"body":{"type":"object","properties":{"value":{"type":"string","title":"속성 값","description":"데이터베이스 속성에 추가할 값"},"content":{"type":"string","title":"페이지에 넣을 내용","description":"생성할 데이터베이스 아이템 페이지에 넣을 내용"},"contentType":{"type":"string","enum":["plainText","markdown"],"title":"페이지 내용의 유형","description":"생성할 데이터베이스 아이템 페이지 내용 유형"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"데이터베이스에 아이템을 추가할 때 필요한 정보","additionalProperties":{}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 아이템을 생성할 데이터베이스 고유 id"},"body":{"type":"object","properties":{"value":{"type":"string","title":"속성 값","description":"데이터베이스 속성에 추가할 값"},"content":{"type":"string","title":"페이지에 넣을 내용","description":"생성할 데이터베이스 아이템 페이지에 넣을 내용"},"contentType":{"type":"string","enum":["plainText","markdown"],"title":"페이지 내용의 유형","description":"생성할 데이터베이스 아이템 페이지 내용 유형"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"데이터베이스에 아이템을 추가할 때 필요한 정보","additionalProperties":{}}}}}],"human":[]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"부모 데이터베이스 아이템 객체 유형"},"database_id":{"type":"string","title":"데이터베이스 id","description":"데이터 베이스 아이템 부모 id"}},"required":["type","database_id"],"title":"부모 데이터베이스 아이템","description":"부모 데이터베이스 아이템 정보"},"properties":{"title":"속성","description":"데이터베이스 아이템 속성"},"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지 객체의 유형"},"created_time":{"type":"string","title":"생성 일자","description":"페이지가 생성된 일자"},"last_edited_time":{"type":"string","title":"마지막 수정 일자","description":"페이지가 마지막으로 수정된 일자"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 생성한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 생성한 사람의 고유 id"}},"required":["object","id"],"title":"생성한 사람","description":"페이지를 생성한 사람에 대한 정보"},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 마지막으로 수정한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 마지막으로 수정한 사람의 고유 id"}},"required":["object","id"],"title":"마지막으로 수정한 사람","description":"페이지를 마지막으로 수정한 사람에 대한 정보"},"cover":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"이미지 유형"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"외부 이미지 정보"}},"required":["type","external"],"title":"배경 이미지","nullable":true,"description":"페이지 배경 이미지 정보"},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"],"title":"유형","description":"아이콘 유형"},"emoji":{"type":"string","nullable":true,"title":"이모지 아이콘","description":"아이콘 유형이 emoji 일 때의 아이콘 정보"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"아이콘","nullable":true,"description":"아이콘 유형이 icon 일 때의 아이콘 정보"},"file":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"파일 url"},"expiry_time":{"type":"string","title":"만료시간","description":"이미지 파일 만료시간"}},"required":["url","expiry_time"],"title":"아이콘 파일","description":"아이콘 유형이 file 일 때의 아이콘 정보"}},"required":["type"],"title":"아이콘","nullable":true,"description":"페이지 아이콘 정보"},"archived":{"type":"boolean","title":"임시 보관 여부","description":"페이지 임시 보관 여부"},"url":{"type":"string","format":"uri","title":"url","description":"페이지 url"},"public_url":{"type":"string","format":"uri","nullable":true,"title":"공개 url","description":"페이지 공개 url"},"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id"],"title":"데이터베이스 아이템 생성 결과"},"description":"데이터베이스 아이템 생성.\n\n노션 테이블 데이터베이스에 아이템을 생성합니다."},{"method":"patch","path":"/connector/notion/database-item/{databaseId}","name":"connector_notion_database_item_patchByDatabaseid","strict":true,"parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 수정할 데이터베이스 고유 id"},"body":{"type":"object","properties":{"pageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"title":"페이지","description":"업데이트 할 페이지"},"content":{"type":"string","title":"내용","description":"업데이트 할 데이터베이스 페이지 내용"},"value":{"type":"string","title":"속성 값","description":"업데이트 할 데이터베이스 속성 값"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["pageId","secretKey"],"title":"데이터베이스에 존재하는 아이템을 수정할 때 필요한 정보","additionalProperties":{}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 수정할 데이터베이스 고유 id"},"body":{"type":"object","properties":{"pageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"title":"페이지","description":"업데이트 할 페이지"},"content":{"type":"string","title":"내용","description":"업데이트 할 데이터베이스 페이지 내용"},"value":{"type":"string","title":"속성 값","description":"업데이트 할 데이터베이스 속성 값"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["pageId","secretKey"],"title":"데이터베이스에 존재하는 아이템을 수정할 때 필요한 정보","additionalProperties":{}}}}}],"human":[]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"부모 데이터베이스 아이템 객체 유형"},"database_id":{"type":"string","title":"데이터베이스 id","description":"데이터 베이스 아이템 부모 id"}},"required":["type","database_id"],"title":"부모 데이터베이스 아이템","description":"부모 데이터베이스 아이템 정보"},"properties":{"title":"속성","description":"데이터베이스 아이템 속성"},"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지 객체의 유형"},"created_time":{"type":"string","title":"생성 일자","description":"페이지가 생성된 일자"},"last_edited_time":{"type":"string","title":"마지막 수정 일자","description":"페이지가 마지막으로 수정된 일자"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 생성한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 생성한 사람의 고유 id"}},"required":["object","id"],"title":"생성한 사람","description":"페이지를 생성한 사람에 대한 정보"},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 마지막으로 수정한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 마지막으로 수정한 사람의 고유 id"}},"required":["object","id"],"title":"마지막으로 수정한 사람","description":"페이지를 마지막으로 수정한 사람에 대한 정보"},"cover":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"이미지 유형"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"외부 이미지 정보"}},"required":["type","external"],"title":"배경 이미지","nullable":true,"description":"페이지 배경 이미지 정보"},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"],"title":"유형","description":"아이콘 유형"},"emoji":{"type":"string","nullable":true,"title":"이모지 아이콘","description":"아이콘 유형이 emoji 일 때의 아이콘 정보"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"아이콘","nullable":true,"description":"아이콘 유형이 icon 일 때의 아이콘 정보"},"file":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"파일 url"},"expiry_time":{"type":"string","title":"만료시간","description":"이미지 파일 만료시간"}},"required":["url","expiry_time"],"title":"아이콘 파일","description":"아이콘 유형이 file 일 때의 아이콘 정보"}},"required":["type"],"title":"아이콘","nullable":true,"description":"페이지 아이콘 정보"},"archived":{"type":"boolean","title":"임시 보관 여부","description":"페이지 임시 보관 여부"},"url":{"type":"string","format":"uri","title":"url","description":"페이지 url"},"public_url":{"type":"string","format":"uri","nullable":true,"title":"공개 url","description":"페이지 공개 url"},"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id"],"title":"데이터베이스 아이템 생성 결과"},"description":"데이터베이스 아이템 수정.\n\n데이터베이스에 있는 아이템 정보를 수정합니다."},{"method":"post","path":"/connector/notion/get-page-by-title","name":"connector_notion_get_page_by_title_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"페이지 제목"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["title","secretKey"],"title":"페이지 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"페이지 제목"}},"required":["title"],"title":"페이지 검색에 필요한 정보"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"페이지 검색에 필요한 정보"}}}}]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"부모 페이지 객체 유형"},"workspace":{"type":"boolean","title":"워크스페이스 여부","description":"부모 페이지가 워크스페이스 인지 여부"}},"required":["type","workspace"],"title":"부모 페이지","description":"부모 페이지 정보"},"properties":{"type":"object","properties":{"title":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"페이지 속성 id"},"type":{"type":"string","title":"속성 유형","description":"페이지 속성 유형"},"title":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"제목 속성 유형"},"text":{"type":"object","properties":{"content":{"type":"string","title":"내용","description":"제목 텍스트 내용"},"link":{"type":"string","format":"uri","nullable":true,"title":"링크","description":"페이지 제목 링크"}},"required":["content","link"],"title":"페이지 제목 텍스트 정보"},"annotations":{"type":"object","properties":{"bold":{"type":"boolean","title":"볼드체 여부","description":"제목 텍스트 볼드체 여부"},"italic":{"type":"boolean","title":"이탤릭체 여부","description":"제목 텍스트 이탤릭체 여부"},"strikethrough":{"type":"boolean","title":"취소선 여부","description":"제목 텍스트 취소선 여부"},"underline":{"type":"boolean","title":"밑줄 여부","description":"제목 텍스트 밑줄 여부"},"code":{"type":"boolean","title":"코드로 감싸져 있는지 여부","description":"제목 텍스트가 코드로 감싸져 있는지 여부"},"color":{"type":"string","title":"색깔","description":"제목 텍스트 색상"}},"required":["bold","italic","strikethrough","underline","code","color"],"title":"페이지 제목 부가 정보"},"plain_text":{"type":"string","title":"원본","description":"페이지 제목 원본 텍스트"},"href":{"type":"string","format":"uri","nullable":true,"title":"링크","description":"페이지 링크"}},"required":["type","text","annotations","plain_text","href"],"title":"페이지 제목 속성"},"title":"제목 속성","description":"페이지 제목 속성 정보"}},"required":["id","type","title"],"title":"제목 속성","description":"제목 속성의 정보"}},"required":["title"],"title":"페이지 속성 정보"},"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지 객체의 유형"},"created_time":{"type":"string","title":"생성 일자","description":"페이지가 생성된 일자"},"last_edited_time":{"type":"string","title":"마지막 수정 일자","description":"페이지가 마지막으로 수정된 일자"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 생성한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 생성한 사람의 고유 id"}},"required":["object","id"],"title":"생성한 사람","description":"페이지를 생성한 사람에 대한 정보"},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 마지막으로 수정한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 마지막으로 수정한 사람의 고유 id"}},"required":["object","id"],"title":"마지막으로 수정한 사람","description":"페이지를 마지막으로 수정한 사람에 대한 정보"},"cover":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"이미지 유형"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"외부 이미지 정보"}},"required":["type","external"],"title":"배경 이미지","nullable":true,"description":"페이지 배경 이미지 정보"},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"],"title":"유형","description":"아이콘 유형"},"emoji":{"type":"string","nullable":true,"title":"이모지 아이콘","description":"아이콘 유형이 emoji 일 때의 아이콘 정보"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"아이콘","nullable":true,"description":"아이콘 유형이 icon 일 때의 아이콘 정보"},"file":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"파일 url"},"expiry_time":{"type":"string","title":"만료시간","description":"이미지 파일 만료시간"}},"required":["url","expiry_time"],"title":"아이콘 파일","description":"아이콘 유형이 file 일 때의 아이콘 정보"}},"required":["type"],"title":"아이콘","nullable":true,"description":"페이지 아이콘 정보"},"archived":{"type":"boolean","title":"임시 보관 여부","description":"페이지 임시 보관 여부"},"url":{"type":"string","format":"uri","title":"url","description":"페이지 url"},"public_url":{"type":"string","format":"uri","nullable":true,"title":"공개 url","description":"페이지 공개 url"},"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id"]},"description":"제목으로 페이지 검색.\n\n제목으로 페이지를 검색합니다."},{"method":"post","path":"/connector/notion/find-item-list/{databaseId}","name":"connector_notion_find_item_list_postByDatabaseid","strict":true,"parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"부모 데이터베이스 아이템 객체 유형"},"database_id":{"type":"string","title":"데이터베이스 id","description":"데이터 베이스 아이템 부모 id"}},"required":["type","database_id"],"title":"부모 데이터베이스 아이템","description":"부모 데이터베이스 아이템 정보"},"properties":{"title":"속성","description":"데이터베이스 아이템 속성"},"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지 객체의 유형"},"created_time":{"type":"string","title":"생성 일자","description":"페이지가 생성된 일자"},"last_edited_time":{"type":"string","title":"마지막 수정 일자","description":"페이지가 마지막으로 수정된 일자"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 생성한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 생성한 사람의 고유 id"}},"required":["object","id"],"title":"생성한 사람","description":"페이지를 생성한 사람에 대한 정보"},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 마지막으로 수정한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 마지막으로 수정한 사람의 고유 id"}},"required":["object","id"],"title":"마지막으로 수정한 사람","description":"페이지를 마지막으로 수정한 사람에 대한 정보"},"cover":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"이미지 유형"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"외부 이미지 정보"}},"required":["type","external"],"title":"배경 이미지","nullable":true,"description":"페이지 배경 이미지 정보"},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"],"title":"유형","description":"아이콘 유형"},"emoji":{"type":"string","nullable":true,"title":"이모지 아이콘","description":"아이콘 유형이 emoji 일 때의 아이콘 정보"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"아이콘","nullable":true,"description":"아이콘 유형이 icon 일 때의 아이콘 정보"},"file":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"파일 url"},"expiry_time":{"type":"string","title":"만료시간","description":"이미지 파일 만료시간"}},"required":["url","expiry_time"],"title":"아이콘 파일","description":"아이콘 유형이 file 일 때의 아이콘 정보"}},"required":["type"],"title":"아이콘","nullable":true,"description":"페이지 아이콘 정보"},"archived":{"type":"boolean","title":"임시 보관 여부","description":"페이지 임시 보관 여부"},"url":{"type":"string","format":"uri","title":"url","description":"페이지 url"},"public_url":{"type":"string","format":"uri","nullable":true,"title":"공개 url","description":"페이지 공개 url"},"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id"],"title":"데이터베이스 아이템 생성 결과"}},"description":"데이터베이스 아이템 목록 조회.\n\n테이블 데이터베이스에 존재하는 아이템 목록을 조회합니다."},{"method":"post","path":"/connector/notion/find-item/{databaseId}","name":"connector_notion_find_item_postByDatabaseid","strict":true,"parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"},"body":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"데이터베이스 아이템에 있는 아이템의 제목"},"number":{"type":"integer","title":"숫자","description":"데이터베이스 아이템에 있는 숫자"},"url":{"type":"string","format":"uri","title":"url","description":"데이터베이스 아이템에 있는 url"},"email":{"type":"string","format":"email","title":"이메일 주소","description":"데이터베이스 아이템에 있는 이메일 주소"},"rich_text":{"type":"string","title":"텍스트","description":"데이터베이스 아이템에 있는 텍스트"},"phone_number":{"type":"string","title":"전화번호","description":"데이터베이스 아이템에 있는 전화번호"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"데이터베이스에 있는 아이템을 찾을 때 필요한 정보","additionalProperties":{}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" 데이터베이스 고유 id"},"body":{"type":"object","properties":{"title":{"type":"string","title":"제목","description":"데이터베이스 아이템에 있는 아이템의 제목"},"number":{"type":"integer","title":"숫자","description":"데이터베이스 아이템에 있는 숫자"},"url":{"type":"string","format":"uri","title":"url","description":"데이터베이스 아이템에 있는 url"},"email":{"type":"string","format":"email","title":"이메일 주소","description":"데이터베이스 아이템에 있는 이메일 주소"},"rich_text":{"type":"string","title":"텍스트","description":"데이터베이스 아이템에 있는 텍스트"},"phone_number":{"type":"string","title":"전화번호","description":"데이터베이스 아이템에 있는 전화번호"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"데이터베이스에 있는 아이템을 찾을 때 필요한 정보","additionalProperties":{}}}}}],"human":[]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"부모 데이터베이스 아이템 객체 유형"},"database_id":{"type":"string","title":"데이터베이스 id","description":"데이터 베이스 아이템 부모 id"}},"required":["type","database_id"],"title":"부모 데이터베이스 아이템","description":"부모 데이터베이스 아이템 정보"},"properties":{"title":"속성","description":"데이터베이스 아이템 속성"},"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지 객체의 유형"},"created_time":{"type":"string","title":"생성 일자","description":"페이지가 생성된 일자"},"last_edited_time":{"type":"string","title":"마지막 수정 일자","description":"페이지가 마지막으로 수정된 일자"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 생성한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 생성한 사람의 고유 id"}},"required":["object","id"],"title":"생성한 사람","description":"페이지를 생성한 사람에 대한 정보"},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","database","block","property_item","comment"],"title":"개체 유형","description":"페이지를 마지막으로 수정한 사람 객체의 유형"},"id":{"type":"string","title":"id","description":"페이지를 마지막으로 수정한 사람의 고유 id"}},"required":["object","id"],"title":"마지막으로 수정한 사람","description":"페이지를 마지막으로 수정한 사람에 대한 정보"},"cover":{"type":"object","properties":{"type":{"type":"string","title":"유형","description":"이미지 유형"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"외부 이미지 정보"}},"required":["type","external"],"title":"배경 이미지","nullable":true,"description":"페이지 배경 이미지 정보"},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"],"title":"유형","description":"아이콘 유형"},"emoji":{"type":"string","nullable":true,"title":"이모지 아이콘","description":"아이콘 유형이 emoji 일 때의 아이콘 정보"},"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"이미지 url"}},"required":["url"],"title":"아이콘","nullable":true,"description":"아이콘 유형이 icon 일 때의 아이콘 정보"},"file":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url","description":"파일 url"},"expiry_time":{"type":"string","title":"만료시간","description":"이미지 파일 만료시간"}},"required":["url","expiry_time"],"title":"아이콘 파일","description":"아이콘 유형이 file 일 때의 아이콘 정보"}},"required":["type"],"title":"아이콘","nullable":true,"description":"페이지 아이콘 정보"},"archived":{"type":"boolean","title":"임시 보관 여부","description":"페이지 임시 보관 여부"},"url":{"type":"string","format":"uri","title":"url","description":"페이지 url"},"public_url":{"type":"string","format":"uri","nullable":true,"title":"공개 url","description":"페이지 공개 url"},"id":{"type":"string","title":"페이지 id","description":"생성된 페이지의 고유 id"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id"],"title":"데이터베이스 아이템 생성 결과"},"description":"데이터베이스 아이템 조회.\n\n테이블 데이터베이스에 존재하는 아이템을 조회합니다."},{"method":"post","path":"/connector/google-hotel","name":"connector_google_hotel_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"check_in_date":{"type":"string","format":"date","title":"체크인 날짜","description":"체크인 날짜를 설정하세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"check_out_date":{"type":"string","format":"date","title":"체크아웃 날짜","description":"체크아웃 날짜를 설정하세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","default":2,"title":"성인 인원","description":"투숙하는 성인 인원수를 설정하세요. 기본값은 2입니다."},"children":{"type":"integer","default":0,"title":"아동 인원","description":"투숙하는 아동 인원수를 설정하세요. 기본값은 0입니다."},"sort_by":{"type":"string","enum":["3","8","13"],"title":"정렬 기준","description":"원하는 정렬 기준을 선택해주세요.\n\n가능한 값으로 3, 8, 13만 가능합니다."},"min_price":{"type":"integer","title":"최소 가격","description":"가격 범위의 최소 가격을 설정해주세요."},"max_price":{"type":"integer","title":"최대 가격","description":"가격 범위의 최대 가격을 설정해주세요."},"rating":{"type":"string","enum":["7","8","9"],"title":"평점","description":"선택한 평점 이상의 숙소만 검색합니다.\n\n가능한 값으로 7, 8, 9만 가능합니다."},"type":{"type":"array","items":{"type":"string","enum":["12","13","14","15","16","17","18","19","20","21","22","23","24"]},"title":"숙소 유형","description":"숙소 유형을 선택해주세요.\n\n가능한 값으로 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24만 가능합니다."},"hotel_class":{"type":"array","items":{"type":"string","enum":["1","2","3","4","5"]},"title":"숙소 등급","description":"숙소 등급을 선택해주세요.'\n\n가능한 값으로 1, 2, 3, 4, 5만 가능합니다."},"free_cancellation":{"type":"boolean","title":"무료취소 가능 여부","description":"무료 취소 가능한 숙소만 검색합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","check_in_date","check_out_date","max_results"],"title":"숙소 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 키워드를 입력하세요."},"check_in_date":{"type":"string","format":"date","title":"체크인 날짜","description":"체크인 날짜를 설정하세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"check_out_date":{"type":"string","format":"date","title":"체크아웃 날짜","description":"체크아웃 날짜를 설정하세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","default":2,"title":"성인 인원","description":"투숙하는 성인 인원수를 설정하세요. 기본값은 2입니다."},"children":{"type":"integer","default":0,"title":"아동 인원","description":"투숙하는 아동 인원수를 설정하세요. 기본값은 0입니다."},"sort_by":{"type":"string","enum":["3","8","13"],"title":"정렬 기준","description":"원하는 정렬 기준을 선택해주세요.\n\n가능한 값으로 3, 8, 13만 가능합니다."},"min_price":{"type":"integer","title":"최소 가격","description":"가격 범위의 최소 가격을 설정해주세요."},"max_price":{"type":"integer","title":"최대 가격","description":"가격 범위의 최대 가격을 설정해주세요."},"rating":{"type":"string","enum":["7","8","9"],"title":"평점","description":"선택한 평점 이상의 숙소만 검색합니다.\n\n가능한 값으로 7, 8, 9만 가능합니다."},"type":{"type":"array","items":{"type":"string","enum":["12","13","14","15","16","17","18","19","20","21","22","23","24"]},"title":"숙소 유형","description":"숙소 유형을 선택해주세요.\n\n가능한 값으로 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24만 가능합니다."},"hotel_class":{"type":"array","items":{"type":"string","enum":["1","2","3","4","5"]},"title":"숙소 등급","description":"숙소 등급을 선택해주세요.'\n\n가능한 값으로 1, 2, 3, 4, 5만 가능합니다."},"free_cancellation":{"type":"boolean","title":"무료취소 가능 여부","description":"무료 취소 가능한 숙소만 검색합니다."},"max_results":{"type":"integer","title":"검색 결과 개수","description":"검색 결과의 개수를 설정합니다."}},"required":["keyword","check_in_date","check_out_date","max_results"],"title":"숙소 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"숙소 이름","description":"숙소 이름"},"description":{"type":"string","title":"숙소 설명","description":"숙소 설명"},"link":{"type":"string","title":"숙소 링크","description":"숙소 링크"},"check_in_time":{"type":"string","title":"체크인 시간","description":"숙소 체크인 시간"},"check_out_time":{"type":"string","title":"체크아웃 시간","description":"숙소 체크아웃 시간"},"price":{"type":"string","title":"숙소 가격","description":"숙소 가격"},"nearby_place":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"주변 시설 이름","description":"주변 시설 이름"},"transportations":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","title":"교통편 종류","description":"교통편 종류"},"duration":{"type":"string","title":"소요 시간","description":"주변 시설까지 소요 시간"}},"required":["type","duration"]},"title":"교통편","description":"주변 시설 교통편"}},"required":["name"],"title":"주변 시설"},"title":"주변 시설","description":"숙소 주변 시설"},"hotel_class":{"type":"string","title":"숙소 등급","description":"숙소 등급"},"thumbnails":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"title":"썸네일","description":"숙소 썸네일 이미지"},"rating":{"type":"string","title":"평점","description":"숙소 평점"},"review_count":{"type":"string","title":"리뷰 갯수","description":"리뷰 갯수"},"amenities":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"title":"어메니티","description":"숙소에서 제공하는 어메니티"},"excluded_amenities":{"type":"array","items":{"type":"string"},"title":"제공 하지 않는 어메니티","description":"숙소에서 제공하지 않는 어메니티"}},"required":["name","price","thumbnails","amenities"],"title":"숙소 검색 결과"}},"description":"구글 호텔 검색.\n\n구글 호텔 서비스를 사용하여 숙소를 검색합니다"},{"method":"post","path":"/connector/airport-information/search","name":"connector_airport_information_search_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 국가나 도시의 이름을 입력하세요."}},"required":["keyword"],"title":"공항 정보 검색 조건"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"검색어","description":"검색할 국가나 도시의 이름을 입력하세요."}},"required":["keyword"],"title":"공항 정보 검색 조건"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"country_name":{"type":"string","title":"국가","description":"국가 이름"},"city_name":{"type":"string","title":"도시","description":"도시 이름"},"airport_name":{"type":"string","title":"공항","description":"공항 이름"},"airport_code":{"type":"string","title":"공항 코드","description":"공항 코드"}},"required":["country_name","city_name","airport_name","airport_code"],"title":"공항 정보 검색 결과"}},"description":"공항 정보 검색.\n\n입력된 검색어를 사용하여 공항 정보를 검색합니다."},{"method":"post","path":"/connector/google-flight/one-way","name":"connector_google_flight_one_way_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"출발지","description":"출발지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 출발지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 departure_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"도착지","description":"도착지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 도착지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 arrival_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"type":{"type":"string","enum":["1","2"],"title":"왕복 또는 편도 여부","description":"왕복 또는 편도 여부를 선택해주세요.\n\n가능한 값으로 1, 2가 있습니다.\n\n왕복이면 \"1\", 편도면 \"2\"를 선택해주세요."},"outbound_date":{"type":"string","format":"date","title":"가는 날짜","description":"가는 날짜를 입력해주세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"return_date":{"type":"string","format":"date","title":"오는 날짜","description":"오는 날짜를 입력해주세요.\n\ntype이 \"1\" 이면 필수로 넣어줘야 합니다.\n\ntype이 \"2\" 이면 넣어주지 않아야 합니다.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","title":"성인 인원","description":"성인 인원수를 입력해주세요."},"children":{"type":"integer","title":"아동 인원","description":"아동 인원수를 입력해주세요."},"stop":{"type":"string","enum":["0","1","2","3"],"title":"직항 여부","description":"직항 여부를 선택해주세요.\n\n가능한 값으로 0, 1, 2, 3이 있습니다."},"max_price":{"type":"integer","title":"최대 가격","description":"항공권의 최대 가격을 입력해주세요.\n\n입력받은 최대 가격을 넘지 않는 항공권을 검색해야 합니다."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"항공권 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"출발지","description":"출발지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 출발지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 departure_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"도착지","description":"도착지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 도착지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 arrival_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"type":{"type":"string","enum":["1","2"],"title":"왕복 또는 편도 여부","description":"왕복 또는 편도 여부를 선택해주세요.\n\n가능한 값으로 1, 2가 있습니다.\n\n왕복이면 \"1\", 편도면 \"2\"를 선택해주세요."},"outbound_date":{"type":"string","format":"date","title":"가는 날짜","description":"가는 날짜를 입력해주세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"return_date":{"type":"string","format":"date","title":"오는 날짜","description":"오는 날짜를 입력해주세요.\n\ntype이 \"1\" 이면 필수로 넣어줘야 합니다.\n\ntype이 \"2\" 이면 넣어주지 않아야 합니다.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","title":"성인 인원","description":"성인 인원수를 입력해주세요."},"children":{"type":"integer","title":"아동 인원","description":"아동 인원수를 입력해주세요."},"stop":{"type":"string","enum":["0","1","2","3"],"title":"직항 여부","description":"직항 여부를 선택해주세요.\n\n가능한 값으로 0, 1, 2, 3이 있습니다."},"max_price":{"type":"integer","title":"최대 가격","description":"항공권의 최대 가격을 입력해주세요.\n\n입력받은 최대 가격을 넘지 않는 항공권을 검색해야 합니다."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"항공권 검색에 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"departure_airport":{"type":"object","properties":{"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."},"time":{"type":"string","title":"비행기 출발 일자 / 시각","description":"비행기가 출발하는 일자와 시각입니다."}},"required":["name","code","time"],"title":"항공편 정보"},"arrival_airport":{"type":"object","properties":{"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."},"time":{"type":"string","title":"비행기 출발 일자 / 시각","description":"비행기가 출발하는 일자와 시각입니다."}},"required":["name","code","time"],"title":"항공편 정보"},"duration":{"type":"string","title":"비행 시간","description":"비행에 걸리는 소요 시간입니다."},"airplane":{"type":"string","title":"비행기 기종","description":"비행기 기종 정보입니다."},"airline":{"type":"string","title":"항공사","description":"항공사 정보입니다."},"airline_logo":{"type":"string","format":"uri","contentMediaType":"image/*","title":"항공사 로고","description":"항공사 로고 이미지입니다."},"travel_class":{"type":"string","title":"좌석 등급","description":"좌석 등급 정보입니다."},"flight_number":{"type":"string","title":"항공편 번호","description":"항공편 번호입니다."}},"required":["departure_airport","arrival_airport","duration","airplane","airline","airline_logo","travel_class","flight_number"]},"title":"항공편 정보","description":"항공편 정보입니다."},"total_duration":{"type":"string","title":"비행 총 소요시간","description":"비행에 걸리는 총 소요시간입니다."},"price":{"type":"string","title":"항공편 가격","description":"항공편 가격입니다."},"layover":{"type":"object","properties":{"duration":{"type":"string","title":"환승 시간","description":"환승 시간입니다."},"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."}},"required":["duration","name","code"],"title":"환승 정보"},"departure_token":{"type":"string","title":"돌아오는 항공편 검색 토큰","description":"돌아오는 항공편 검색을 위한 토큰"},"booking_token":{"type":"string","title":"항공편 최종 확인 토큰","description":"항공편 최종 확인을 위한 토큰"}},"required":["flight","total_duration","price"],"title":"항공권 검색 결과","description":"항공권 검색 결과입니다."},"title":"최종 선택된 항공권 정보","description":"최종 선택된 항공권 정보입니다."},"booking_options":{"type":"array","items":{"type":"object","properties":{"book_with":{"type":"string","title":"예약 사이트","description":"선택할 항공편을 예약할 수 있는 사이트 입니다."},"price":{"type":"string","title":"가격","description":"선택된 항공편의 가격입니다."},"book_link":{"oneOf":[{"type":"string"},{"type":"object","properties":{"typia.tag":{"type":"object","properties":{"target":{"type":"string","enum":["string"]},"kind":{"type":"string","enum":["format"]},"value":{"type":"string","enum":["uri"]},"validate":{"type":"string","enum":["/\\/|:/.test($input) && /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i.test($input)"]},"exclusive":{"type":"array","items":{"oneOf":[{"type":"string","enum":["format"]},{"type":"string","enum":["pattern"]}]},"minItems":2,"maxItems":2},"schema":{"type":"object","properties":{"format":{"type":"string","enum":["uri"]}},"required":["format"]}},"required":["target","kind","value","validate","exclusive","schema"],"title":"This is a dummy property for compilation","description":"This is a dummy property for compilation.\n\nIt does not mean anything in runtime."}}}],"title":"예약 링크","description":"선택된 항공편을 예약할 수 있는 링크입니다."}},"required":["book_with","price","book_link"],"title":"예약 옵션","description":"예약 옵션입니다."},"title":"예약 정보","description":"선택한 항공편을 예약할 수 있는 정보들입니다."}},"required":["flight","booking_options"],"title":"최종 항공권 선택 결과","description":"최종 항공권 선택 결과입니다."},"description":"편도 항공편 검색.\n\n편도 항공편을 검색합니다."},{"method":"post","path":"/connector/google-flight/round-trip","name":"connector_google_flight_round_trip_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"출발지","description":"출발지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 출발지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 departure_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"도착지","description":"도착지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 도착지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 arrival_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"type":{"type":"string","enum":["1","2"],"title":"왕복 또는 편도 여부","description":"왕복 또는 편도 여부를 선택해주세요.\n\n가능한 값으로 1, 2가 있습니다.\n\n왕복이면 \"1\", 편도면 \"2\"를 선택해주세요."},"outbound_date":{"type":"string","format":"date","title":"가는 날짜","description":"가는 날짜를 입력해주세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"return_date":{"type":"string","format":"date","title":"오는 날짜","description":"오는 날짜를 입력해주세요.\n\ntype이 \"1\" 이면 필수로 넣어줘야 합니다.\n\ntype이 \"2\" 이면 넣어주지 않아야 합니다.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","title":"성인 인원","description":"성인 인원수를 입력해주세요."},"children":{"type":"integer","title":"아동 인원","description":"아동 인원수를 입력해주세요."},"stop":{"type":"string","enum":["0","1","2","3"],"title":"직항 여부","description":"직항 여부를 선택해주세요.\n\n가능한 값으로 0, 1, 2, 3이 있습니다."},"max_price":{"type":"integer","title":"최대 가격","description":"항공권의 최대 가격을 입력해주세요.\n\n입력받은 최대 가격을 넘지 않는 항공권을 검색해야 합니다."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"항공권 검색에 필요한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"출발지","description":"출발지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 출발지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 departure_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"도착지","description":"도착지 공항의 코드를 입력해주세요.\n\n왕복(type이 \"1\")이어도 도착지 코드는 동일해야 합니다.\n\n왕복(type이 \"1\")일 때 connector/google-flight/arrival을 호출하는 경우 arrival_id는 connector/google-flight/departure를 호출할 때와 동일해야 합니다."},"type":{"type":"string","enum":["1","2"],"title":"왕복 또는 편도 여부","description":"왕복 또는 편도 여부를 선택해주세요.\n\n가능한 값으로 1, 2가 있습니다.\n\n왕복이면 \"1\", 편도면 \"2\"를 선택해주세요."},"outbound_date":{"type":"string","format":"date","title":"가는 날짜","description":"가는 날짜를 입력해주세요.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"return_date":{"type":"string","format":"date","title":"오는 날짜","description":"오는 날짜를 입력해주세요.\n\ntype이 \"1\" 이면 필수로 넣어줘야 합니다.\n\ntype이 \"2\" 이면 넣어주지 않아야 합니다.\n\n오늘 날짜 이후의 날짜를 입력해주세요."},"adults":{"type":"integer","title":"성인 인원","description":"성인 인원수를 입력해주세요."},"children":{"type":"integer","title":"아동 인원","description":"아동 인원수를 입력해주세요."},"stop":{"type":"string","enum":["0","1","2","3"],"title":"직항 여부","description":"직항 여부를 선택해주세요.\n\n가능한 값으로 0, 1, 2, 3이 있습니다."},"max_price":{"type":"integer","title":"최대 가격","description":"항공권의 최대 가격을 입력해주세요.\n\n입력받은 최대 가격을 넘지 않는 항공권을 검색해야 합니다."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"항공권 검색에 필요한 정보"}}}}],"human":[]},"output":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"departure_airport":{"type":"object","properties":{"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."},"time":{"type":"string","title":"비행기 출발 일자 / 시각","description":"비행기가 출발하는 일자와 시각입니다."}},"required":["name","code","time"],"title":"항공편 정보"},"arrival_airport":{"type":"object","properties":{"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."},"time":{"type":"string","title":"비행기 출발 일자 / 시각","description":"비행기가 출발하는 일자와 시각입니다."}},"required":["name","code","time"],"title":"항공편 정보"},"duration":{"type":"string","title":"비행 시간","description":"비행에 걸리는 소요 시간입니다."},"airplane":{"type":"string","title":"비행기 기종","description":"비행기 기종 정보입니다."},"airline":{"type":"string","title":"항공사","description":"항공사 정보입니다."},"airline_logo":{"type":"string","format":"uri","contentMediaType":"image/*","title":"항공사 로고","description":"항공사 로고 이미지입니다."},"travel_class":{"type":"string","title":"좌석 등급","description":"좌석 등급 정보입니다."},"flight_number":{"type":"string","title":"항공편 번호","description":"항공편 번호입니다."}},"required":["departure_airport","arrival_airport","duration","airplane","airline","airline_logo","travel_class","flight_number"]},"title":"항공편 정보","description":"항공편 정보입니다."},"total_duration":{"type":"string","title":"비행 총 소요시간","description":"비행에 걸리는 총 소요시간입니다."},"price":{"type":"string","title":"항공편 가격","description":"항공편 가격입니다."},"layover":{"type":"object","properties":{"duration":{"type":"string","title":"환승 시간","description":"환승 시간입니다."},"name":{"type":"string","title":"공항 이름","description":"공항 이름입니다."},"code":{"type":"string","title":"공항 코드","description":"세자리 공항 코드입니다."}},"required":["duration","name","code"],"title":"환승 정보"},"departure_token":{"type":"string","title":"돌아오는 항공편 검색 토큰","description":"돌아오는 항공편 검색을 위한 토큰"},"booking_token":{"type":"string","title":"항공편 최종 확인 토큰","description":"항공편 최종 확인을 위한 토큰"}},"required":["flight","total_duration","price"],"title":"항공권 검색 결과","description":"항공권 검색 결과입니다."},"title":"최종 선택된 항공권 정보","description":"최종 선택된 항공권 정보입니다."},"booking_options":{"type":"array","items":{"type":"object","properties":{"book_with":{"type":"string","title":"예약 사이트","description":"선택할 항공편을 예약할 수 있는 사이트 입니다."},"price":{"type":"string","title":"가격","description":"선택된 항공편의 가격입니다."},"book_link":{"oneOf":[{"type":"string"},{"type":"object","properties":{"typia.tag":{"type":"object","properties":{"target":{"type":"string","enum":["string"]},"kind":{"type":"string","enum":["format"]},"value":{"type":"string","enum":["uri"]},"validate":{"type":"string","enum":["/\\/|:/.test($input) && /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i.test($input)"]},"exclusive":{"type":"array","items":{"oneOf":[{"type":"string","enum":["format"]},{"type":"string","enum":["pattern"]}]},"minItems":2,"maxItems":2},"schema":{"type":"object","properties":{"format":{"type":"string","enum":["uri"]}},"required":["format"]}},"required":["target","kind","value","validate","exclusive","schema"],"title":"This is a dummy property for compilation","description":"This is a dummy property for compilation.\n\nIt does not mean anything in runtime."}}}],"title":"예약 링크","description":"선택된 항공편을 예약할 수 있는 링크입니다."}},"required":["book_with","price","book_link"],"title":"예약 옵션","description":"예약 옵션입니다."},"title":"예약 정보","description":"선택한 항공편을 예약할 수 있는 정보들입니다."}},"required":["flight","booking_options"],"title":"최종 항공권 선택 결과","description":"최종 항공권 선택 결과입니다."},"description":"왕복 항공편 검색.\n\n왕복 항공편을 검색합니다."},{"method":"post","path":"/connector/slack/conversation/mark","name":"connector_slack_conversation_mark_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to mark the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to mark"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["channel","ts","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to mark the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to mark"}},"required":["channel","ts"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"Marks a specific message in a Slack channel as read\n\nYou need to know both the channel ID and the ts value of the message."},{"method":"post","path":"/connector/slack/scheduleMessage/text","name":"connector_slack_scheduleMessage_text_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"Transfer Schedule Time","description":"You can schedule the time you want to send the message in advance.\nThe scheduled time must be in the same form as the ts property in the Message."},"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts\n\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["post_at","channel","text","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"Transfer Schedule Time","description":"You can schedule the time you want to send the message in advance.\nThe scheduled time must be in the same form as the ts property in the Message."},"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts\n\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"}},"required":["post_at","channel","text"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["post_at"],"description":"From T, pick a set of properties whose keys are in the union K"},"description":"Create a schduled message\n\nBy default,\nit is not much different from sending a message except for specifying a schduled time,\nand requires a channel ID and message content.\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message.\n\nMessages booked through this feature are not visible in the Slack desktop app and can only be canceled through the API.\nTherefore, be careful in writing messages.\nIf you want to cancel, please refer to the message created through another connector and call the delete connector again.\n\nUsers may be embarrassed if the message you booked is not viewed in the Slack desktop app,\nso although it cannot be viewed in Slack before and after transmission,\nit would be a good idea to let them know that it will actually be transmitted in our service."},{"method":"delete","path":"/connector/slack/scheduleMessage","name":"connector_slack_scheduleMessage_erase","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to delete the scheduled message.\nIf you don't know the channel's ID, You need to view the channel first."},"scheduled_message_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-scheduled-messages","jmesPath":"scheduled_messages[].{value:id, label:text}"},"title":"scheduled message id to delete"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["channel","scheduled_message_id","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to delete the scheduled message.\nIf you don't know the channel's ID, You need to view the channel first."},"scheduled_message_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-scheduled-messages","jmesPath":"scheduled_messages[].{value:id, label:text}"},"title":"scheduled message id to delete"}},"required":["channel","scheduled_message_id"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"Delete the scheduled message\n\nTo clear a scheduled message,\nyou must get the exact id of that message, so you must first use the scheduled message lookup connector.\nWhen using this connector,\nthe ID of the channel is also required, which can be retrieved from the message object by querying the channel or by querying the scheduled message."},{"method":"post","path":"/connector/slack/postMessage/text/myself","name":"connector_slack_postMessage_text_myself_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"text":{"type":"string","title":"message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["text","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"text":{"type":"string","title":"message to send"}},"required":["text"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"description":"From T, pick a set of properties whose keys are in the union K"},"description":"post text message to myself in slack.\n\nsend message to myself\n\nHere, you can send a message as long as you have the message.\nThis feature identifies who the token's users are inside and sends a message to themselves.\nTherefore, even if you don't specify a channel,\nyou send a message to the `im` channel that corresponds to your own user id."},{"method":"post","path":"/connector/slack/postMessage/reply","name":"connector_slack_postMessage_reply_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to reply"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["ts","channel","text","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to reply"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"}},"required":["ts","channel","text"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"description":"From T, pick a set of properties whose keys are in the union K"},"description":"post reply message to thread.\n\nsend reply message to thread\n\nCreates a reply.\nTo reply, you must first look up the thread.\nYou can look up the thread and pass on the 'ts' value of that thread.\nYou still need the channel's ID here.\nThe channel's ID will start with a C or D and be an unknown string,\nnot a natural language name recognized by the user.\nTherefore, if you don't know the channel ID, you should also look up the channel."},{"method":"post","path":"/connector/slack/postMessage/text","name":"connector_slack_postMessage_text_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["channel","text","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nIf you don't know the channel's ID, You need to view the channel first."},"text":{"type":"string","title":"message to send"}},"required":["channel","text"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"description":"From T, pick a set of properties whose keys are in the union K"},"description":"post text message in slack.\n\nsend message to channel\n\nHere, you can send a message as long as you have the message and channel information you want to send."},{"method":"post","path":"/connector/slack/get-scheduled-messages","name":"connector_slack_get_scheduled_messages_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"scheduled_messages":{"type":"array","items":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"date_created":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"when the user scheduled the message"},"text":{"type":"string","title":"message contents"},"attachments":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title\n\nLarge title text near the top of the attachment."},"id":{"type":"number","title":"id"}},"description":"From T, pick a set of properties whose keys are in the union K"},"title":"Attachments\n\nAttachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up."},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"id":{"type":"string","title":"id of scheduled message"},"post_at_date":{"type":"string","title":"date-time format of post_at"}},"required":["post_at","date_created","text","channel","id","post_at_date"]},"title":"scheduled messages"},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["scheduled_messages","next_cursor"]},"description":"Get a list of scheduled messages\n\nLook up the messages you booked.\nYou can use `post_at` and `post_at_date` to find out when the message will be sent.\nIf you want to clear the message, use the `id` value in the scheduled message.\n\nIf a user wants to send a reservation message to himself,\nhe or she should look up both the user and the 'im' channel, then find the 'im' channel with his or her user ID and send it to that channel.\nWhat is on the 'im' channel includes not only the user's own channel, but also all the channels that can send and receive direct messages for each user."},{"method":"post","path":"/connector/slack/get-users","name":"connector_slack_get_users_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"users":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","title":"name","description":"This is the name of the user,\nbut in some countries,\nit may not be possible to call the user's name carelessly,\nand the company should refrain from using it because the position exists."},"display_name":{"type":"string","nullable":true,"title":"display name","description":"The user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy."},"real_name":{"type":"string","nullable":true,"title":"real_name","description":"The user's first and last name.\nUpdating this field will update first_name and last_name.\nIf only one name is provided, the value of last_name will be cleared."},"deleted":{"type":"boolean","title":"deleted","description":"This value is used to distinguish between deleted users."},"profile_image":{"type":"string","format":"uri","contentMediaType":"image/*","nullable":true,"title":"profile image","description":"There are several profile images for each image quality,\nbut here we provide them based on the first image uploaded by the user."}},"required":["id","name","display_name","real_name","deleted","profile_image"]},"title":"user list"},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["users","next_cursor"]},"description":"Look up the list of users in Slack.\n\nUsers include bots and refer to all users in the team who are looking up.\nHere, you can look up the user's ID and name, the name the user wanted to display, the profile image, and whether the user has been deleted.\nIf you look up the user here, you can send a message to your colleagues on a specific direct channel, such as an `im` ( = channel type. )\n\nThis connector is essential because the `im` channel query only shows the user's ID and does not know who the direct channel is talking to.\n\nThe user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy."},{"method":"post","path":"/connector/slack/get-replies","name":"connector_slack_get_replies_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to look up."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'."},"latest":{"type":"number","x-wrtn-placeholder":"1234567890.123456","title":"lastest\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"oldest":{"type":"number","default":0,"x-wrtn-placeholder":"1234567890.123456","title":"oldest\n\nOnly messages after this Unix timestamp will be included in results.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"latestTimestamp":{"type":"number","title":"latestTimestamp\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `lastest` property is present together."},"oldestTimestamp":{"type":"number","title":"oldestTimestamp\n\nOnly messages after this Unix timestamp will be included in results.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `oldest` property is present together."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["ts","channel","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to look up."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'."},"latest":{"type":"number","x-wrtn-placeholder":"1234567890.123456","title":"lastest\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"oldest":{"type":"number","default":0,"x-wrtn-placeholder":"1234567890.123456","title":"oldest\n\nOnly messages after this Unix timestamp will be included in results.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"latestTimestamp":{"type":"number","title":"latestTimestamp\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `lastest` property is present together."},"oldestTimestamp":{"type":"number","title":"oldestTimestamp\n\nOnly messages after this Unix timestamp will be included in results.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `oldest` property is present together."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["ts","channel"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"replies":{"type":"array","items":{"type":"object","properties":{"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts"},"parent_user_id":{"type":"string","nullable":true,"title":"ID of the person who made parent message of this message\n\nIf this Reply has been published from thread to thread,\noutside of thread, and also as a channel,\nthere is no parent_user_id."},"type":{"type":"string","enum":["message"],"title":"type"},"user":{"type":"string","nullable":true,"title":"ID of the person who made this message\n\nIf not a user, message does not have an ID."},"text":{"type":"string","title":"message contents"},"attachments":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title\n\nLarge title text near the top of the attachment."},"id":{"type":"number","title":"id"}},"description":"From T, pick a set of properties whose keys are in the union K"},"title":"Attachments\n\nAttachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up."},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"ts_date":{"type":"string","title":"date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'."}},"required":["thread_ts","parent_user_id","type","user","text","ts","ts_date"]},"title":"replies","description":"This value refers to replies that depend on the currently viewed thread."},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["replies","next_cursor"]},"description":"Inquire the inside of the thread in History\n\nIf you have inquired the history of a channel,\nyou can use the 'ts' values of its history elements to query the internal thread for each history again.\nEach channel history has a number of replies, so if this number is more than 1, it is worth looking up.\n'Reply' is basically no different from the 'Message'(=Channel History)."},{"method":"post","path":"/connector/slack/get-channel-histories","name":"connector_slack_get_channel_histories_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'."},"latest":{"type":"number","x-wrtn-placeholder":"1234567890.123456","title":"lastest\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"oldest":{"type":"number","default":0,"x-wrtn-placeholder":"1234567890.123456","title":"oldest\n\nOnly messages after this Unix timestamp will be included in results.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"latestTimestamp":{"type":"number","title":"latestTimestamp\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `lastest` property is present together."},"oldestTimestamp":{"type":"number","title":"oldestTimestamp\n\nOnly messages after this Unix timestamp will be included in results.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `oldest` property is present together."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"channels[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"channels[].{value:id, label:name || '개인 채널'}"}}],"title":"channel id\n\nIt refers to the channel on which you want to view the conversation history.\nYou need to view the channel first.\nThis is a string that always begins with a capital letter 'C' or 'D'."},"latest":{"type":"number","x-wrtn-placeholder":"1234567890.123456","title":"lastest\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"oldest":{"type":"number","default":0,"x-wrtn-placeholder":"1234567890.123456","title":"oldest\n\nOnly messages after this Unix timestamp will be included in results.\nSlack's own timestamp format.\nfor example, '1234567890.123456'"},"latestTimestamp":{"type":"number","title":"latestTimestamp\n\nOnly messages before this Unix timestamp will be included in results. Default is the current time.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `lastest` property is present together."},"oldestTimestamp":{"type":"number","title":"oldestTimestamp\n\nOnly messages after this Unix timestamp will be included in results.\nIt can be obtained through `Date.getTime()` as a commonly thought timestamp value.\nIf it exists that the desired date value is obtained as the timestamp value, this value is given priority if the `oldest` property is present together."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["message"],"title":"type"},"user":{"type":"string","nullable":true,"title":"ID of the person who made this message\n\nIf not a user, message does not have an ID."},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"text":{"type":"string","title":"message contents"},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp\n\nfor example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"ts_date":{"type":"string","title":"date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'."},"reply_count":{"type":"number","title":"reply_count\n\nIndicates the number of replies on this thread.\nIf there are many replies, active discussions are underway."},"reply_users_count":{"type":"number","title":"reply_users_count\n\nThis means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread."},"attachments":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title\n\nLarge title text near the top of the attachment."},"id":{"type":"number","title":"id"}},"description":"From T, pick a set of properties whose keys are in the union K"},"title":"Attachments\n\nAttachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up."}},"required":["type","user","channel","text","ts","ts_date","reply_count","reply_users_count"]},"title":"message\n\nThis refers to the history of conversations made on the channel.\nThe closer you are to the 0th in the array, the more recent it is.\nHowever, Slack's message can be modified, so just because it is the 0th, it may not be the last writing/modified."},"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"display_name":{"type":"string","nullable":true,"title":"display name","description":"The user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy."}},"required":["id","display_name"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"members\n\nThis is a list of people who participated in the conversation in this conversation list."},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["messages","members","next_cursor"]},"description":"get channel histories in slack\n\nLook up conversations that have been made in and out of the channel.\n\nThe 'channel' received as a factor means the channel's ID and is a character string that begins with a capital 'C', 'D' and so on.\nTherefore, if the user does not hand over the ID when looking for the conversation history of the channel,\nit is prioritized to find the channel ID.\nUsually, users don't know their channel ID.\nTherefore, most users will ask for a channel by its name or with only the keywords they remember.\nTherefore, unless it's an unknown string and begins with a 'C' or 'D' uppercase letter, look for the channel first.\n\nWhen you look up a conversation,\nyou can search only after a specific time or before a specific time in order to look up the time zone of the conversation you want to search for.\n\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively."},{"method":"post","path":"/connector/slack/get-private-channels","name":"connector_slack_get_private_channels_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"],"title":"request condition"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[],"title":"request condition"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"request condition"}}}}]},"output":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"channel name"},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id\n\nThe channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["name","id"]},"title":"channels"},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["channels","next_cursor"],"title":"response"},"description":"get private channels in slack\n\nView channels in Slack.\nThis connector will only look up its own `private` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`private` channel is a locked channel that can only be viewed by those invited to the channel."},{"method":"post","path":"/connector/slack/get-public-channels","name":"connector_slack_get_public_channels_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"],"title":"request condition"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[],"title":"request condition"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"request condition"}}}}]},"output":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"channel name"},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id\n\nThe channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["name","id"]},"title":"channels"},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["channels","next_cursor"],"title":"response"},"description":"get public channels in slack\n\nView channels in Slack.\nThis connector will only look up its own `public` channel.\nThe channel ID is required to look up the conversation history within the channel later.\nThe `public` channel is anyone's accessible.\nThis does not require an invitation process, and users can join the channel themselves if necessary."},{"method":"post","path":"/connector/slack/get-im-channels","name":"connector_slack_get_im_channels_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"],"title":"request condition"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit\n\nIndicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details, it is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor\n\nIf you pass the cursor value received from the previous inquiry, you can inquire from the data after the cursor.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[],"title":"request condition"}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","groups:history","groups:read","chat:write","users:read"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"],"title":"request condition"}}}}]},"output":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"object","properties":{"created":{"type":"integer","title":"created time"},"is_im":{"type":"boolean","title":"Is it the `im` type or not"},"is_org_shared":{"type":"boolean","title":"is org shared"},"is_user_deleted":{"type":"boolean","title":"is user deleted"},"priority":{"type":"number","title":"priority"},"user":{"type":"string","title":"channel owner's id"},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id\n\nThe channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["created","is_im","is_org_shared","is_user_deleted","priority","user","id"]},"title":"channels"},"next_cursor":{"type":"string","nullable":true,"title":"next_cursor\n\nIf the following data exist, the cursor value exists.\nIf you want to see the next data from these data,\nyou can pass this value to the next request condition, `cursor`."}},"required":["channels","next_cursor"],"title":"response"},"description":"get im channels in slack\n\nView channels in Slack.\nThis connector will only look up its own `im` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`im` channel is a conversation that takes place in one's profile and refers to a personal channel that can only be viewed by oneself.\nUsers also use chat as storage or notepad, such as storing files and images here."},{"method":"post","path":"/connector/jira/issues/comments","name":"connector_jira_issues_comments_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment"},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["body","issueIdOrKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment"},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."}},"required":["body","issueIdOrKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"ID of comment"}},"required":["id"]},"description":"creates a comment on an issue.\n\nCreates a comment on an issue\nHere, user can write the body of the comment you want to write with the ID or key of the issue."},{"method":"put","path":"/connector/jira/issues/comments","name":"connector_jira_issues_comments_put","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment to update"},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"commentId":{"type":"string","title":"ID of comment to update"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["body","issueIdOrKey","commentId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment to update"},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"commentId":{"type":"string","title":"ID of comment to update"}},"required":["body","issueIdOrKey","commentId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"modify comment body.\n\nmodify comment\n\nModify the comment. You can only modify the body of the comment here."},{"method":"delete","path":"/connector/jira/issues/comments","name":"connector_jira_issues_comments_erase","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"commentId":{"type":"string","title":"ID of comment to delete"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueIdOrKey","commentId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"commentId":{"type":"string","title":"ID of comment to delete"}},"required":["issueIdOrKey","commentId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"delete comment.\n\nDelete the comment\n\nDelete the comments on the issue.\nIn order to delete the comments on the issue, you need the issue ID or key and the ID of the comment to be deleted.\nPlease be careful because deleted comments will not be able to be viewed again."},{"method":"post","path":"/connector/jira/issues/get-comments","name":"connector_jira_issues_get_comments_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueIdOrKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":["issueIdOrKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"comments":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id of comment"},"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment"},"created":{"type":"string","title":"created time of this comment"},"updated":{"type":"string","title":"updated time of this comment"},"author":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"},"updateAuthor":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["id","body","created","updated","author","updateAuthor"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"comments"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["comments","total"]},"description":"get comments by issue id or key.\n\nGet comments by issue id or key\n\nThis connector uses the issue's key or ID value to query the comments written on the issue.\nComments are also visible when looking up issues,\nbut not all comments inside are visible,\nso user have to use this connector to look up them in pagination."},{"method":"post","path":"/connector/jira/issues/get-transitions","name":"connector_jira_issues_get_transitions_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueIdOrKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."}},"required":["issueIdOrKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"transitions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id of transition"},"to":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category"}},"required":["description","name","id","statusCategory"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["id","to"]},"title":"transition list of this jira issue"}},"required":["transitions"]},"description":"Inquire the transition of an issue, which is an edge on a workflow that allows you to change the status of an issue\nIf the person who designed the workflow for the project defined three states that could be moved from the current state, there would be three edges.\nIn Jira, just because there is a status that can be viewed in a project or issue does not mean that you can change the status unconditionally.\nWhen designing an edge, for example, you can also design an issue in the 'backoff' state to go through the 'in progress' state once.\nIn this case, you need to move two edges to turn the backoff issue into 'done'."},{"method":"put","path":"/connector/jira/issues/asignee","name":"connector_jira_issues_asignee_put","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"asigneeId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."},"issueId":{"type":"string","title":"ID of issue"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["asigneeId","issueId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"asigneeId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."},"issueId":{"type":"string","title":"ID of issue"}},"required":["asigneeId","issueId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"assign the assignee.\n\nAssign the assignee from the Jira issue"},{"method":"delete","path":"/connector/jira/issues/asignee","name":"connector_jira_issues_asignee_erase","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueId":{"type":"string","title":"ID of issue"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueId":{"type":"string","title":"ID of issue"}},"required":["issueId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"Unassign the assignee from the Jira issue"},{"method":"put","path":"/connector/jira/issues/status","name":"connector_jira_issues_status_put","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"transitionId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issue-get-transitions","jmesPath":"transitions[].{value:id, label: to.name}"},"title":"ID of transition"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueIdOrKey","transitionId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"transitionId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issue-get-transitions","jmesPath":"transitions[].{value:id, label: to.name}"},"title":"ID of transition"}},"required":["issueIdOrKey","transitionId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"change issue status.\n\nChange issue status\n\nChanging the status of an issue must be done after inquiring about changeable Transitions from the current issue.\nThis is forced by the person who designed the workflow in the project, so you must change the status in the order set."},{"method":"put","path":"/connector/jira/issues/{id}","name":"connector_jira_issues_putById","strict":true,"parameters":[{"type":"object","properties":{"id":{"type":"string","description":" issue id to update"},"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."}},"required":["id"],"title":"Specify a representative at the same time as you create"},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"contents of description\n\nYou must use node types that are configured with TopLevelBlockNodes.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents."},"duedate":{"type":"string","format":"date","title":"due date\n\ndate format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"title":"id of issue type\n\nThe ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype"},"labels":{"type":"array","items":{"type":"string"},"title":"labels\nYou can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue\n\nSometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue"},"priority":{"type":"object","properties":{"id":{"title":"id of proirity\n\nYou can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority"},"project":{"oneOf":[{"type":"object","properties":{"id":{"title":"id of project"}},"required":["id"]},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"]}],"title":"project\n\nIssues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project."},"summary":{"type":"string","title":"summary\n\nMeaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}}},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["fields","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"id":{"type":"string","description":" issue id to update"},"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."}},"required":["id"],"title":"Specify a representative at the same time as you create"},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"contents of description\n\nYou must use node types that are configured with TopLevelBlockNodes.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents."},"duedate":{"type":"string","format":"date","title":"due date\n\ndate format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"title":"id of issue type\n\nThe ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype"},"labels":{"type":"array","items":{"type":"string"},"title":"labels\nYou can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue\n\nSometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue"},"priority":{"type":"object","properties":{"id":{"title":"id of proirity\n\nYou can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority"},"project":{"oneOf":[{"type":"object","properties":{"id":{"title":"id of project"}},"required":["id"]},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"]}],"title":"project\n\nIssues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project."},"summary":{"type":"string","title":"summary\n\nMeaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}}}},"required":["fields"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"update issue in jira.\n\nUpdate an issue\n\nYou can modify any element in the field.\nIt can be used to modify the issue type, person in charge, summary, and description.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully."},{"method":"post","path":"/connector/jira/issues","name":"connector_jira_issues_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."}},"required":["id"],"title":"Specify a representative at the same time as you create"},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"contents of description\n\nYou must use node types that are configured with TopLevelBlockNodes.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents."},"duedate":{"type":"string","format":"date","title":"due date\n\ndate format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"title":"id of issue type\n\nThe ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype"},"labels":{"type":"array","items":{"type":"string"},"title":"labels\nYou can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue\n\nSometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue"},"priority":{"type":"object","properties":{"id":{"title":"id of proirity\n\nYou can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority"},"project":{"oneOf":[{"type":"object","properties":{"id":{"title":"id of project"}},"required":["id"]},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"]}],"title":"project\n\nIssues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project."},"summary":{"type":"string","title":"summary\n\nMeaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":["issuetype","project","summary"],"title":"fields\n\nIndicates the fields that you need to fill in when you want to create an issue."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["fields","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}],"title":"accountId of the user you want to designate as the person in charge\n\nIf you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."}},"required":["id"],"title":"Specify a representative at the same time as you create"},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]}]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"contents of description\n\nYou must use node types that are configured with TopLevelBlockNodes.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents."},"duedate":{"type":"string","format":"date","title":"due date\n\ndate format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"title":"id of issue type\n\nThe ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype"},"labels":{"type":"array","items":{"type":"string"},"title":"labels\nYou can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue\n\nSometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue"},"priority":{"type":"object","properties":{"id":{"title":"id of proirity\n\nYou can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority"},"project":{"oneOf":[{"type":"object","properties":{"id":{"title":"id of project"}},"required":["id"]},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"]}],"title":"project\n\nIssues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project."},"summary":{"type":"string","title":"summary\n\nMeaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":["issuetype","project","summary"],"title":"fields\n\nIndicates the fields that you need to fill in when you want to create an issue."}},"required":["fields"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"ID of the issue that was created just now"},"key":{"type":"string","title":"Key of the issue that was created just now"}},"required":["id","key"],"title":"output of creation of issue"},"description":"create issue in jira.\n\nCreate an issue\n\nIssue type, project, and summary are essential properties.\nIf you don't know the issue type or priority type's id for generating the issue, you can look it up through other connectors.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully."},{"method":"post","path":"/connector/jira/get-issue-detail","name":"connector_jira_get_issue_detail_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["issueIdOrKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}],"title":"issue id or key\n\nThis connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."}},"required":["issueIdOrKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"labels":{"type":"array","items":{"type":"string"},"title":"labels attached to the issue"},"fields":{"type":"object","properties":{"comment":{"type":"object","properties":{"maxResults":{"type":"number","title":"Number of comments viewed at one time"},"total":{"type":"number","title":"Total count of comments"},"startAt":{"type":"number","title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"comments":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id of comment"},"author":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"},"updateAuthor":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"object","properties":{"type":{"type":"string","enum":["doc"]},"version":{"type":"number","enum":[1]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]},"title":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array","description":"A document in Jira is a combination of several blocks, so a single comment appears in the form of an array.\nBy combining each element in the array, you can understand the entire comment content."}},"required":["type","version","content"],"title":"body of comment"},"created":{"type":"string","title":"created time of this comment"},"updated":{"type":"string","title":"updated time of this comment"}},"required":["id","author","updateAuthor","body","created","updated"]},"title":"list of comments"}},"required":["maxResults","total","startAt","comments"],"title":"comment infomation"},"description":{"type":"object","properties":{"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["table"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["tableRow"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["tableHeader"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["tabelCell"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["blockquote"],"title":"blockquote type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"}]},"minItems":1,"description":"content must contain array of one or more of the following nodes:\n- paragraph with no marks.\n- bulletList\n- orderedList"}},"required":["type","content"],"title":"Blockquote node\n\nThe blockquote node is a container for quotes.\nblockquote is a top-level block node."},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nHeading node's content can be combined with only inline nodes."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>","description":"level represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node\n\nIt means h1, h2, h3, h4, h5, h6 node."},{"type":"object","properties":{"type":{"type":"string","enum":["panel"]},"attrs":{"type":"object","properties":{"panelType":{"type":"string","enum":["info","error","note","warning","success"]}},"required":["panelType"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]},"content":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["listItem"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["codeBlock"]},"attrs":{"type":"object","properties":{"language":{"type":"string","x-wrtn-placeholder":"TypeScript","title":"programming language name"}},"title":"attrs\n\nIf you do not specify a programming language, this property may not exist."},"content":{"type":"array","title":"code content\n\ncontent takes an array of one or more text nodes without marks.","items":{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string","title":"text includeing code"}},"required":["type","text"]},"minItems":1,"maxItems":1}},"required":["type"],"title":"code block"},{"type":"object","properties":{"type":{"type":"string","enum":["mediaSingle"],"title":"mediaSingle type"},"attrs":{"type":"object","properties":{"layout":{"type":"string","enum":["wrap-left","center","wrap-right","wide","full-width","align-start","align-end"],"title":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page","description":"layout determines the placement of the node on the page. wrap-left and wrap-right provide an image floated to the left or right of the page respectively, with text wrapped around it. center center aligns the image as a block, while wide does the same but bleeds into the margins. full-width makes the image stretch from edge to edge of the page."},"width":{"type":"number","minimum":0,"maximum":100,"title":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width","description":"width determines the width of the image as a percentage of the width of the text content area. Has no effect if layout mode is wide or full-width."},"widthType":{"type":"string","enum":["pixel","percentage"],"title":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage","description":"widthType [optional] determines what the \"unit\" of the width attribute is presenting. Possible values are pixel and percentage. If the widthType attribute is undefined, it fallbacks to percentage."}},"required":["layout"]},"content":{"type":"array","title":"media\n\nonly single of media node type","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"minItems":1,"maxItems":1}},"required":["type","attrs","content"],"description":"The mediaSingle node is a container for one media item.\nThis node enables the display of the content in full,\nin contrast to a mediaGroup that is intended for a list of attachments.\nA common use case is to display an image,\nbut it can also be used for videos,\nor other types of content usually renderable by a"},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["bulletList","orderedList"]}},"required":["type"]}]},"title":"content\ncontent must contain at least one of the following nodes:\n- bulletList\n- codeBlock with no marks\n- mediaSingle\n- orderedList\n- paragraph with no marks"}},"required":["type","content"]}}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type"},{"type":"object","properties":{"type":{"type":"string","enum":["heading"],"title":"heading type"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"description":"Construct a type with the properties of T except for those in type K."},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"}},"required":["type","text"],"description":"Construct a type with the properties of T except for those in type K."}]},"title":"content\n\nHeading node's content can be combined with only inline nodes.\nA property called marks is not available here."},"attrs":{"type":"object","properties":{"level":{"type":"number","enum":[1,2,3,4,5,6],"title":"level\n\nlevel represents the depth of the heading following the same convention as HTML: when level is set to 1 it's the equivalent of <h1>."}},"required":["level"],"title":"attributes of heading node"}},"required":["type","content","attrs"],"title":"heading node without `marks` property"}]}}},"required":["type","attrs","content"],"description":"The panel node is a container that highlights content."},{"type":"object","properties":{"type":{"type":"string","enum":["paragraph"],"title":"paragraph type"},"attrs":{"type":"object","properties":{},"description":"Construct a type with a set of properties K of type T"},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["emoji"],"title":"emoji type"},"attrs":{"type":"object","properties":{"id":{"type":"string","description":"Emoji service ID of the emoji\n\nFor custom emojis by atlasian or user, you may have an ID."},"shortName":{"type":"string","pattern":"^(:(.*):)$","title":"icon name\n\nA string exists between a colon and a colon, meaning a name for representing the emoji."},"text":{"type":"string","title":"emoji icon"}},"required":["shortName"],"title":"attributes of emoji node"}},"required":["type","attrs"],"title":"emoji node"},{"type":"object","properties":{"type":{"type":"string","enum":["hardBreak"],"title":"hardBreak type"},"attrs":{"type":"object","properties":{"text":{"type":"string","enum":["\n"],"title":"text\n\nIt can be only `\\n` text for braking."}},"title":"attributes of hard break node"}},"required":["type"],"title":"hard break node"},{"type":"object","properties":{"type":{"type":"string","enum":["inlineCard"],"title":"inline card type"},"attrs":{"type":"object","properties":{"url":{"type":"string","format":"uri","title":"url\nIndicates the address value that the inline card will represent.\nTo allow you to move when you click on the card, you need to put a link in advance."},"data":{"type":"object","properties":{}}},"required":["url"],"title":"attributes of inline card node"}},"required":["type","attrs"],"title":"inline card\n\nThe inlineCard node is an Atlassian link card with a type icon and content description derived from the link."},{"type":"object","properties":{"type":{"type":"string","enum":["mention"],"title":"mention type"},"attrs":{"type":"object","properties":{"id":{"type":"string","title":"id\n\nadd any string like as uuid"},"text":{"type":"string","pattern":"^(@(.*))","title":"Who is mentioned\n\nIt means a string that connects @ and the user's name"},"accessLevel":{"type":"string","title":"accessLevel"}},"required":["text"],"title":"content of this mention content"}},"required":["type","attrs"],"title":"content with mention"},{"type":"object","properties":{"type":{"type":"string","enum":["text"],"title":"text type"},"text":{"type":"string","title":"content of this text content"},"marks":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["backgroundColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^#([0-9A-Fa-f]{6})$","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["code"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["em"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strike"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["strong"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["underline"]}},"required":["type"]},{"type":"object","properties":{"type":{"type":"string","enum":["link"]},"attrs":{"type":"object","properties":{"href":{"type":"string","format":"uri","title":"link"}},"required":["href"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["subsup"]},"attrs":{"type":"object","properties":{"type":{"type":"string","enum":["sub","sup"]}},"required":["type"]}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["textColor"]},"attrs":{"type":"object","properties":{"color":{"type":"string","pattern":"^(#(.*))","title":"color\n\nColor can be expressed using symbols('#') and RGB values."}},"required":["color"]}},"required":["type","attrs"]}]},"title":"marks\n\nIt means the emphasis of the markdown format, and it means that there is a string between the backticks."}},"required":["type","text"],"title":"content with only text"}]},"title":"content\n\nIf you want to make a new line, there will be an empty array."}},"required":["type","content"],"title":"paragraph type\nThe paragraph node is a container for a block of formatted text delineated by a carriage return. It's the equivalent of the HTML <p> tag."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}},"attrs":{"type":"object","properties":{"background":{"type":"string","description":"Short or long hex color code or HTML color name"},"colspan":{"type":"integer","default":1,"title":"colspan\ncolspan defines the number of columns the cell spans."},"colwidth":{"type":"array","description":"defines the width of the column or,\nwhere the cell spans columns, the width of the columns it spans in pixels.\nThe length of the array should be equal to the number of spanned columns.\n0 is permitted as an array value if the column size is not fixed,\nfor example, a cell merged across 3 columns where one unfixed column is surrounded by two fixed might be represented as `[120, 0, 120].","items":{"oneOf":[{"type":"integer"},{"type":"integer"},{"type":"integer"}]},"minItems":3,"maxItems":3},"rowspan":{"type":"integer","default":1,"title":"rowspan\nrowspan defines the number of rows a cell spans."}},"required":["colspan","colwidth","rowspan"]}},"required":["type","content"]}]},"title":"content takes an array of one or more tableHeader or tableCell nodes","description":"content takes an array of one or more tableHeader or tableCell nodes."}},"required":["type","content"],"description":"The tableRow node defines rows within a table and is a container for table heading and table cell nodes.\ntableRow is a child block node of the table node."}},"attrs":{"type":"object","properties":{"isNumberColumnEnabled":{"type":"boolean","title":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows","description":"When isNumberColumnEnabled is set to 'true' the first table column provides numbering for the table rows."},"width":{"type":"number","minimum":0,"title":"width sets the length (in pixels) of the table on the page","description":"width sets the length (in pixels) of the table on the page.\nThis value is independent of the table's column width, this allows control of the table's overflow.\nIt supersedes the existing layout attribute and will be used instead of it at runtime.\nIf width is not provided the editor will convert layout to pixels (default=760, wide=960 and full-width=1800).\nAlthough no minimum and maximum width is enforced it is recommended to follow these guidelines:\n\n- Minimum width\n\n  - 1 column table = 48px\n  - 2 column table = 96px\n  - 3 column table = 144px\n  - > 3 column table = 144px\n- Maximum width\n  - 1800"},"layout":{"type":"string","enum":["center","align-start"],"title":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported","description":"layout determines the alignment of a table in the full page editor, relevant to the line length. Currently only center and left alignment options are supported.\nThe layout values are mapped as follows:\n- 'center' : will align the table to the center of page, its width can be larger than the line length\n - 'align-start' : will align the table left of the line length, its width cannot be larger than the line length"},"displayMode":{"type":"string","enum":["default","fixed"],"description":"displayMode attribute controls how tables adapt to narrow screens:\nWhen displayMode is set to 'default' or left unset, the table's columns will automatically scale down to accommodate narrow screens, with a maximum reduction of up to 40%.\nWhen displayMode is set to 'fixed', the table's columns will maintain their original width, regardless of screen size."}}}},"required":["type","content"],"description":"The table node provides a container for the nodes that define a table.\n\nNote: only supported on web and desktop. Mobile rendering support for tables is not available."},{"type":"object","properties":{"type":{"type":"string","enum":["mediaGroup"]},"content":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["link","file"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."}},"required":["type"],"title":"Attributes"}},"required":["type","attrs"]},{"type":"object","properties":{"type":{"type":"string","enum":["media"]},"attrs":{"type":"object","properties":{"width":{"type":"number","title":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"width defines the display width of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"height":{"type":"number","title":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed","description":"height defines the display height of the media item in pixels. Must be provided within mediaSingle or the media isn't displayed."},"id":{"type":"string","title":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API","description":"id is the Media Services ID and is used for querying the media services API to retrieve metadata, such as, filename. Consumers of the document should always fetch fresh metadata using the Media API."},"type":{"type":"string","enum":["external"],"title":"type\nThere are three types.\nHowever, in our service, we have to use \"external\" type only, because we are only considering universal users who do not save images through Media API, but save images through external links."},"url":{"type":"string","format":"uri","title":"url"}},"required":["type","url"],"title":"Attributes"}},"required":["type","attrs"]}]},"title":"content\ncontent must contain one or more media nodes."}},"required":["type","content"]},{"type":"object","properties":{"type":{"type":"string","enum":["rule"]}},"required":["type"],"description":"The rule node represents a divider, it is equivalent to the HTML <hr/> tag."}]}}},"required":["content"],"nullable":true},"statuscategorychangedate":{"type":"string","nullable":true,"title":"statuscategorychangedate\n\nThe date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed."},"reporter":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"reporter"},"creator":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"creator"},"assignee":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"assignee"},"summary":{"type":"string","title":"summary"},"issuetype":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"status":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category"},"untranslatedName":{"type":"string","title":"untranslated name"}},"required":["description","name","id","statusCategory"],"description":"From T, pick a set of properties whose keys are in the union K"},"priority":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"parent":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the parent issue"},"key":{"type":"string","title":"The key of the parent issue"},"fields":{"type":"object","properties":{"summary":{"type":"string","title":"summary"}}}},"required":["id","key","fields"]}},"required":["comment","description","status","priority"]},"id":{"type":"string","title":"The ID of the issue"},"key":{"type":"string","title":"The key of the issue"}},"required":["fields","id","key"]},"description":"get detailed Issue Information.\n\nGet detailed issue information\n\nProvides more accurate and detailed information, including the title and body of the issue\n\nIt can be used to look up the issue list first, or if you already know the key or ID of the issue.\nIf you do not know the key or ID, it is recommended to use the issue inquiry connector first."},{"method":"post","path":"/connector/jira/get-issues","name":"connector_jira_get_issues_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"status":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-statuses","jmesPath":"[].{value:id, label:untranslatedName}"},"title":"status"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project"},"issuetype":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"[].{label:untranslatedName, value:untranslatedName}"},"title":"issue type"},"assignee":{"type":"string","title":"name of assignee"},"reporter":{"type":"string","title":"name of reporter"},"created_start_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"created_end_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"priority":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:name, label:name}"},"title":"priority name\n\nIf you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary."},"labels":{"type":"array","items":{"type":"string"},"title":"label titles\n\nComplex searches are possible using various labels."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["project_key","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"status":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-statuses","jmesPath":"[].{value:id, label:untranslatedName}"},"title":"status"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project"},"issuetype":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"[].{label:untranslatedName, value:untranslatedName}"},"title":"issue type"},"assignee":{"type":"string","title":"name of assignee"},"reporter":{"type":"string","title":"name of reporter"},"created_start_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"created_end_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"priority":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:name, label:name}"},"title":"priority name\n\nIf you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary."},"labels":{"type":"array","items":{"type":"string"},"title":"label titles\n\nComplex searches are possible using various labels."}},"required":["project_key"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"issues":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string","title":"The key of the issue"},"id":{"type":"string","title":"The ID of the issue"},"fields":{"type":"object","properties":{"statuscategorychangedate":{"type":"string","nullable":true,"title":"statuscategorychangedate\n\nThe date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed."},"reporter":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"reporter"},"creator":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"creator"},"assignee":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"nullable":true,"title":"assignee"},"summary":{"type":"string","title":"summary"},"issuetype":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"status":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category"},"untranslatedName":{"type":"string","title":"untranslated name"}},"required":["description","name","id","statusCategory"],"description":"From T, pick a set of properties whose keys are in the union K"},"priority":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"parent":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the parent issue"},"key":{"type":"string","title":"The key of the parent issue"},"fields":{"type":"object","properties":{"summary":{"type":"string","title":"summary"}}}},"required":["id","key","fields"]}},"required":["status","priority"]}},"required":["key","id","fields"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"Jira issue list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["issues","total"]},"description":"Find The Jira issues.\n\nFind Jira issues\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project."},{"method":"post","path":"/connector/jira/get-projects","name":"connector_jira_get_projects_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"orderBy":{"type":"string","enum":["issueCount","lastIssueUpdatedTime","name"],"title":"order by","description":"Order the results by a field.\n\n- issueCount : Sorts by the total number of issues in each project.\n- lastIssueUpdatedTime : Sorts by the last issue update time.\n- name : Sorts by project name."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"orderBy":{"type":"string","enum":["issueCount","lastIssueUpdatedTime","name"],"title":"order by","description":"Order the results by a field.\n\n- issueCount : Sorts by the total number of issues in each project.\n- lastIssueUpdatedTime : Sorts by the last issue update time.\n- name : Sorts by project name."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"values":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"id"},"key":{"type":"string","title":"key of project\n\nKey properties used to query the inside of a project."},"name":{"type":"string","title":"name of this project"},"projectCategory":{"type":"object","properties":{"description":{"type":"string","title":"description"},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["description","id","name"],"title":"project category info"}},"required":["id","key","name"]},"title":"Jira project list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["values","total"],"title":"output of getting Jira projects"},"description":"Find the Jira projects.\n\nFind the Jira projects\n\nThe Jira project has a unique key and can then be used to query issues with the key.\nReturns a paginated list of projects visible to the user.\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project."},{"method":"post","path":"/connector/jira/get-issue-labels","name":"connector_jira_get_issue_labels_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"values":{"type":"array","items":{"type":"string"},"title":"label list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["values","total"]},"description":"Find issue labels"},{"method":"post","path":"/connector/jira/get-issue-types","name":"connector_jira_get_issue_types_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"title":"id of project"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["projectId","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"title":"id of project"}},"required":["projectId"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"issuetypes":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"},"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"description":{"type":"string","title":"description"},"subtask":{"type":"boolean","title":"whether is for substask issue type"}},"required":["id","name","description","subtask"]},"title":"issue types in this projects"}},"required":["issuetypes"]},"description":"Find issue types\n\nIn order for the user to inquire about the issue type, the ID of the project is required.\nIf the user mentioned the key or name of the project,\nit is necessary to first inquire the project and get the correct project ID.\nThe ID of the project is a numeric character type."},{"method":"post","path":"/connector/jira/get-issue-statuses","name":"connector_jira_get_issue_statuses_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"title":"id of project\n\nIf the status does not have the project ID,\nit means this status is beyond the scope of the project and can be selected by the entire team.\nIt can also be the default status created from the beginning by Jira."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"title":"id of project\n\nIf the status does not have the project ID,\nit means this status is beyond the scope of the project and can be selected by the entire team.\nIt can also be the default status created from the beginning by Jira."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"statuses":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"untranslatedName":{"type":"string","title":"untranslated name"},"projectId":{"type":"string"}},"required":["name","id"]}}},"required":["statuses"]},"description":"Find issue statuses for searching issue"},{"method":"post","path":"/connector/jira/get-issue-priorities","name":"connector_jira_get_issue_priorities_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"}},"description":"Inquire the priority levels that can be assigned to the issue.\n\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nTherefore, it can be used as an enum value without requesting this API,\nand this API is already deprecated on the Jira REST API document.\nHowever, for projects that can already be specified by creating a priority level, this connector is added just in case."},{"method":"post","path":"/connector/jira/issues/get-users-assignable","name":"connector_jira_issues_get_users_assignable_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"issueKey":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"connectors/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of issue\n\nIt refers to the key of the issue to search for the user to be assigned."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["project","issueKey","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"issueKey":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"connectors/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of issue\n\nIt refers to the key of the issue to search for the user to be assigned."}},"required":["project","issueKey"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"}},"description":"Find assignable users in issue.\n\nFind a person within the issue who can be assigned as assignee."},{"method":"post","path":"/connector/jira/projects/get-users-assignable","name":"connector_jira_projects_get_users_assignable_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["project_key","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."}},"required":["project_key"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"description":"From T, pick a set of properties whose keys are in the union K"}},"description":"Find assignable users in project.\n\nFind a person within the project who can be assigned as assignee."},{"method":"post","path":"/connector/jira/get-status-categories","name":"connector_jira_get_status_categories_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"colorName":{"type":"string","title":"name of color"},"id":{"type":"number","title":"The ID of status category"},"key":{"type":"string","title":"The key of status category"},"name":{"type":"string","title":"name of the status category"}},"required":["colorName","id","key","name"]}},"description":"get status categories.\n\nGet status categories"},{"method":"post","path":"/connector/google-trend/daily","name":"connector_google_trend_daily_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"date":{"type":"string","format":"date","title":"날짜","description":"데일리 트렌드를 조회할 날짜 입니다.\n\n입력되지 않으면 오늘 날짜를 기준으로 조회합니다."}},"title":"구글 데일리 트렌드 조회를 위한 정보","description":"입력한 날짜의 트렌드를 조회합니다.\n\n입력하지 않으면 오늘 날짜를 기준으로 조회합니다.\n\n날짜 형식은 \"20241231\" 형식입니다."}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"date":{"type":"string","format":"date","title":"날짜","description":"데일리 트렌드를 조회할 날짜 입니다.\n\n입력되지 않으면 오늘 날짜를 기준으로 조회합니다."}},"title":"구글 데일리 트렌드 조회를 위한 정보","description":"입력한 날짜의 트렌드를 조회합니다.\n\n입력하지 않으면 오늘 날짜를 기준으로 조회합니다.\n\n날짜 형식은 \"20241231\" 형식입니다."}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","title":"날짜","description":"트렌드 조회 날짜입니다."},"query":{"type":"string","title":"검색어","description":"데일리 트렌드로 조회된 검색어입니다."},"related_queries":{"type":"array","items":{"type":"string"},"title":"연관 검색어","description":"데일리 트렌드로 조회된 검색어와 연관된 검색어 목록입니다."},"traffic":{"type":"string","title":"트래픽 수","description":"해당 키워드가 검색된 트래픽 수입니다."}},"required":["date","query","related_queries","traffic"],"title":"구글 데일리 트렌드 조회 결과","description":"데일리 트렌드 조회 결과입니다."}},"description":"구글 트렌드 데일리 검색.\n\n구글 트렌드에서 데일리 검색 결과를 가져옵니다."},{"method":"post","path":"/connector/google-map","name":"connector_google_map_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","x-wrtn-placeholder":"강남역 맛집","title":"검색어","description":"검색어를 입력해주세요"}},"required":["keyword"],"title":"구글 맵 맛집 검색을 위한 정보"}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","x-wrtn-placeholder":"강남역 맛집","title":"검색어","description":"검색어를 입력해주세요"}},"required":["keyword"],"title":"구글 맵 맛집 검색을 위한 정보"}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"이름","description":"맛집 이름입니다."},"place_id":{"type":"string","title":"고유 id","description":"맛집 고유 id입니다.\n\n리뷰를 검색하기 위해 필요한 정보입니다."},"gps_coordinate":{"type":"object","properties":{"latitude":{"type":"number","title":"위도","description":"맛집 좌표상 위도입니다."},"longitude":{"type":"number","title":"경도","description":"맛집 좌표상 경도입니다."}},"required":["latitude","longitude"],"title":"좌표","description":"맛집 좌표입니다."},"rating":{"type":"number","title":"평점","description":"맛집 평점입니다."},"reviews":{"type":"number","title":"리뷰 수","description":"맛집 리뷰 수 입니다."},"address":{"type":"string","title":"주소","description":"맛집 주소 입니다."},"open_state":{"type":"string","title":"운영 정보","description":"맛집이 현재 운영중인지에 대한 정보입니다."},"operating_hours":{"type":"object","properties":{},"title":"운영 시간 정보","description":"맛집 운영 시간 정보입니다.","additionalProperties":{"type":"string"}},"phone_number":{"type":"string","title":"전화번호","description":"맛집 전화번호입니다."},"service_options":{"type":"object","properties":{},"title":"서비스 옵션","description":"맛집에서 제공하는 서비스 옵션입니다.","additionalProperties":{"type":"boolean"}},"user_review":{"type":"string","title":"유저 리뷰","description":"맛집 유저 리뷰 입니다."},"thumbnail":{"type":"string","format":"uri","contentMediaType":"image/*","title":"이미지","description":"맛집 썸네일 이미지 입니다."}},"required":["title","place_id","gps_coordinate","address","thumbnail"],"title":"구글 맵 맛집 검색 결과"}},"description":"구글맵 맛집 검색.\n\n구글맵을 사용하여 맛집을 검색합니다."},{"method":"post","path":"/connector/google-map/review","name":"connector_google_map_review_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"place_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-map/search","jmesPath":"[].{value:place_id, label:place_id}"}}},"required":["place_id"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"place_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-map/search","jmesPath":"[].{value:place_id, label:place_id}"}}},"required":["place_id"]}}}}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"username":{"type":"string","title":"작성자 이름","description":"리뷰 작성자 이름입니다."},"rating":{"type":"number","title":"리뷰 평점","description":"리뷰 평점입니다."},"description":{"type":"string","title":"리뷰 내용","description":"리뷰 내용입니다."},"link":{"type":"string","format":"uri","title":"리뷰 링크","description":"리뷰 링크입니다."},"images":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"image/*"},"title":"리뷰 이미지","description":"리뷰에 등록된 이미지입니다."},"date":{"type":"string","title":"리뷰 날짜","description":"리뷰가 작성된 날짜입니다."}},"required":["username","rating","description","link","images","date"],"title":"리뷰 조회 결과"}},"description":"구글맵 맛집 리뷰 검색.\n\n구글맵에서 선택한 맛집 리뷰를 검색합니다."},{"method":"post","path":"/connector/github/analyze","name":"connector_github_analyze_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."},"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["secretKey","owner","repo"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"chatId":{"type":"string","title":"chat id.","description":"RAG 생성 결과물에 필요한 chat id.\nRAG로 분석된 파일에 대해 채팅 결과물을 생성하기 위해 분석된 파일에 대한 chat id를 반환합니다.\n여러 개의 파일을 분석시키고 같은 채팅에서 여러 파일에 대한 결과물을 생성하기 위해서는 같은 chat id가 필요합니다."}},"required":["chatId"],"title":"RAG 분석 결과물"},"description":"Analysis for a github repository.\n\n\nRAG analysis for a particular repo\n\nThis RAG analysis makes the repository's code all five files and analyzes them, allowing the chatbot to learn more about the repository and deliver more detailed information.\nThis will be useful when users want to analyze the repository."},{"method":"post","path":"/connector/github/users/get-received-events","name":"connector_github_users_get_received_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List events received by the authenticated user\n\nThese are events that you've received by watching repositories and following users.\nIf you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.\nIn this case, the \"received\" event includes the repository that the user is interested in or the activity of the user who is following,\nfor example, if the user has pushed to the repository, or if an issue has been created from the repository that the user is interested in."},{"method":"post","path":"/connector/github/users/get-repositories","name":"connector_github_users_get_repositories_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page\nThe number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"],"title":"sorting condition\n\nThe property to sort the results by.\nIt must be one of: \"created\" | \"updated\" | \"pushed\" | \"full_name\""},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page\nThe number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"],"title":"sorting condition\n\nThe property to sort the results by.\nIt must be one of: \"created\" | \"updated\" | \"pushed\" | \"full_name\""},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"],"nullable":true,"title":"readme"},"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"uri","title":"html_url"},"description":{"type":"string","nullable":true,"title":"description"},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"],"title":"visibility"},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"]},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true,"title":"url"},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["readme","id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"]},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Inquire the user's repository\n\nSince it contains only the simplest information of the repository here, there is no way to know the lead me of the repository or detailed information.\nIt is recommended to use additional connectors to explore because other connectors have the ability to read leads or internal files in the repository."},{"method":"post","path":"/connector/github/organizations/users/get-events","name":"connector_github_organizations_users_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["organization","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["organization"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Lists organization events for the authenticated user\n\nThis API endpoint retrieves events that have occurred within the organizations\nthe authenticated user is a member of. It includes activities such as issues,\npull requests, commits, and other actions taken within the organization's repositories.\n\nThe events cover all repositories within the organization that the user has access to,\nmaking it useful for tracking the organization's activity or monitoring the progress\nof projects that the user is involved in within the team."},{"method":"post","path":"/connector/github/organizations/get-issues","name":"connector_github_organizations_get_issues_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"],"title":"filter\n\nIt must be one of: \"assigned\", \"created\", \"mentioned\", \"subscribed\", \"repos\", \"all\"\n\nIndicates which sorts of issues to return.\nassigned means issues assigned to you.\ncreated means issues created by you.\nmentioned means issues mentioning you.\nsubscribed means issues you're subscribed to updates for.\nall or repos means all issues you can see, regardless of participation or creation."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["organization","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"],"title":"filter\n\nIt must be one of: \"assigned\", \"created\", \"mentioned\", \"subscribed\", \"repos\", \"all\"\n\nIndicates which sorts of issues to return.\nassigned means issues assigned to you.\ncreated means issues created by you.\nmentioned means issues mentioning you.\nsubscribed means issues you're subscribed to updates for.\nall or repos means all issues you can see, regardless of participation or creation."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["organization"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List organization issues assigned to the authenticated user\n\nSimilar to the 'get-issues' connector, it is suitable for inquiring only about issues assigned within a specific organization.\nNaturally, the user will have to be a member of that organization."},{"method":"post","path":"/connector/github/organizations/get-repositories","name":"connector_github_organizations_get_repositories_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["organization","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["organization"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"uri","title":"html_url"},"description":{"type":"string","nullable":true,"title":"description"},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"],"title":"visibility"},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"]},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true,"title":"url"},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"]},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List organization repositories\n\nThis endpoint allows you to list all repositories that belong to a specified organization on GitHub.\nIt's useful for viewing all the repositories under an organization’s account, including both public and private repositories, depending on your access level."},{"method":"post","path":"/connector/github/organizations/get-events","name":"connector_github_organizations_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["organization","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["organization"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List public organization events.\n\nList public organization events\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\n\nThis API endpoint retrieves a stream of public events that have occurred\nwithin a specified organization. These events include activities such as\nrepository creation, issues, pull requests, and other actions taken by members\nof the organization across all its public repositories.\n\nThis is useful for monitoring the public activity within an organization,\nproviding insights into how the organization is managing its projects,\nthe work being done by its members, and the overall public engagement with\nits repositories."},{"method":"post","path":"/connector/github/repos/contents","name":"connector_github_repos_contents_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string"},"content":{"type":"string","title":"the new file content\n\nMeaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"The person that committed the file.\nIf you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"The author of the file.\n\nIf you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","path","message","content","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string"},"content":{"type":"string","title":"the new file content\n\nMeaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"The person that committed the file.\nIf you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"The author of the file.\n\nIf you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer."}},"required":["owner","repo","path","message","content"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"description":"Create File content and commit.\n\nCreate file content in github repository\n\nIf the file already exists in the same path, you should use the modification API and this connector is only responsible for generation.\nCreating file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on."},{"method":"post","path":"/connector/github/repos/get-folder-structures","name":"connector_github_repos_get_folder_structures_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name\n\nThe path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."},"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["secretKey","owner","repo"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name\n\nThe path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"children":{"type":"array","items":{},"title":"children\n\nFor folders, you may have other files or folders inside.\nThis should also be a folder or file type object,\nbut here, we specify it as any type to prevent it because it can be recursively infinitely large."}},"required":["type","size","name","path","sha","children"]},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"]},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"size":{"type":"number","title":"Indicates the file size in bytes."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["name","url","type","path","size","sha","download_url"]}]}},"description":"Review Repository Folder Structure\n\nIt allows you to know the overall folder structure by traversing files in the repository.\nThis feature is intended to navigate like a DFS based on folders.\nIf this function is so vast that you cannot see the entire folder, you can pass the `path` again to inquire.\nThe `path` delivered is treated like a Root folder and continues the navigation from this folder.\nThis feature is designed to navigate to the inside two more times, up to steps 0, 1 at a time, based on the root folder.\n\nIf you want to know the details of the file, it is recommended to use the get-contents connector."},{"method":"post","path":"/connector/github/repos/get-contents/bulk","name":"connector_github_repos_get_contents_bulk_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"]},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"]},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"size":{"type":"number","title":"Indicates the file size in bytes."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["name","url","type","path","size","sha","download_url"]}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"]}]}},"description":"Look up repository files(bulk)\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\nYou can pass multiple file paths to view multiple files at the same time.\nThere is no limit to the number of files."},{"method":"post","path":"/connector/github/repos/get-contents","name":"connector_github_repos_get_contents_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters\n\nIt refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"]},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"]},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"size":{"type":"number","title":"Indicates the file size in bytes."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["name","url","type","path","size","sha","download_url"]}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"]}]},"description":"Look up repository files\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector."},{"method":"post","path":"/connector/github/repos/get-readme","name":"connector_github_repos_get_readme_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."},"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["secretKey","owner","repo"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"],"nullable":true},"description":"Read the README file in the repository\n\nREADME is one of the initial settings of the project and usually records a description of this repository,\nso it's useful if you want to see a rough description of the repository."},{"method":"post","path":"/connector/github/repos/get-events","name":"connector_github_repos_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["repo","username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["repo","username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List events for the authenticated user\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nYou can check all events surrounding the repository, such as who inquired and who forked.\nIt is used in conjunction with a connector that inquires the activity details and is suitable for checking how active the repository is."},{"method":"post","path":"/connector/github/networks/get-events","name":"connector_github_networks_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["repo","username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["repo","username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List public events for a network of repositories.\n\nFetches events across all forks of a specified repository.\n\nThis API endpoint provides a stream of events that occur in any fork\nof the specified repository. It includes actions such as commits,\npull requests, issues, and other activity happening in the forked\nrepositories.\n\nUse this endpoint when you need to monitor the activity not just\nin the original repository, but also in all of its forks. This can\nbe particularly useful for understanding the broader impact or\nactivity surrounding a popular project that has been forked multiple\ntimes."},{"method":"post","path":"/connector/github/users/get-events","name":"connector_github_users_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List events for the authenticated user.\n\nList events for the authenticated user\n\nThis API endpoint retrieves a stream of events related to the authenticated user,\nincluding activities such as issues, pull requests, commits, and repository actions\nthat the user has participated in or been mentioned in. The events reflect the user's\ninteractions across all repositories they have access to, both public and private (if\nthe user has appropriate permissions).\n\nThis is useful for tracking a user's activity on GitHub, allowing you to see a\npersonalized feed of their involvement in various projects and interactions with\nother users.\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nIt looks up users' public events. Username should be your own nickname because you can usually only see your own events."},{"method":"post","path":"/connector/github/users/get-organizations","name":"connector_github_users_get_organizations_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List organizations for a user\n\nLook up the user's organization list, but since you can't look up the user's private organization here,\nyou can't really conclude that there isn't an empty array."},{"method":"post","path":"/connector/github/get-events","name":"connector_github_get_events_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true,"title":"event type\nThere are various events such as `WatchEvent`, `CreateEvent`, `ForkEvent`."},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"description":"From T, pick a set of properties whose keys are in the union K"},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action\n\nIt means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]},"comment":{"type":"object","properties":{"id":{"type":"integer"},"body":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string"},"title":{"type":"string"},"summary":{"type":"string","nullable":true},"action":{"type":"string"},"sha":{"type":"string"},"html_url":{"type":"string"}}}}},"required":["id","user","created_at","updated_at"]}}},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true,"title":"created_at"}},"required":["id","type","actor","repo","payload","public","created_at"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List public events.\n\nList public events\n\nThis API is not built to serve real-time use cases. Depending on the time of day, event latency can be anywhere from 30s to 6h.\nWhen I look up the events, they may not be of much value to the user because they are events that occurred on github.\n\nIt's looking up public events, and it's looking at events that occur on github regardless of the specific user.\nTherefore, it may not be of much use unless it is a special case.\nIf you want to get your information, it would be more advantageous to use the 'user/get-events' connector."},{"method":"post","path":"/connector/github/repositories/get-activities","name":"connector_github_repositories_get_activities_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"before":{"type":"string","title":"before\n\nA cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after\n\nA cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["year","month","day","week","quarter"],"title":"time_period"},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"],"title":"activity_type"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"before":{"type":"string","title":"before\n\nA cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after\n\nA cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["year","month","day","week","quarter"],"title":"time_period"},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"],"title":"activity_type"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"ref":{"type":"string","x-wrtn-placeholder":"refs/heads/main","title":"ref"},"timestamp":{"type":"string","format":"date-time","title":"timestamp"},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"],"title":"activity type"},"actor":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."}},"required":["type","id","login","avatar_url"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["id","ref","timestamp","activity_type","actor"]},"title":"result of repository activities"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Get Repository' activities.\n\nGet repository activities\n\nYou can use it to see how active your contribution is to the repository\nbecause it looks up all the activities that have occurred in the repository.\n\nThe types of activities that can be viewed here are as follows, and you can also find out by which user it was operated.\npush, force_push, branch_creation, branch_deletion, pr_merge, merge_queue_merge"},{"method":"post","path":"/connector/github/repositories/get-issues","name":"connector_github_repositories_get_issues_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List repository issues\n\nList issues in a repository. Only open issues will be listed.\nThis connector is perfect if you want to see the issue of the repository because it can be viewed without being authenticated."},{"method":"post","path":"/connector/github/get-users","name":"connector_github_get_users_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"keyword\n\nThe query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"],"title":"sorting condition\n\nSorts the results of your query by number of followers or repositories, or when the person joined GitHub. Default: best match\nIt must be one of this: \"followers\" | \"repositories\" | \"joined\""},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["q","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"keyword\n\nThe query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"],"title":"sorting condition\n\nSorts the results of your query by number of followers or repositories, or when the person joined GitHub. Default: best match\nIt must be one of this: \"followers\" | \"repositories\" | \"joined\""},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."}},"required":["q"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"uri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"type":{"type":"string","enum":["User","Bot"],"title":"type"},"score":{"type":"number","title":"score"}},"required":["login","id","avatar_url","html_url","type","score"]},"title":"User Search Result Item\n\nUser Search Result Item"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Search for users by keyword in github"},{"method":"post","path":"/connector/github/get-user-profile","name":"connector_github_get_user_profile_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"username"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"username"}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"name":{"type":"string","title":"name\nIt means the actual name that the user has written, not the user's nickname."},"company":{"type":"string","nullable":true,"title":"comany name\n\nAs the name of the company,\nit cannot be said to be the exact name listed as the business operator because it was written by the user himself.\nAlso, we cannot guarantee that the user wrote the company name.\nSometimes the user jokingly writes down strange names."},"blog":{"type":"string","nullable":true,"title":"blog\n\nIndicates the blog address."},"location":{"type":"string","nullable":true,"title":"location\n\nIt means the location of the user.\nUsually, I write the country down, but the user can jokingly record the strange location."},"email":{"type":"string","nullable":true,"title":"email address"},"bio":{"type":"string","nullable":true,"title":"bio\n\nWrite down what the user wants to say or a history."},"twitter_username":{"type":"string","nullable":true,"title":"twitter_username"},"public_repos":{"type":"integer","title":"count of public repos"},"public_gists":{"type":"integer","title":"count of public gists"},"followers":{"type":"integer","title":"count of followers"},"following":{"type":"integer","title":"count of follwing"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"profile_repository":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"uri","title":"html_url"},"description":{"type":"string","nullable":true,"title":"description"},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"],"title":"visibility"},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"]},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true,"title":"url"},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"},"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"]},"encoding":{"type":"string","x-wrtn-placeholder":"base64"},"size":{"type":"number","title":"Indicates the file size in bytes."},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","title":"download_url\n\nThe url that allows you to download a file, which is useful if it is a media file containing an image."}},"required":["type","encoding","size","name","path","content","sha","url","download_url"],"nullable":true}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers","readme"],"nullable":true,"title":"profile_repo"},"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."}},"required":["name","company","blog","location","email","bio","twitter_username","public_repos","public_gists","followers","following","created_at","updated_at","profile_repository","type","id","login","avatar_url"]},"description":"Look up the user's detailed profile"},{"method":"post","path":"/connector/github/get-issues","name":"connector_github_get_issues_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"],"title":"filter\n\nIt must be one of: \"assigned\", \"created\", \"mentioned\", \"subscribed\", \"repos\", \"all\"\n\nIndicates which sorts of issues to return.\nassigned means issues assigned to you.\ncreated means issues created by you.\nmentioned means issues mentioning you.\nsubscribed means issues you're subscribed to updates for.\nall or repos means all issues you can see, regardless of participation or creation."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["asc","desc"],"title":"direction\nThe order to sort by.\nDefault: asc when using full_name, otherwise desc."},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"],"title":"filter\n\nIt must be one of: \"assigned\", \"created\", \"mentioned\", \"subscribed\", \"repos\", \"all\"\n\nIndicates which sorts of issues to return.\nassigned means issues assigned to you.\ncreated means issues created by you.\nmentioned means issues mentioning you.\nsubscribed means issues you're subscribed to updates for.\nall or repos means all issues you can see, regardless of participation or creation."},"state":{"type":"string","enum":["open","closed","all"],"title":"state\n\nIndicates the state of the issues to return.\nIt must be one of: 'open', 'closed', 'all'"},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"],"title":"sort\nIt must be 'created', 'updated', 'comments'"},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user","repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["id","url","number","state","title","user","labels","assignee"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List issues assigned to the authenticated user\n\nList issues assigned to the authenticated user across all visible repositories\nincluding owned repositories, member repositories, and organization repositories.\nYou can use the filter query parameter to fetch issues that are not necessarily assigned to you.\nThis connector is not appropriate if you open a repository issue or if you are not a contributor because you can only see the issues assigned to you.\n\nIt is generally difficult to use because only issues related to me come out."},{"method":"post","path":"/connector/github/get-organizations","name":"connector_github_get_organizations_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":[]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"]}},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"List organizations for the authenticated user\n\nInquire the user's repository.\nHere, the user is an authenticated user, which means a user of that token.\nIf a user does not select an organization at login or ask the organization's admin to link it,\nthe resource might not be viewed even if the token scope has permissions."},{"method":"post","path":"/connector/github/get-branches","name":"connector_github_get_branches_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"name of Branch"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"uri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"author"},"committer":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"committer"},"tree":{"type":"object","properties":{"sha":{"type":"string"},"url":{"type":"string","format":"uri"}},"required":["sha","url"]},"comment_count":{"type":"integer"}},"required":["message","url","author","committer","tree","comment_count"]}},"required":["name","commit"]},"title":"branches"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Inquire the user's branch\nYou can look up a list of branches in a specific repository.\nBecause it says what the last commit is, and when and to whom it was made,\nyou can see which of the branches is the latest and managed."},{"method":"post","path":"/connector/github/get-pull-requests-associated-with-a-commit","name":"connector_github_get_pull_requests_associated_with_a_commit_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"array","items":{"type":"object","properties":{"head":{"type":"object","properties":{"label":{"type":"string"},"ref":{"type":"string"},"sha":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["label","ref","sha","user"]},"base":{"type":"object","properties":{"label":{"type":"string"},"ref":{"type":"string"},"sha":{"type":"string"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["label","ref","sha","user"]},"merged_at":{"type":"string","format":"date-time","nullable":true},"author_association":{"type":"string","enum":["NONE","COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","OWNER"]},"draft":{"type":"boolean","title":"draft\n\nIndicates whether or not the pull request is a draft."},"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true,"description":"The reason for the current state"},"title":{"type":"string","description":"Title of the issue"},"user":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"body":{"type":"string","nullable":true,"description":"Contents of the issue"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer"},"url":{"type":"string","format":"uri"},"name":{"type":"string"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean"}}}]},"description":"Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["type","id","login"],"description":"From T, pick a set of properties whose keys are in the union K"},"nullable":true}},"required":["head","base","merged_at","author_association","id","url","number","state","title","user","labels","assignee"]}},"description":"get pull requests associated with a commit.\n\nList pull requests associated with a commit\n\nFetches the pull requests (PRs) associated with a specific commit in a GitHub repository.\nThis API endpoint retrieves a list of pull requests that include the specified commit.\nThis can be useful for tracking where and how a particular change was merged into a branch."},{"method":"post","path":"/connector/github/get-commit-heads","name":"connector_github_get_commit_heads_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"sha":{"type":"string"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"uri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"author"},"committer":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"committer"},"tree":{"type":"object","properties":{"sha":{"type":"string"},"url":{"type":"string","format":"uri"}},"required":["sha","url"]},"comment_count":{"type":"integer"}},"required":["message","url","author","committer","tree","comment_count"],"description":"From T, pick a set of properties whose keys are in the union K"},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"],"title":"status of file in this commit"},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"uri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"uri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch\n\nIt means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"]}}},"required":["sha","commit","files"]},"description":"Lists all branches that contain the HEAD commit of a GitHub repository.\n\nThis function utilizes the GitHub API to retrieve a list of branches where the current\nHEAD commit (the latest commit on the checked-out branch) is included. This is useful for\ndetermining which branches contain the most recent changes."},{"method":"post","path":"/connector/github/get-commit","name":"connector_github_get_commit_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","ref","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"commit hash or branch name"}},"required":["owner","repo","ref"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"uri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"author"},"committer":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"committer"},"tree":{"type":"object","properties":{"sha":{"type":"string"},"url":{"type":"string","format":"uri"}},"required":["sha","url"]},"comment_count":{"type":"integer"}},"required":["message","url","author","committer","tree","comment_count"]},"html_url":{"type":"string","format":"uri"},"parents":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"}},"required":["sha"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"Parents of this commit"},"stats":{"type":"object","properties":{"total":{"type":"integer","title":"sum of additions and deletions"},"additions":{"type":"integer","title":"lines of additions"},"deletions":{"type":"integer","title":"lines of deletions"}},"required":["total","additions","deletions"]},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"],"title":"status of file in this commit"},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"uri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"uri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch\n\nIt means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"]},"title":"files\n\nYou can see the changes for each file."}},"required":["sha","commit","html_url","parents","stats","files"]},"description":"Inquire the commit details of the user\nIt contains all the history of how the file changed, so you can see the details of a single commit node."},{"method":"post","path":"/connector/github/get-commit-diff","name":"connector_github_get_commit_diff_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","ref","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"commit hash or branch name"}},"required":["owner","repo","ref"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"string"},"description":"Inquire the commit diff of the user\ndiff is Github's own content type specification that allows you to identify changes per commit on the Github homepage."},{"method":"post","path":"/connector/github/get-commit-list","name":"connector_github_get_commit_list_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["owner","repo","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."}},"required":["owner","repo"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"uri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"author"},"committer":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"date":{"type":"string","format":"date-time"}},"required":["name","email","date"],"title":"committer"}},"required":["message","url","author","committer"],"description":"From T, pick a set of properties whose keys are in the union K"}},"required":["sha","commit"]},"title":"commit list"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Look up the list of commitments for a specific repo, a specific branch"},{"method":"post","path":"/connector/github/get-followers","name":"connector_github_get_followers_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"uri","title":"html_url\n\nIf you want to look up your profile, you can access this website."}},"required":["id","login","avatar_url","html_url"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"followers"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Inquire the followers of the user"},{"method":"post","path":"/connector/github/get-followees","name":"connector_github_get_followees_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["username","secretKey"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page\nThe number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page\nThe page number of the results to fetch."},"order":{"type":"string","enum":["asc","desc"],"title":"order\n\nDetermines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc).\nThis parameter is ignored unless you provide sort."}},"required":["username"]}}}}],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["user"],"title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"uri","title":"html_url\n\nIf you want to look up your profile, you can access this website."}},"required":["id","login","avatar_url","html_url"],"description":"From T, pick a set of properties whose keys are in the union K"},"title":"followees"},"nextPage":{"type":"boolean","title":"true if there is a next page\n\nHowever, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true,"title":"prev\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the previous page."},"next":{"type":"number","nullable":true,"title":"next\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the next page."},"last":{"type":"number","title":"last\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first\n\nIf this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"]},"description":"Inquire the followees of the user"},{"method":"post","path":"/connector/github/get-my-profile","name":"connector_github_get_my_profile_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}],"separated":{"llm":[],"human":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","title":"인증 정보 선택","description":"secret key."}},"required":["secretKey"]}}}}]},"output":{"type":"object","properties":{"type":{"type":"string","enum":["User","Bot"],"title":"type"},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login\n\nThis means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"uri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"uri","title":"html_url\n\nIf you want to look up your profile, you can access this website."}},"required":["type","id","login","avatar_url","html_url"]},"description":"Get my profile.\n\nGet user's profile\n\n유저의 토큰을 쓰지 말고, 그냥 get-user-profile connector로 조회하는 것이 더 빠를 것이기 때문에 아래 로직은 Depreacted로 변경한다."},{"method":"post","path":"/connector/github/upload","name":"connector_github_upload_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"content":{"type":"string","title":"content"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."}},"required":["content","path"],"description":"From T, pick a set of properties whose keys are in the union K"}},"key":{"type":"string"}},"required":["files","key"]}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"content":{"type":"string","title":"content"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."}},"required":["content","path"],"description":"From T, pick a set of properties whose keys are in the union K"}},"key":{"type":"string"}},"required":["files","key"]}}}}],"human":[]},"output":{"type":"string"}},{"method":"post","path":"/connector/short-link/create","name":"connector_short_link_create_post","strict":true,"parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{}}}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{"body":{"type":"object","properties":{}}}}}],"human":[]},"output":{"type":"object","properties":{}}},{"method":"post","path":"/swagger/update","name":"swagger_update_post","strict":true,"parameters":[{"type":"object","properties":{}}],"separated":{"llm":[{"index":0,"schema":{"type":"object","properties":{}}}],"human":[]},"description":"Swagger.json 업데이트."}],"errors":[],"options":{"keyword":true}}