{"model":"3.0","options":{"constraint":true,"recursive":3,"maxLength":null,"keyword":true},"functions":[{"method":"post","path":"/connector/rag/analyze","name":"connector_rag_analyze","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.hancom.hwp, text/plain, text/html"},"title":"Knowledge that the chatbot will use to answer","description":"Knowledge that the chatbot will use to answer"}},"required":["url"],"title":"Knowledge that the chatbot will use to answer","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"array","items":{"type":"string","format":"uri","contentMediaType":"application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.hancom.hwp, text/plain, text/html"},"title":"Knowledge that the chatbot will use to answer","description":"Knowledge that the chatbot will use to answer"}},"required":["url"],"title":"Knowledge that the chatbot will use to answer","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"chatId":{"type":"string","title":"chat id","description":"Chat id required for RAG generation results.\nReturns the chat id for the analyzed file to generate chat results for the file analyzed by RAG.\nThe same chat id is required to analyze multiple files and generate results for multiple files in the same chat."}},"required":["chatId"],"title":"RAG analysis results","additionalProperties":false},"description":"Request RAG analysis for the input file\n\nThis connector can be used when creating a chatbot that compares multiple research papers.","tags":["RAG"]},{"method":"post","path":"/connector/rag/generate/{chatId}","name":"connector_rag_generate","parameters":[{"type":"object","properties":{"chatId":{"type":"string"},"body":{"type":"object","properties":{"query":{"type":"string","title":"User utterance","description":"This is a user utterance."}},"required":["query"],"title":"Information required for chatting via RAG","additionalProperties":false}},"additionalProperties":false,"required":["chatId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"chatId":{"type":"string"},"body":{"type":"object","properties":{"query":{"type":"string","title":"User utterance","description":"This is a user utterance."}},"required":["query"],"title":"Information required for chatting via RAG","additionalProperties":false}},"additionalProperties":false,"required":["chatId","body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"answer":{"type":"string","title":"Response to utterance","description":"Response to RAG-based creation request."}},"required":["answer"],"title":"Chat results via RAG","additionalProperties":false},"description":"Generate RAG-based results.\n\nGenerates requested results based on RAG analysis\n\nA connector that can be used to generate answers to user questions through a chatbot that compares multiple research papers.","tags":["RAG"]},{"method":"post","path":"/connector/hwp/parse","name":"connector_hwp_parse_parseHwp","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.hancom.hwp","title":"hwp file","description":"hwp file to parse."}},"required":["fileUrl"],"title":"Information for parsing hwp files","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.hancom.hwp","title":"hwp file","description":"hwp file to parse."}},"required":["fileUrl"],"title":"Information for parsing hwp files","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"text":{"type":"string","title":"text","description":"Text of the parsed hwp file"}},"required":["text"],"title":"hwp file parsing result","additionalProperties":false},"description":"Parse the Hwp file.\n\nParse the hwp file","tags":["Hwp"]},{"method":"patch","path":"/connector/excel/read/headers","name":"connector_excel_read_headers_readHeaders","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"},"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true}},"required":[],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"string"}},"description":"Get the headers in the Excel file.\n\nBased on the input file information, the headers of the corresponding Excel file are retrieved","tags":["Excel"]},{"method":"patch","path":"/connector/excel/read","name":"connector_excel_read_read","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"},"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","x-wrtn-placeholder":"Sheet1","nullable":true}},"required":[],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"string"},"title":"headers of this sheet"},"data":{"type":"array","items":{"type":"object","properties":{},"required":[],"title":"Read Excel row data","additionalProperties":{}},"title":"Excel sheet data"}},"required":["headers","data"],"title":"Excel file reading result","additionalProperties":false},"description":"Get the contents of the Excel file.\n\nGet the contents of the corresponding Excel file based on the input file information","tags":["Excel"]},{"method":"patch","path":"/connector/excel/worksheet","name":"connector_excel_worksheet_worksheetList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"File to import list of Excel worksheets"}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"File to import list of Excel worksheets"}},"required":["fileUrl"],"title":"file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"sheetName":{"type":"string","title":"sheet name","description":"Name of the imported worksheet"},"id":{"type":"number","title":"sheet id","description":"The id of the imported worksheet."}},"required":["sheetName","id"],"additionalProperties":false},"title":"sheet list data"}},"required":["data"],"title":"List of imported worksheets","additionalProperties":false},"description":"Get a list of Excel worksheets that exist in the input file url","tags":["Excel"]},{"method":"post","path":"/connector/excel/rows/upload","name":"connector_excel_rows_upload_insertRowsByUpload","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately."},"data":{"type":"array","items":{"type":"object","properties":{"column":{"type":"integer","minimum":1,"maximum":26,"title":"Column Number","description":"It counts from 1"},"row":{"type":"integer","minimum":1,"maximum":1000,"title":"Row Number","description":"It counts from 1"},"snapshot":{"type":"object","properties":{"value":{"type":"string","title":"value","description":"If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."},"type":{"type":"string","enum":["text"],"title":"Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."}},"required":["value","type"],"additionalProperties":false}},"required":["column","row","snapshot"],"additionalProperties":false},"title":"Cell informations","description":"The type of data and coordinates of each row and column"},"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["data"],"title":"Information for adding data","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"column":{"type":"integer","minimum":1,"maximum":26,"title":"Column Number","description":"It counts from 1"},"row":{"type":"integer","minimum":1,"maximum":1000,"title":"Row Number","description":"It counts from 1"},"snapshot":{"type":"object","properties":{"value":{"type":"string","title":"value","description":"If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."},"type":{"type":"string","enum":["text"],"title":"Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."}},"required":["value","type"],"additionalProperties":false}},"required":["column","row","snapshot"],"additionalProperties":false},"title":"Cell informations","description":"The type of data and coordinates of each row and column"},"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["data"],"title":"Information for adding data","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"엑셀 파일","description":"엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately."}},"required":[],"title":"Information for adding data","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"fileId":{"type":"string","title":"S3 path of file"},"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Generated Excel file url"}},"required":["fileId","fileUrl"],"title":"Excel row addition result","additionalProperties":false},"description":"Create Excel and add data by uploading Excel files.\n\nUpload an Excel file to add data to the file\n\nWhen adding data to Excel, sheet creation precedes if it is a sheet that does not exist yet.\nTherefore, this feature can also be used for sheet creation.\nIf you want to create a sheet only and create an empty file without any data,\nyou just need to specify the name of the sheet without any data.\n\nWhen adding rows to an already existing sheet,\nit is supposed to be added to the lower line, so it is recommended to check the data before adding it.\nIf you provide fileUrl, you can modify it after you work on it. After modification, the file will be issued as a new link.\n\nIt is a connector that allows users to upload files by drag and drop.","tags":["Excel"]},{"method":"post","path":"/connector/excel/rows","name":"connector_excel_rows_insertRows","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","title":"엑셀 파일","description":"엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately."},"data":{"type":"array","items":{"type":"object","properties":{"column":{"type":"integer","minimum":1,"maximum":26,"title":"Column Number","description":"It counts from 1"},"row":{"type":"integer","minimum":1,"maximum":1000,"title":"Row Number","description":"It counts from 1"},"snapshot":{"type":"object","properties":{"value":{"type":"string","title":"value","description":"If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."},"type":{"type":"string","enum":["text"],"title":"Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."}},"required":["value","type"],"additionalProperties":false}},"required":["column","row","snapshot"],"additionalProperties":false},"title":"Cell informations","description":"The type of data and coordinates of each row and column"},"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["data"],"title":"Information for adding data","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","title":"엑셀 파일","description":"엑셀 행을 추가할 파일\n\nIf you have this address, take an Excel file from that path and modify it.\nThe modified file is saved as a new link and does not modify the original file in this path.\nIf this address does not exist, create a new file immediately."},"data":{"type":"array","items":{"type":"object","properties":{"column":{"type":"integer","minimum":1,"maximum":26,"title":"Column Number","description":"It counts from 1"},"row":{"type":"integer","minimum":1,"maximum":1000,"title":"Row Number","description":"It counts from 1"},"snapshot":{"type":"object","properties":{"value":{"type":"string","title":"value","description":"If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."},"type":{"type":"string","enum":["text"],"title":"Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."}},"required":["value","type"],"additionalProperties":false}},"required":["column","row","snapshot"],"additionalProperties":false},"title":"Cell informations","description":"The type of data and coordinates of each row and column"},"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":["data"],"title":"Information for adding data","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"fileId":{"type":"string","title":"S3 path of file"},"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Generated Excel file url"}},"required":["fileId","fileUrl"],"title":"Excel row addition result","additionalProperties":false},"description":"엑셀 파일 링크를 가지고 액셀 생성 및 데이터 추가.\n\nAdd data to the Excel file with an Excel file link\n\nIf the sheet doesn’t exist, it will be created, allowing both sheet creation and data addition.\nTo create an empty sheet, specify only the sheet name without data.\nRows added to an existing sheet will appear on the next line; verify data before adding.\nIf you provide a file URL, modifications are saved, and a new link is issued.\nThis connector updates Excel files directly via file links, improving user experience over uploading files.\nA link is generated immediately after file creation, making data management more efficient.","tags":["Excel"]},{"method":"post","path":"/connector/excel","name":"connector_excel_createSheets","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","maxLength":31,"x-wrtn-placeholder":"Sheet1","nullable":true}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"fileId":{"type":"string","title":"S3 path of file"},"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Generated Excel file url"}},"required":["fileId","fileUrl"],"title":"Excel row addition result","additionalProperties":false},"description":"Add Excel files and sheet\n\nCreate an Excel file and get the link back.\nYou can also forward this link to the following connector to reflect further modifications.\nWhen creating a sheet with this feature, the default name 'Sheet1' is created if the sheet name is not provided.","deprecated":true,"tags":["Excel"]},{"method":"post","path":"/connector/google-docs/markdown","name":"connector_google_docs_markdown_write","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive file name","description":"File name to be created in drive"},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google Drive Folder ID","description":"Folder id that will contain the file to be created in the drive"},"markdown":{"type":"string","title":"markdown","description":"Contents of the file to be created in drive"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["name","markdown","secretKey"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive file name","description":"File name to be created in drive"},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google Drive Folder ID","description":"Folder id that will contain the file to be created in the drive"},"markdown":{"type":"string","title":"markdown","description":"Contents of the file to be created in drive"}},"required":["name","markdown"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"markdown":{"type":"object","properties":{"id":{"type":"string","title":"Created Markdown File ID"}},"required":["id"],"additionalProperties":false},"googleDocs":{"type":"object","properties":{"id":{"type":"string","title":"Created Google Docs File ID"},"url":{"type":"string","format":"iri","title":"File URL"}},"required":["id","url"],"additionalProperties":false}},"required":["markdown","googleDocs"],"additionalProperties":false},"description":"Write Google Docs by markdown format string.\n\nGenerate Google Docs By markdown format string\n\nCreate a document with a markdown, which is the ID of the markdown file and the ID of the document.\nIn the case of Google Docs, URLs are included, so you can open and inquire files directly based on your ID.","tags":["Google Docs"]},{"method":"delete","path":"/connector/google-docs/contents","name":"connector_google_docs_contents_clear","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"ID of Google Docs File","description":"ID when you want to erase the entire contents of a file and make it an empty file"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["documentId","secretKey"],"title":"Google Drive and Docs Secret Key and information to clear file","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"ID of Google Docs File","description":"ID when you want to erase the entire contents of a file and make it an empty file"}},"required":["documentId"],"title":"Google Drive and Docs Secret Key and information to clear file","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Google Drive and Docs Secret Key and information to clear file","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Created Google Docs File ID"},"url":{"type":"string","format":"iri","title":"File URL"}},"required":["id","url"],"title":"Document ID and URL","additionalProperties":false},"description":"erase the entire contents of a file and make it an empty file.\n\nRemove entire contents of google docs\n\nMake Google Docs a blank file like you just created.","tags":["Google Docs"]},{"method":"post","path":"/connector/google-docs/permission","name":"connector_google_docs_permission","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"Google docs id","description":"The id of the Google docs to which you want to grant access."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to grant permission to","description":"The email address of the user to grant permission to."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"]},"type":{"type":"string","enum":["group","user","domain","anyone"]}},"required":["email","role","type"],"title":"Authorization information","additionalProperties":false},"title":"Here is a list of emails to make accessible and the permissions to grant","description":"Here is a list of emails to make accessible and the permissions to grant."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["documentId","permissions","secretKey"],"title":"Information required to grant Google Docs permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"documentId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"Google docs id","description":"The id of the Google docs to which you want to grant access."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to grant permission to","description":"The email address of the user to grant permission to."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"]},"type":{"type":"string","enum":["group","user","domain","anyone"]}},"required":["email","role","type"],"title":"Authorization information","additionalProperties":false},"title":"Here is a list of emails to make accessible and the permissions to grant","description":"Here is a list of emails to make accessible and the permissions to grant."}},"required":["documentId","permissions"],"title":"Information required to grant Google Docs permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to grant Google Docs permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Grant permission to Google Docs","tags":["Google Docs"]},{"method":"patch","path":"/connector/google-docs/get/{id}","name":"connector_google_docs_get_readDocs","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Google Docs unique ID"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Google Docs unique ID"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"object","properties":{"text":{"type":"string","title":"text information","description":"Here is the text information from Google Docs."},"table":{"type":"array","items":{"type":"array","items":{"type":"array","items":{"type":"string"}}},"title":"Table Information","description":"Here is the table information from Google Docs."}},"required":[],"additionalProperties":false}},"required":["data"],"title":"Google Docs search results","additionalProperties":false},"description":"Read Google Docs.\n\nRead the contents of Google Docs","tags":["Google Docs"]},{"method":"post","path":"/connector/google-docs/template","name":"connector_google_docs_template_createDocByTemplate","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"templateId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"Google docs to clone","description":"Google docs to clone"},"title":{"type":"string","title":"The title of the docs to be created","description":"The title of the docs to be newly created by duplicating"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["templateId","title","secretKey"],"title":"Information needed to duplicate Google Docs","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"templateId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-docs/get-list","jmesPath":"data[].{value:id, label:title}"},"title":"Google docs to clone","description":"Google docs to clone"},"title":{"type":"string","title":"The title of the docs to be created","description":"The title of the docs to be newly created by duplicating"}},"required":["templateId","title"],"title":"Information needed to duplicate Google Docs","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to duplicate Google Docs","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Generated docs id","description":"The id of the copied docs"}},"required":["id"],"title":"Google Docs Duplication Results","additionalProperties":false},"description":"Copy Google Docs.\n\nCreate new Google Docs by copying existing Google Docs","tags":["Google Docs"]},{"method":"put","path":"/connector/google-docs/{id}","name":"connector_google_docs_update","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Google Docs File ID to update"},"body":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"title","description":"Title to update"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["title","secretKey"],"title":"Google Docs Secret Key and title to update","additionalProperties":false},{"type":"object","properties":{"contents":{"type":"string","title":"contents as markdown format","description":"Existing content will be covered with this content,\nso if you want to add content, you should check the previous content and specify what you have added with this parameter."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["contents","secretKey"],"title":"Google Docs Secret Key and contents to update","additionalProperties":false}]}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Google Docs File ID to update"},"body":{"oneOf":[{"type":"object","properties":{"title":{"type":"string","title":"title","description":"Title to update"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["title","secretKey"],"title":"Google Docs Secret Key and title to update","additionalProperties":false},{"type":"object","properties":{"contents":{"type":"string","title":"contents as markdown format","description":"Existing content will be covered with this content,\nso if you want to add content, you should check the previous content and specify what you have added with this parameter."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["contents","secretKey"],"title":"Google Docs Secret Key and contents to update","additionalProperties":false}]}},"additionalProperties":false,"required":["id","body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Updated Google Docs File ID"},"url":{"type":"string","format":"iri","title":"File URL"}},"required":["id","url"],"additionalProperties":false},"tags":[]},{"method":"delete","path":"/connector/google-docs/{id}","name":"connector_google_docs_deleteById","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the Google Docs to delete"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-docs/get-list","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the Google Docs to delete"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete Google Docs","tags":["Google Docs"]},{"method":"patch","path":"/connector/google-docs/get-list","name":"connector_google_docs_get_list_list","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/documents"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"title":{"type":"string","nullable":true}},"required":[],"additionalProperties":false},"title":"List of Google docs","description":"Here is a list of Google docs that were searched."}},"required":["data"],"title":"Google docs list query results","additionalProperties":false},"description":"Get a list of Google Docs","tags":["Google Docs"]},{"method":"patch","path":"/connector/google-sheet","name":"connector_google_sheet_getHeaders","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url address of the sheet from which to read the header information."},"index":{"type":"number","title":"Sheet header index","description":"The header index of the sheet to read."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["url","secretKey"],"title":"Information needed to read Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url address of the sheet from which to read the header information."},"index":{"type":"number","title":"Sheet header index","description":"The header index of the sheet to read."}},"required":["url"],"title":"Information needed to read Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to read Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"title":"Sheet data","description":"This is the data from the read sheet."}},"required":["data"],"title":"Google Sheet Reading Results","additionalProperties":false},"description":"Get the header information of a Google Sheet","tags":["Google Sheet"]},{"method":"post","path":"/connector/google-sheet/append","name":"connector_google_sheet_append_appendGoogleSheet","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"spreadSheetId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-sheet/create","jmesPath":"[].{value:spreadsheetId, label:spreadsheetUrl}"},"title":"The sheet to add","description":"This is the sheet to which you want to add content."},"values":{"type":"array","items":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"number"},{"type":"boolean"}]}},"title":"These are the values to add","description":"These are the values to add."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["spreadSheetId","values","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"spreadSheetId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-sheet/create","jmesPath":"[].{value:spreadsheetId, label:spreadsheetUrl}"},"title":"The sheet to add","description":"This is the sheet to which you want to add content."},"values":{"type":"array","items":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"number"},{"type":"boolean"}]}},"title":"These are the values to add","description":"These are the values to add."}},"required":["spreadSheetId","values"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"spreadsheetId":{"type":"string","title":"Sheet ID","description":"The ID of the generated Google Spreadsheet."},"spreadsheetUrl":{"type":"string","title":"Sheet URL","description":"The URL of the generated Google Spreadsheet."}},"required":["spreadsheetId","spreadsheetUrl"],"title":"Google Spreadsheet Creation Results","additionalProperties":false},"description":"Add content to Google Sheets","tags":["Google Sheet"]},{"method":"post","path":"/connector/google-sheet/create","name":"connector_google_sheet_create_createGoogleSheet","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Sheet Title","description":"Please enter a title for the Google Spreadsheet you want to create."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["title","secretKey"],"title":"Information needed to create a Google Spreadsheet","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Sheet Title","description":"Please enter a title for the Google Spreadsheet you want to create."}},"required":["title"],"title":"Information needed to create a Google Spreadsheet","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to create a Google Spreadsheet","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"spreadsheetId":{"type":"string","title":"Sheet ID","description":"The ID of the generated Google Spreadsheet."},"spreadsheetUrl":{"type":"string","title":"Sheet URL","description":"The URL of the generated Google Spreadsheet."}},"required":["spreadsheetId","spreadsheetUrl"],"title":"Google Spreadsheet Creation Results","additionalProperties":false},"description":"Create a Google Sheet\n\nThe created sheet will be created in the Google Drive root path.","tags":["Google Sheet"]},{"method":"post","path":"/connector/google-sheet/permission","name":"connector_google_sheet_permission","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"sheet url","description":"The url of the sheet to grant permission to."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to grant permission to","description":"The email address of the user to grant permission to."},"role":{"type":"string","enum":["owner","writer","commenter","reader"]}},"required":["email","role"],"title":"Permissions Information","additionalProperties":false},"title":"Here is a list of emails to make accessible and permissions to grant","description":"Here is a list of emails to make accessible and permissions to grant."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["url","permissions","secretKey"],"title":"Information required to grant Google Sheets permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"sheet url","description":"The url of the sheet to grant permission to."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to grant permission to","description":"The email address of the user to grant permission to."},"role":{"type":"string","enum":["owner","writer","commenter","reader"]}},"required":["email","role"],"title":"Permissions Information","additionalProperties":false},"title":"Here is a list of emails to make accessible and permissions to grant","description":"Here is a list of emails to make accessible and permissions to grant."}},"required":["url","permissions"],"title":"Information required to grant Google Sheets permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to grant Google Sheets permissions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Grant permissions to Google Sheets","tags":["Google Sheet"]},{"method":"post","path":"/connector/google-sheet/header","name":"connector_google_sheet_header_writeHeaders","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet to which you want to add the header."},"index":{"type":"number","title":"sheet index","description":"The index of the header to add."},"headerNames":{"type":"array","items":{"type":"string"},"title":"A list of headers to add to the sheet","description":"A list of headers to add to the sheet."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["url","headerNames","secretKey"],"title":"Information needed to add a Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet to which you want to add the header."},"index":{"type":"number","title":"sheet index","description":"The index of the header to add."},"headerNames":{"type":"array","items":{"type":"string"},"title":"A list of headers to add to the sheet","description":"A list of headers to add to the sheet."}},"required":["url","headerNames"],"title":"Information needed to add a Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to add a Google Sheet header","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Add a Google Sheet header.\n\nAdd a header to a Google Sheet","tags":["Google Sheet"]},{"method":"patch","path":"/connector/google-sheet/worksheet","name":"connector_google_sheet_worksheet_getWorkSheet","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet to read."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["url","secretKey"],"title":"Information required to view worksheets","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet to read."}},"required":["url"],"title":"Information required to view worksheets","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to view worksheets","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"string"},"title":"List of worksheet titles","description":"Here is a list of titles for the sheets you've read."}},"required":["data"],"title":"Worksheet query results","additionalProperties":false},"description":"Get a list of Google Sheets Worksheets.\n\nGet a list of Google Worksheets","tags":["Google Sheet"]},{"method":"patch","path":"/connector/google-sheet/get-rows","name":"connector_google_sheet_get_rows_readRows","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet from which to read the rows."},"workSheetTitle":{"type":"string","title":"The title of the sheet to work on","description":"The title of the sheet to work on."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["url","workSheetTitle","secretKey"],"title":"Information needed to read Google Sheet rows","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"sheet url","description":"The url of the sheet from which to read the rows."},"workSheetTitle":{"type":"string","title":"The title of the sheet to work on","description":"The title of the sheet to work on."}},"required":["url","workSheetTitle"],"title":"Information needed to read Google Sheet rows","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to read Google Sheet rows","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[],"title":"Google Sheets Row Data Information","additionalProperties":{}},"title":"This is the read Google Sheet row data","description":"This is the read Google Sheet row data."}},"required":["data"],"title":"Google Sheets Row Reading Results","additionalProperties":false},"description":"Get Row information from Google Sheets","tags":["Google Sheet"]},{"method":"patch","path":"/connector/google-calendar/get-list","name":"connector_google_calendar_get_list_readCalenders","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"summary":{"type":"string","nullable":true}},"required":[],"title":"Calendar creation result","additionalProperties":false}},"description":"Get a list of Google Calendars","tags":["Google Calendar"]},{"method":"post","path":"/connector/google-calendar","name":"connector_google_calendar_createCalendar","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"The title of the calendar to be created","description":"The title of the calendar to be created."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["title","secretKey"],"title":"Information for creating a calendar","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"The title of the calendar to be created","description":"The title of the calendar to be created."}},"required":["title"],"title":"Information for creating a calendar","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information for creating a calendar","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true},"summary":{"type":"string","nullable":true}},"required":[],"title":"Calendar creation result","additionalProperties":false},"description":"Create a Google Calendar","tags":["Google Calendar"]},{"method":"delete","path":"/connector/google-calendar/{calendarId}","name":"connector_google_calendar_deleteCalendar","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" The unique ID of the calendar to delete"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" The unique ID of the calendar to delete"}},"additionalProperties":false,"required":["calendarId"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete a Google Calendar.\n\nDelete a calendar","tags":["Google Calendar"]},{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","name":"connector_google_calendar_get_events_readEvents","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to get the list of events"},"body":{"type":"object","properties":{"time_max":{"type":"string","format":"date-time","title":"Information about the last date from which events will be fetched","description":"Events after that date will not be fetched.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"time_min":{"type":"string","format":"date-time","title":"Information on the start date from which events will be retrieved","description":"Events prior to that date will not be retrieved.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"max_results":{"type":"integer","title":"How many results to return","description":"Sets the maximum number of events to retrieve."},"orderBy":{"type":"string","enum":["startTime","updated"]},"query":{"type":"string","title":"Event search terms","description":"You can search for events that contain your search terms.\n\nYou can search for events that contain your search terms in the title, description, location, attendees, etc."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["time_max","time_min","secretKey"],"title":"Information needed to search for events","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to get the list of events"},"body":{"type":"object","properties":{"time_max":{"type":"string","format":"date-time","title":"Information about the last date from which events will be fetched","description":"Events after that date will not be fetched.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"time_min":{"type":"string","format":"date-time","title":"Information on the start date from which events will be retrieved","description":"Events prior to that date will not be retrieved.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"max_results":{"type":"integer","title":"How many results to return","description":"Sets the maximum number of events to retrieve."},"orderBy":{"type":"string","enum":["startTime","updated"]},"query":{"type":"string","title":"Event search terms","description":"You can search for events that contain your search terms.\n\nYou can search for events that contain your search terms in the title, description, location, attendees, etc."}},"required":["time_max","time_min"],"title":"Information needed to search for events","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to search for events","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"events":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"htmlLink":{"type":"string","format":"iri","nullable":true},"color":{"type":"string","nullable":true},"createdDate":{"type":"string","nullable":true},"updatedDate":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true},"transparency":{"type":"string","nullable":true},"guestsCanModify":{"type":"boolean","nullable":true},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"Whether to default notification","description":"Whether to default notification."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true},"minutes":{"type":"number","nullable":true}},"required":[],"title":"Notification settings information","additionalProperties":false},"title":"Notification settings information","description":"Here is the notification settings information."}},"required":[],"additionalProperties":false,"nullable":true},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true},"organizer":{"type":"boolean","nullable":true},"self":{"type":"boolean","nullable":true},"responseStatus":{"type":"string","nullable":true}},"required":[],"title":"Attendee Information","additionalProperties":false},"nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","nullable":true},"title":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"iconLink":{"type":"string","format":"iri","nullable":true},"fileId":{"type":"string","nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true},"hangoutLink":{"type":"string","nullable":true},"visibility":{"type":"string","nullable":true}},"required":[],"title":"Google Calendar Event Information","additionalProperties":false},"title":"Event List","description":"Here is a list of calendar events that were found."}},"required":["events"],"title":"Calendar Event Search Results","additionalProperties":false},"description":"Get a list of Google Calendar events.\n\nGet a list of events in Google Calendar","tags":["Google Calendar"]},{"method":"post","path":"/connector/google-calendar/{calendarId}/quick-event","name":"connector_google_calendar_quick_event_createQuickEvent","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to add the event to"},"body":{"type":"object","properties":{"text":{"type":"string","title":"This is the text for creating a quick calendar event","description":"This is the text for creating a quick calendar event."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["text","secretKey"],"title":"Information needed to create a quick event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to add the event to"},"body":{"type":"object","properties":{"text":{"type":"string","title":"This is the text for creating a quick calendar event","description":"This is the text for creating a quick calendar event."}},"required":["text"],"title":"Information needed to create a quick event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to create a quick event","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Add a quick event to Google Calendar","tags":["Google Calendar"]},{"method":"post","path":"/connector/google-calendar/{calendarId}/event","name":"connector_google_calendar_event_createEvent","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to add the event to"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Event title","description":"The title of the event to be generated."},"description":{"type":"string","title":"Event description","description":"Description of the event to be generated."},"location":{"type":"string","title":"Event Location","description":"This is the event location to be created."},"start":{"type":"string","format":"date-time","title":"Event start date","description":"The start date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"end":{"type":"string","format":"date-time","title":"Event end date","description":"The end date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"Attendee Email","description":"This is the event attendee email."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"]},"repeatNum":{"type":"number","title":"The number of times the event is repeated","description":"The number of times the event is repeated."},"repeatUntil":{"type":"string","format":"date-time","title":"Event repeat deadline","description":"Event repeat deadline.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"isBusy":{"type":"boolean","title":"Whether the event is busy or not","description":"Whether the event is busy or not."},"isUseDefaultReminder":{"type":"boolean","title":"Whether to use the default calendar notifications","description":"Whether to use the default calendar notifications."},"remindersType":{"type":"string","enum":["email","popup"]},"minutesBeforeReminders":{"type":"number","title":"It's time to set a notification before the schedule starts","description":"It's time to set a notification before the schedule starts."},"isConferencing":{"type":"boolean","title":"Whether to create a Google Meet","description":"Whether to create a Google Meet."},"visibility":{"type":"string","enum":["default","private","public"]},"colorId":{"type":"string","title":"Event Color","description":"Event Color."},"isGuestCanModify":{"type":"boolean","title":"Whether guest events can be modified","description":"Whether guest events can be modified."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["start","end","secretKey"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar to add the event to"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Event title","description":"The title of the event to be generated."},"description":{"type":"string","title":"Event description","description":"Description of the event to be generated."},"location":{"type":"string","title":"Event Location","description":"This is the event location to be created."},"start":{"type":"string","format":"date-time","title":"Event start date","description":"The start date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"end":{"type":"string","format":"date-time","title":"Event end date","description":"The end date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"Attendee Email","description":"This is the event attendee email."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"]},"repeatNum":{"type":"number","title":"The number of times the event is repeated","description":"The number of times the event is repeated."},"repeatUntil":{"type":"string","format":"date-time","title":"Event repeat deadline","description":"Event repeat deadline.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"isBusy":{"type":"boolean","title":"Whether the event is busy or not","description":"Whether the event is busy or not."},"isUseDefaultReminder":{"type":"boolean","title":"Whether to use the default calendar notifications","description":"Whether to use the default calendar notifications."},"remindersType":{"type":"string","enum":["email","popup"]},"minutesBeforeReminders":{"type":"number","title":"It's time to set a notification before the schedule starts","description":"It's time to set a notification before the schedule starts."},"isConferencing":{"type":"boolean","title":"Whether to create a Google Meet","description":"Whether to create a Google Meet."},"visibility":{"type":"string","enum":["default","private","public"]},"colorId":{"type":"string","title":"Event Color","description":"Event Color."},"isGuestCanModify":{"type":"boolean","title":"Whether guest events can be modified","description":"Whether guest events can be modified."}},"required":["start","end"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true},"htmlLink":{"type":"string","format":"iri","nullable":true},"color":{"type":"string","nullable":true},"createdDate":{"type":"string","nullable":true},"updatedDate":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true},"transparency":{"type":"string","nullable":true},"guestsCanModify":{"type":"boolean","nullable":true},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"Whether to default notification","description":"Whether to default notification."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true},"minutes":{"type":"number","nullable":true}},"required":[],"title":"Notification settings information","additionalProperties":false},"title":"Notification settings information","description":"Here is the notification settings information."}},"required":[],"additionalProperties":false,"nullable":true},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true},"organizer":{"type":"boolean","nullable":true},"self":{"type":"boolean","nullable":true},"responseStatus":{"type":"string","nullable":true}},"required":[],"title":"Attendee Information","additionalProperties":false},"nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","nullable":true},"title":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"iconLink":{"type":"string","format":"iri","nullable":true},"fileId":{"type":"string","nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true},"hangoutLink":{"type":"string","nullable":true},"visibility":{"type":"string","nullable":true}},"required":[],"title":"Google Calendar Event Information","additionalProperties":false},"description":"Add a Google Calendar event.\n\nAdd an event to Google Calendar","tags":["Google Calendar"]},{"method":"put","path":"/connector/google-calendar/{calendarId}/event/{eventId}","name":"connector_google_calendar_event_updateEvent","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar that contains the event"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the event to modify"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Event title","description":"The title of the event to be generated."},"description":{"type":"string","title":"Event description","description":"Description of the event to be generated."},"location":{"type":"string","title":"Event Location","description":"This is the event location to be created."},"start":{"type":"string","format":"date-time","title":"Event start date","description":"The start date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"end":{"type":"string","format":"date-time","title":"Event end date","description":"The end date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"Attendee Email","description":"This is the event attendee email."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"]},"repeatNum":{"type":"number","title":"The number of times the event is repeated","description":"The number of times the event is repeated."},"repeatUntil":{"type":"string","format":"date-time","title":"Event repeat deadline","description":"Event repeat deadline.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"isBusy":{"type":"boolean","title":"Whether the event is busy or not","description":"Whether the event is busy or not."},"isUseDefaultReminder":{"type":"boolean","title":"Whether to use the default calendar notifications","description":"Whether to use the default calendar notifications."},"remindersType":{"type":"string","enum":["email","popup"]},"minutesBeforeReminders":{"type":"number","title":"It's time to set a notification before the schedule starts","description":"It's time to set a notification before the schedule starts."},"isConferencing":{"type":"boolean","title":"Whether to create a Google Meet","description":"Whether to create a Google Meet."},"visibility":{"type":"string","enum":["default","private","public"]},"colorId":{"type":"string","title":"Event Color","description":"Event Color."},"isGuestCanModify":{"type":"boolean","title":"Whether guest events can be modified","description":"Whether guest events can be modified."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["start","end","secretKey"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","eventId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar that contains the event"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the event to modify"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Event title","description":"The title of the event to be generated."},"description":{"type":"string","title":"Event description","description":"Description of the event to be generated."},"location":{"type":"string","title":"Event Location","description":"This is the event location to be created."},"start":{"type":"string","format":"date-time","title":"Event start date","description":"The start date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"end":{"type":"string","format":"date-time","title":"Event end date","description":"The end date of the event to be created.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"Attendee Email","description":"This is the event attendee email."},"repeatFrequency":{"type":"string","enum":["DAILY","WEEKLY","MONTHLY","YEARLY"]},"repeatNum":{"type":"number","title":"The number of times the event is repeated","description":"The number of times the event is repeated."},"repeatUntil":{"type":"string","format":"date-time","title":"Event repeat deadline","description":"Event repeat deadline.\n\nNote that all date/times are in UTC, so make sure that you have converted the date/time to UTC before using it."},"isBusy":{"type":"boolean","title":"Whether the event is busy or not","description":"Whether the event is busy or not."},"isUseDefaultReminder":{"type":"boolean","title":"Whether to use the default calendar notifications","description":"Whether to use the default calendar notifications."},"remindersType":{"type":"string","enum":["email","popup"]},"minutesBeforeReminders":{"type":"number","title":"It's time to set a notification before the schedule starts","description":"It's time to set a notification before the schedule starts."},"isConferencing":{"type":"boolean","title":"Whether to create a Google Meet","description":"Whether to create a Google Meet."},"visibility":{"type":"string","enum":["default","private","public"]},"colorId":{"type":"string","title":"Event Color","description":"Event Color."},"isGuestCanModify":{"type":"boolean","title":"Whether guest events can be modified","description":"Whether guest events can be modified."}},"required":["start","end"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","eventId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create an event","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true},"htmlLink":{"type":"string","format":"iri","nullable":true},"color":{"type":"string","nullable":true},"createdDate":{"type":"string","nullable":true},"updatedDate":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true},"transparency":{"type":"string","nullable":true},"guestsCanModify":{"type":"boolean","nullable":true},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"Whether to default notification","description":"Whether to default notification."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true},"minutes":{"type":"number","nullable":true}},"required":[],"title":"Notification settings information","additionalProperties":false},"title":"Notification settings information","description":"Here is the notification settings information."}},"required":[],"additionalProperties":false,"nullable":true},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true},"organizer":{"type":"boolean","nullable":true},"self":{"type":"boolean","nullable":true},"responseStatus":{"type":"string","nullable":true}},"required":[],"title":"Attendee Information","additionalProperties":false},"nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","nullable":true},"title":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"iconLink":{"type":"string","format":"iri","nullable":true},"fileId":{"type":"string","nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true},"hangoutLink":{"type":"string","nullable":true},"visibility":{"type":"string","nullable":true}},"required":[],"title":"Google Calendar Event Information","additionalProperties":false},"description":"Modify a Google Calendar event.\n\nModify an event","tags":["Google Calendar"]},{"method":"delete","path":"/connector/google-calendar/{calendarId}/event/{eventId}","name":"connector_google_calendar_event_deleteEvent","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" The unique ID of the calendar that contains the event"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" The unique ID of the event to delete"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","eventId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" The unique ID of the calendar that contains the event"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" The unique ID of the event to delete"}},"additionalProperties":false,"required":["calendarId","eventId"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete a Google Calendar event.\n\nDelete an event","tags":["Google Calendar"]},{"method":"put","path":"/connector/google-calendar/{calendarId}/event/{eventId}/attendees","name":"connector_google_calendar_event_attendees_addAttendeesToEvent","parameters":[{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar where the event is"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the event to add attendees to"},"body":{"type":"object","properties":{"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"The email address of the attendee you wish to add","description":"The email address of the attendee you wish to add."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["attendeesEmail","secretKey"],"title":"Information required to add attendees","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","eventId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"calendarId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/get-list","jmesPath":"[].{value:id, label:summary || ''}"},"description":" Unique ID of the calendar where the event is"},"eventId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-calendar/{calendarId}/get-events","jmesPath":"[].{value: id, label: title || ''}"},"description":" Unique ID of the event to add attendees to"},"body":{"type":"object","properties":{"attendeesEmail":{"type":"array","items":{"type":"string"},"title":"The email address of the attendee you wish to add","description":"The email address of the attendee you wish to add."}},"required":["attendeesEmail"],"title":"Information required to add attendees","additionalProperties":false}},"additionalProperties":false,"required":["calendarId","eventId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/calendar"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to add attendees","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true},"htmlLink":{"type":"string","format":"iri","nullable":true},"color":{"type":"string","nullable":true},"createdDate":{"type":"string","nullable":true},"updatedDate":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"organizer":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"creator":{"type":"object","properties":{"id":{"type":"string","nullable":true},"displayName":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"self":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"startDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"endDate":{"type":"object","properties":{"dateTime":{"type":"string","nullable":true},"timeZone":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"recurrence":{"type":"array","items":{"type":"string"},"nullable":true},"transparency":{"type":"string","nullable":true},"guestsCanModify":{"type":"boolean","nullable":true},"reminders":{"type":"object","properties":{"useDefault":{"type":"boolean","title":"Whether to default notification","description":"Whether to default notification."},"overrides":{"type":"array","items":{"type":"object","properties":{"method":{"type":"string","nullable":true},"minutes":{"type":"number","nullable":true}},"required":[],"title":"Notification settings information","additionalProperties":false},"title":"Notification settings information","description":"Here is the notification settings information."}},"required":[],"additionalProperties":false,"nullable":true},"attendees":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","nullable":true},"organizer":{"type":"boolean","nullable":true},"self":{"type":"boolean","nullable":true},"responseStatus":{"type":"string","nullable":true}},"required":[],"title":"Attendee Information","additionalProperties":false},"nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"fileUrl":{"type":"string","format":"iri","nullable":true},"title":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"iconLink":{"type":"string","format":"iri","nullable":true},"fileId":{"type":"string","nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true},"hangoutLink":{"type":"string","nullable":true},"visibility":{"type":"string","nullable":true}},"required":[],"title":"Google Calendar Event Information","additionalProperties":false},"description":"Add attendees to a Google Calendar event.\n\nAdd attendees to an event","tags":["Google Calendar"]},{"method":"patch","path":"/connector/google-drive/get/folders","name":"connector_google_drive_get_folders_folderList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"name":{"type":"string","nullable":true}},"required":[],"additionalProperties":false},"title":"Google Drive Folder Data","description":"List of folder data in Google Drive."}},"required":["data"],"title":"Folder list information in Google Drive","additionalProperties":false},"description":"Get a list of Google Drive folders.\n\nGet a list of folders in Google Drive","tags":["Google Drive"]},{"method":"patch","path":"/connector/google-drive/get/files","name":"connector_google_drive_get_files_fileList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google Drive Folder","description":"Folder to load files from"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information for loading a list of files in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google Drive Folder","description":"Folder to load files from"}},"required":[],"title":"Information for loading a list of files in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information for loading a list of files in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"name":{"type":"string","nullable":true},"webContentLink":{"type":"string","format":"iri","nullable":true}},"required":[],"additionalProperties":false},"title":"Google Drive File Data","description":"List of file data in Google Drive."}},"required":["data"],"title":"File list information in Google Drive","additionalProperties":false},"description":"Get a list of Google Drive files.\n\nGet a list of files in Google Drive","tags":["Google Drive"]},{"method":"post","path":"/connector/google-drive/folder","name":"connector_google_drive_folder_createFolder","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive folder name","description":"Drive folder name to be created."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["name","secretKey"],"title":"Information required to create a Google Drive folder","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive folder name","description":"Drive folder name to be created."}},"required":["name"],"title":"Information required to create a Google Drive folder","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create a Google Drive folder","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Generated drive id","description":"Generated drive folder id."}},"required":["id"],"title":"Google Drive Folder Creation Results","additionalProperties":false},"description":"Create a Google Drive folder.\n\nCreate a new folder in Google Drive","tags":["Google Drive"]},{"method":"post","path":"/connector/google-drive/file","name":"connector_google_drive_file_createFile","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive file name","description":"File name to be created in drive."},"folderIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"}},"minItems":1,"title":"Google drive folder ids","description":"A list of folder ids that will contain the files to be created in the drive."},"fileUrl":{"type":"string","format":"iri","title":"fileToUpload"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["name","folderIds","fileUrl","secretKey"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"name":{"type":"string","title":"Google drive file name","description":"File name to be created in drive."},"folderIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"}},"minItems":1,"title":"Google drive folder ids","description":"A list of folder ids that will contain the files to be created in the drive."},"fileUrl":{"type":"string","format":"iri","title":"fileToUpload"}},"required":["name","folderIds","fileUrl"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create a file in Google Drive","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Generated drive file id","description":"Generated drive file id."}},"required":["id"],"title":"Result of creating a file in Google Drive","additionalProperties":false},"description":"Create a Google Drive file.\n\nCreate a new file in Google Drive","tags":["Google Drive"]},{"method":"delete","path":"/connector/google-drive/file/{id}","name":"connector_google_drive_file_deleteFile","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" The unique ID of the file to be deleted"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" The unique ID of the file to be deleted"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete a Google Drive file.\n\nDelete a file in Google Drive","tags":["Google Drive"]},{"method":"delete","path":"/connector/google-drive/folder/{id}","name":"connector_google_drive_folder_deleteFolder","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" The unique ID of the folder to be deleted"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" The unique ID of the folder to be deleted"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete a Google Drive folder.\n\nDelete a folder in Google Drive","tags":["Google Drive"]},{"method":"post","path":"/connector/google-drive/permission","name":"connector_google_drive_permission","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value:id, label:name}"},"title":"Google drive file id","description":"The drive file id to grant access to."},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google drive folder id","description":"Drive folder id to grant access to."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to whom you wish to grant access","description":"The email address of the user to whom you wish to grant access to Google Drive.\nRequired only when the type is a user type."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"]},"type":{"type":"string","enum":["group","user","domain","anyone"]}},"required":["role","type"],"title":"Access Rights Information","additionalProperties":false},"title":"Here is a list of emails to make accessible and permissions to grant","description":"Here is a list of emails to make accessible and permissions to grant."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["permissions","secretKey"],"title":"Information required for Google Drive access permission","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/files","jmesPath":"data[].{value:id, label:name}"},"title":"Google drive file id","description":"The drive file id to grant access to."},"folderId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-drive/get/folders","jmesPath":"data[].{value:id, label:name}"},"title":"Google drive folder id","description":"Drive folder id to grant access to."},"permissions":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string","format":"email","title":"The email address of the user to whom you wish to grant access","description":"The email address of the user to whom you wish to grant access to Google Drive.\nRequired only when the type is a user type."},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"]},"type":{"type":"string","enum":["group","user","domain","anyone"]}},"required":["role","type"],"title":"Access Rights Information","additionalProperties":false},"title":"Here is a list of emails to make accessible and permissions to grant","description":"Here is a list of emails to make accessible and permissions to grant."}},"required":["permissions"],"title":"Information required for Google Drive access permission","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required for Google Drive access permission","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Grant Google Drive permission.\n\nGrants permission to access a file or folder","tags":["Google Drive"]},{"method":"patch","path":"/connector/google-drive/get/file/{id}","name":"connector_google_drive_get_file_readFile","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" Unique ID of the file"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/google-drive/get/files","jmesPath":"data[].{value: id || '', label: name || ''}"},"description":" Unique ID of the file"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://www.googleapis.com/auth/drive.file"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"userPermission":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["group","user","domain","anyone"]},"role":{"type":"string","enum":["owner","writer","commenter","reader","organizer","fileOrganizer"]},"pendingOwner":{"type":"boolean","title":"pendingOwner"}},"required":["id","type","role","pendingOwner"],"title":"userPermission","additionalProperties":false},"fileExtension":{"type":"string","title":"fileExtension"},"ownerNames":{"type":"array","items":{"type":"string"},"title":"ownerNames"},"lastModifyingUserName":{"type":"string","title":"lastModifyingUserName"},"editable":{"type":"boolean","title":"editable"},"writersCanShare":{"type":"boolean","title":"writersCanShare"},"mimeType":{"type":"string","title":"mimeType"},"parents":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id: string;"},"isRoot":{"type":"boolean","title":"isRoot"}},"required":["id","isRoot"],"additionalProperties":false},"title":"parents"},"thumbnailLink":{"type":"string","format":"iri","title":"thumbnailLink"},"appDataContents":{"type":"boolean","title":"appDataContents"},"shared":{"type":"boolean","title":"shared"},"lastModifyingUser":{"type":"object","properties":{"displayName":{"type":"string","title":"displayName"},"isAuthenticatedUser":{"type":"boolean","title":"isAuthenticatedUser"},"permissionId":{"type":"string","title":"permissionId"},"emailAddress":{"type":"string","format":"email","title":"emailAddress"},"picture":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"picture","additionalProperties":false}},"required":["displayName","isAuthenticatedUser","permissionId","emailAddress","picture"],"additionalProperties":false},"owners":{"type":"array","items":{"type":"object","properties":{"displayName":{"type":"string","title":"displayName"},"isAuthenticatedUser":{"type":"boolean","title":"isAuthenticatedUser"},"permissionId":{"type":"string","title":"permissionId"},"emailAddress":{"type":"string","format":"email","title":"emailAddress"},"picture":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"picture","additionalProperties":false}},"required":["displayName","isAuthenticatedUser","permissionId","emailAddress","picture"],"additionalProperties":false},"title":"owners"},"copyable":{"type":"boolean","title":"copyable"},"alternateLink":{"type":"string","format":"iri","title":"alternateLink\nA link to view the file in Google Drive's preview mode."},"embedLink":{"type":"string","format":"iri","title":"embedLink\nA link to embed the file in a webpage via an iframe."},"webContentLink":{"type":"string","format":"iri","nullable":true},"fileSize":{"type":"string","title":"fileSize"},"copyRequiresWriterPermission":{"type":"boolean","title":"copyRequiresWriterPermission"},"spaces":{"type":"array","items":{"type":"string"},"title":"spaces"},"id":{"type":"string","title":"id"},"title":{"type":"string","title":"title(filename)"},"labels":{"type":"object","properties":{"viewed":{"type":"boolean","title":"viewed"},"restricted":{"type":"boolean","title":"restricted"},"starred":{"type":"boolean","title":"starred"},"hidden":{"type":"boolean","title":"hidden"},"trashed":{"type":"boolean","title":"trashed"}},"required":["viewed","restricted","starred","hidden","trashed"],"title":"labels","additionalProperties":false},"explicitlyTrashed":{"type":"boolean","title":"explicitlyTrashed"},"createdDate":{"type":"string","format":"date-time","title":"createdDate"},"modifiedDate":{"type":"string","format":"date-time","title":"modifiedDate"},"modifiedByMeDate":{"type":"string","format":"date-time","title":"modifiedByMeDate"},"lastViewedByMeDate":{"type":"string","format":"date-time","title":"lastViewedByMeDate"},"markedViewedByMeDate":{"type":"string","format":"date-time","title":"markedViewedByMeDate"},"quotaBytesUsed":{"type":"string","title":"quotaBytesUsed"},"version":{"type":"string","title":"version"},"originalFilename":{"type":"string","title":"originalFilename"},"capabilities":{"type":"object","properties":{"canEdit":{"type":"boolean","title":"canEdit"},"canCopy":{"type":"boolean","title":"canCopy"}},"required":["canEdit","canCopy"],"title":"capabilities","additionalProperties":false}},"required":["userPermission","ownerNames","lastModifyingUserName","editable","writersCanShare","mimeType","parents","appDataContents","shared","lastModifyingUser","owners","copyable","alternateLink","embedLink","copyRequiresWriterPermission","spaces","id","title","labels","explicitlyTrashed","createdDate","modifiedDate","quotaBytesUsed","version","capabilities"],"additionalProperties":false},"description":"Read text from a Google Drive file.\n\nRead text from a file","tags":["Google Drive"]},{"method":"post","path":"/connector/gmail/send","name":"connector_gmail_send","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"Recipient's email address","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email subject","description":"Subject of the email to be sent."},"body":{"type":"string","title":"Email body.</a>","description":"The body of the email to be sent. It must be written in html. Otherwise, the body may not be displayed properly. Please apply the CSS format applicable to gmail. Please write the html length so that it is not too long. If it is too long, it may not be sent. If there is a link or url <a>, be sure to use the title attribute of the html tag to provide a link."},"cc":{"type":"array","items":{"type":"string"},"title":"Email address of the person to be referenced","description":"Email address of the person to be referenced."},"Bcc":{"type":"array","items":{"type":"string"},"title":"Bcc email address","description":"Bcc email address."},"files":{"type":"array","items":{"type":"object","properties":{"filename":{"type":"string","title":"filename"},"fileUrl":{"type":"string","format":"iri","title":"file uri"}},"required":["filename","fileUrl"],"additionalProperties":false},"title":"files"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["to","subject","body","secretKey"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"Recipient's email address","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email subject","description":"Subject of the email to be sent."},"body":{"type":"string","title":"Email body.</a>","description":"The body of the email to be sent. It must be written in html. Otherwise, the body may not be displayed properly. Please apply the CSS format applicable to gmail. Please write the html length so that it is not too long. If it is too long, it may not be sent. If there is a link or url <a>, be sure to use the title attribute of the html tag to provide a link."},"cc":{"type":"array","items":{"type":"string"},"title":"Email address of the person to be referenced","description":"Email address of the person to be referenced."},"Bcc":{"type":"array","items":{"type":"string"},"title":"Bcc email address","description":"Bcc email address."},"files":{"type":"array","items":{"type":"object","properties":{"filename":{"type":"string","title":"filename"},"fileUrl":{"type":"string","format":"iri","title":"file uri"}},"required":["filename","fileUrl"],"additionalProperties":false},"title":"files"}},"required":["to","subject","body"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the sent email","description":"The ID of the sent email."}},"required":["id"],"title":"Mail transmission result","additionalProperties":false},"description":"GMAIL Send.\n\nSending mail\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can use the HTML format.\n\nIf you want to attach a file, you must specify the name of the file and the address at which it is stored.\nThe saved file is read as a GET request inside the function, encoded, and processed.","tags":["Gmail"]},{"method":"post","path":"/connector/gmail/draft","name":"connector_gmail_draft","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"Recipient's email address","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email subject","description":"Subject of the email to be sent."},"body":{"type":"string","title":"Email body.</a>","description":"The body of the email to be sent. It must be written in html. Otherwise, the body may not be displayed properly. Please apply the CSS format applicable to gmail. Please write the html length so that it is not too long. If it is too long, it may not be sent. If there is a link or url <a>, be sure to use the title attribute of the html tag to provide a link."},"cc":{"type":"array","items":{"type":"string"},"title":"Email address of the person to be referenced","description":"Email address of the person to be referenced."},"Bcc":{"type":"array","items":{"type":"string"},"title":"Bcc email address","description":"Bcc email address."},"files":{"type":"array","items":{"type":"object","properties":{"filename":{"type":"string","title":"filename"},"fileUrl":{"type":"string","format":"iri","title":"file uri"}},"required":["filename","fileUrl"],"additionalProperties":false},"title":"files"},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["to","subject","body","secretKey"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"to":{"type":"array","items":{"type":"string"},"title":"Recipient's email address","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email subject","description":"Subject of the email to be sent."},"body":{"type":"string","title":"Email body.</a>","description":"The body of the email to be sent. It must be written in html. Otherwise, the body may not be displayed properly. Please apply the CSS format applicable to gmail. Please write the html length so that it is not too long. If it is too long, it may not be sent. If there is a link or url <a>, be sure to use the title attribute of the html tag to provide a link."},"cc":{"type":"array","items":{"type":"string"},"title":"Email address of the person to be referenced","description":"Email address of the person to be referenced."},"Bcc":{"type":"array","items":{"type":"string"},"title":"Bcc email address","description":"Bcc email address."},"files":{"type":"array","items":{"type":"object","properties":{"filename":{"type":"string","title":"filename"},"fileUrl":{"type":"string","format":"iri","title":"file uri"}},"required":["filename","fileUrl"],"additionalProperties":false},"title":"files"}},"required":["to","subject","body"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to send email","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Create GMAIL Draft.\n\nCreate a mail draft\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can use the html format.\n\nIf you want to attach a file, you must specify the name of the file and the address at which it is stored.\nThe saved file is read as a GET request inside the function, encoded, and processed.","tags":["Gmail"]},{"method":"post","path":"/connector/gmail/reply/{id}","name":"connector_gmail_reply","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"replyText":{"type":"string","title":"Phrase to reply","description":"Phrase to reply."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["replyText","secretKey"],"title":"Information required to reply to email","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"replyText":{"type":"string","title":"Phrase to reply","description":"Phrase to reply."}},"required":["replyText"],"title":"Information required to reply to email","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to reply to email","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the sent email","description":"The ID of the sent email."}},"required":["id"],"title":"Mail transmission result","additionalProperties":false},"description":"GMAIL Reply.\n\nReply to received email\n\nGmail is a free web-based email service provided by Google.\n\nThis connector is for sending emails,\nand if you send it as simple text, the sentences will be displayed as one long line, so you need to insert a line break character.\nThe current format uses `text/html; charset=utf-8` as content-type.\nIn some cases, you can also use the HTML format.","tags":["Gmail"]},{"method":"patch","path":"/connector/gmail/get/{id}","name":"connector_gmail_get_findEmail","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"Unique ID of the email","description":" Unique ID of the email."},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"Unique ID of the email","description":" Unique ID of the email."}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","nullable":true},"labelIds":{"type":"array","items":{"type":"string"},"nullable":true},"from":{"type":"string","nullable":true},"subject":{"type":"string","nullable":true},"body":{"type":"string","nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"partId":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"filename":{"type":"string","nullable":true},"headers":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"value":{"type":"string","nullable":true}},"required":[],"title":"Attachment file header information","additionalProperties":false},"nullable":true},"body":{"type":"object","properties":{"attachmentId":{"type":"string","nullable":true},"size":{"type":"integer","nullable":true}},"required":[],"additionalProperties":false,"nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true}},"required":[],"title":"Email search results","additionalProperties":false},"description":"Get GMAIL information.\n\nGet information about a mail\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"patch","path":"/connector/gmail/read-list","name":"connector_gmail_read_list_findEmails","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"from":{"type":"string","title":"The email of the sender","description":"The email address of the sender of the email."},"to":{"type":"string","title":"The email address of the recipient","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email Subject","description":"Email Subject."},"after":{"type":"string","title":"After a specific date","description":"Returns only emails after a given date."},"before":{"type":"string","title":"Before a specific date","description":"Returns only emails before a given date."},"label":{"type":"string","title":"Label assigned to the email","description":"Label assigned to the email."},"maxResults":{"type":"number","maximum":500,"minimum":1,"title":"Maximum number of returned mails","description":"Number of returned mails."},"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels to filter by","description":"A list of labels to return only emails with labels that all match the specified label ID."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to search email lists","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"from":{"type":"string","title":"The email of the sender","description":"The email address of the sender of the email."},"to":{"type":"string","title":"The email address of the recipient","description":"The email address of the recipient."},"subject":{"type":"string","title":"Email Subject","description":"Email Subject."},"after":{"type":"string","title":"After a specific date","description":"Returns only emails after a given date."},"before":{"type":"string","title":"Before a specific date","description":"Returns only emails before a given date."},"label":{"type":"string","title":"Label assigned to the email","description":"Label assigned to the email."},"maxResults":{"type":"number","maximum":500,"minimum":1,"title":"Maximum number of returned mails","description":"Number of returned mails."},"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels to filter by","description":"A list of labels to return only emails with labels that all match the specified label ID."}},"required":[],"title":"Information needed to search email lists","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to search email lists","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","nullable":true},"labelIds":{"type":"array","items":{"type":"string"},"nullable":true},"from":{"type":"string","nullable":true},"subject":{"type":"string","nullable":true},"body":{"type":"string","nullable":true},"attachments":{"type":"array","items":{"type":"object","properties":{"partId":{"type":"string","nullable":true},"mimeType":{"type":"string","nullable":true},"filename":{"type":"string","nullable":true},"headers":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"value":{"type":"string","nullable":true}},"required":[],"title":"Attachment file header information","additionalProperties":false},"nullable":true},"body":{"type":"object","properties":{"attachmentId":{"type":"string","nullable":true},"size":{"type":"integer","nullable":true}},"required":[],"additionalProperties":false,"nullable":true}},"required":[],"title":"Attachment file information","additionalProperties":false},"nullable":true}},"required":[],"title":"Email search results","additionalProperties":false},"title":"gmail search data information","description":"Searched gmail data information."}},"required":["data"],"title":"Email list search results","additionalProperties":false},"description":"Get GMAIL list.\n\nGet mailing list\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"delete","path":"/connector/gmail/{id}/hardDelete","name":"connector_gmail_hardDelete","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"}}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete mail\n\nGmail is a free web-based email service provided by Google.\n\nThis function requires special attention because it permanently deletes mail instead of moving it to the trash.\n\nMost users will want to delete mail that is already in the trash.\n\nTherefore, if the user wants to delete it, it is better to guide them to move the mail to the trash, but if they still want to delete it, it is right to target the trash.","tags":["Gmail"]},{"method":"delete","path":"/connector/gmail/{id}","name":"connector_gmail_removeMail","parameters":[{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"description":" The unique ID of the email to be deleted"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"description":" The unique ID of the email to be deleted"}},"additionalProperties":false,"required":["id"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Authentication Information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete GMAIL.\n\nMove mail to trash\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"post","path":"/connector/gmail/label","name":"connector_gmail_label_createLabel","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"labelName":{"type":"string","title":"Label name","description":"The name of the label to create."},"labelListVisibility":{"type":"string","enum":["labelHide","labelShow","labelShowIfUnread"]},"messageListVisibility":{"type":"string","enum":["hide","show"]},"color":{"type":"object","properties":{"textColor":{"type":"string","title":"Label text color","description":"Label text color."},"backgroundColor":{"type":"string","title":"Label background color","description":"Label background color."}},"required":["textColor","backgroundColor"],"title":"label color","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["labelName","secretKey"],"title":"Information required to create a label","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"labelName":{"type":"string","title":"Label name","description":"The name of the label to create."},"labelListVisibility":{"type":"string","enum":["labelHide","labelShow","labelShowIfUnread"]},"messageListVisibility":{"type":"string","enum":["hide","show"]},"color":{"type":"object","properties":{"textColor":{"type":"string","title":"Label text color","description":"Label text color."},"backgroundColor":{"type":"string","title":"Label background color","description":"Label background color."}},"required":["textColor","backgroundColor"],"title":"label color","additionalProperties":false}},"required":["labelName"],"title":"Information required to create a label","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to create a label","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"Generated label id","description":"The id of the generated label."}},"required":["id"],"title":"Label Creation Result","additionalProperties":false},"description":"Create GMAIL label.\n\nCreate a label\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"post","path":"/connector/gmail/label/{mailId}","name":"connector_gmail_label_addLabelToMail","parameters":[{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"description":" Unique ID of the mail to assign a label to"},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels","description":"A list of labels to assign or remove."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["labelIds","secretKey"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["mailId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"description":" Unique ID of the mail to assign a label to"},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels","description":"A list of labels to assign or remove."}},"required":["labelIds"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["mailId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"GMAIL Label Assignment.\n\nAssign a label to a mail\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"delete","path":"/connector/gmail/label/{mailId}","name":"connector_gmail_label_removeLabelFromMail","parameters":[{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"Unique ID of the mail from which to remove labels","description":" Unique ID of the mail from which to remove labels."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels","description":"A list of labels to assign or remove."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["labelIds","secretKey"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["mailId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"mailId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/gmail/read-list","jmesPath":"data[].{value: id, label: subject || ''}"},"title":"Unique ID of the mail from which to remove labels","description":" Unique ID of the mail from which to remove labels."},"body":{"type":"object","properties":{"labelIds":{"type":"array","items":{"type":"string"},"title":"A list of labels","description":"A list of labels to assign or remove."}},"required":["labelIds"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["mailId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information required to assign a label","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Remove GMAIL labels.\n\nRemove labels assigned to mail\n\nGmail is a free web-based email service provided by Google.","tags":["Gmail"]},{"method":"delete","path":"/connector/gmail","name":"connector_gmail_deleteMailList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string"},"title":"Email IDs to delete","description":"Please select the emails to delete."},"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["ids","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string"},"title":"Email IDs to delete","description":"Please select the emails to delete."}},"required":["ids"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"google","x-wrtn-secret-scopes":["https://mail.google.com/"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete multiple mails\n\nGmail is a free web-based email service provided by Google.\nThis function requires special attention because it permanently deletes mail instead of moving it to the trash.\nMost users will want to delete mail that is already in the trash.\nTherefore, if the user wants to delete it, it is better to guide them to move the mail to the trash, but if they still want to delete it, it is right to target the trash.","tags":["Gmail"]},{"method":"post","path":"/connector/hancell/sheet","name":"connector_hancell_sheet_upsertSheet","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","title":"Sheet name","description":"If the sheet does not exist, it will be added, and if it does exist, it will be modified."},"cells":{"type":"object","properties":{},"required":[],"title":"Information contained in the cell","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}},"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["sheetName","cells","fileUrl"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sheetName":{"type":"string","title":"Sheet name","description":"If the sheet does not exist, it will be added, and if it does exist, it will be modified."},"cells":{"type":"object","properties":{},"required":[],"title":"Information contained in the cell","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}}},"required":["sheetName","cells"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["fileUrl"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"fileUrl":{"type":"string","title":"New Hansel File Link"}},"required":["fileUrl"],"additionalProperties":false},"description":"Modify Hansel.\n\nModify a Hansel sheet\n\nIf the sheet already exists, modify it, or add it if it did not exist before.","tags":["Hancel"]},{"method":"patch","path":"/connector/hancell/read","name":"connector_hancell_read","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["fileUrl"],"title":"Hansel reading conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileUrl":{"type":"string","format":"uri","contentMediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","title":"Excel file","description":"Excel file to read"}},"required":["fileUrl"],"title":"Hansel reading conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{},"required":[],"title":"Hansel Read Response","additionalProperties":{"type":"object","properties":{},"required":[],"title":"Information contained in the cell","additionalProperties":{"oneOf":[{"type":"string"},{"type":"number"}]}}},"description":"Read a Hansel file","tags":["Hancel"]},{"method":"patch","path":"/connector/kakao-map/search","name":"connector_kakao_map_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","x-wrtn-placeholder":"종로구 맛집","title":"Search Keyword","description":"Search Keyword\n\nThe simpler the search term, the better.\nIt is a good idea to search for a specific area name\nand the type you are looking for.\nFor example, it can be 'Seoul Cafe'.\nIf you search by composing only these clear words,\nyou will provide the search results\nthat are best suited to the keyword inside the Kakao server.\nIf adjectives or words decorating places, such as 'popular cafes',\nare included, the search quality may be lowered or nothing may be searched,\nso put the search word as plain as possible."},"page":{"type":"integer","minimum":1,"maximum":45,"default":1,"title":"Results page number"},"size":{"type":"integer","minimum":1,"maximum":15,"default":15,"title":"Number of documents per page"}},"required":["query"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","x-wrtn-placeholder":"종로구 맛집","title":"Search Keyword","description":"Search Keyword\n\nThe simpler the search term, the better.\nIt is a good idea to search for a specific area name\nand the type you are looking for.\nFor example, it can be 'Seoul Cafe'.\nIf you search by composing only these clear words,\nyou will provide the search results\nthat are best suited to the keyword inside the Kakao server.\nIf adjectives or words decorating places, such as 'popular cafes',\nare included, the search quality may be lowered or nothing may be searched,\nso put the search word as plain as possible."},"page":{"type":"integer","minimum":1,"maximum":45,"default":1,"title":"Results page number"},"size":{"type":"integer","minimum":1,"maximum":15,"default":15,"title":"Number of documents per page"}},"required":["query"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"documents":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Location ID"},"place_name":{"type":"string","title":"Place name, company name"},"category_name":{"type":"string","title":"Category Name"},"category_group_code":{"type":"string","enum":["MT1","CS2","PS3","SC4","AC5","PK6","OL7","SW8","BK9","CT1","AG2","PO3","AT4","AD5","FD6","CE7","HP8","PM9",""]},"category_group_name":{"type":"string","enum":["대형마트","편의점","어린이집,유치원","학교","학원","주차장","주유소, 충전소","지하철역","은행","문화시설","중개업소","공공기관","관광명소","숙박","음식점","카페","병원","약국",""]},"phone":{"type":"string","title":"phone number"},"address_name":{"type":"string","title":"Full street address"},"road_address_name":{"type":"string","title":"Full road name address"},"x":{"type":"string","title":"X coordinate value","description":"longitude (longitude) in case of latitude and longitude"},"y":{"type":"string","title":"Y coordinate value","description":"latitude in case of longitude and latitude"},"place_url":{"type":"string","format":"iri","title":"Location details page URL"},"distance":{"type":"string","title":"Distance to the center coordinate","description":"(only exists when x,y parameters are given) Unit meter"}},"required":["id","place_name","category_name","category_group_code","category_group_name","phone","address_name","road_address_name","x","y","place_url","distance"],"title":"Search Results","additionalProperties":false},"title":"Search Results List"},"meta":{"type":"object","properties":{"total_count":{"type":"integer","title":"Number of documents found for search term"},"pageable_count":{"type":"integer","maximum":45,"title":"Number of documents displayed at once"},"is_end":{"type":"boolean","title":"Whether the current page is the last page","description":"If the value is false, the page value can be increased for the next request to request the next page."},"same_name":{"type":"object","properties":{"keyword":{"type":"string","title":"Keyword excluding local information from query language","description":"If you search for 'Jungang-ro Restaurant', the value extracted from the part corresponding to 'Restaurant'"},"region":{"type":"array","items":{"type":"string"},"title":"List of regions recognized in the query","description":"If you search for 'Jungang-ro restaurant', the value extracted from the part corresponding to 'Jungang-ro'"},"selected_region":{"type":"string","title":"Local information used in search"}},"required":["keyword","region","selected_region"],"additionalProperties":false}},"required":["total_count","pageable_count","is_end"],"title":"meta information","additionalProperties":false}},"required":["documents","meta"],"title":"Search Results","additionalProperties":false},"description":"Kakao Map Search.\n\nSearch with Kakao Map\n\nIn addition to the place name company, category, and phone number,\nit also provides lot number and road name addresses in the Korean address system.\nIt can be used with public data or other address-based connectors.","tags":["Kakao Map"]},{"method":"post","path":"/connector/dall-e/generate","name":"connector_dall_e_generate_generateImage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"prompt","description":"Prompt to create an image"},"image_ratio":{"type":"string","enum":["square","landscape","portrait"]}},"required":["prompt","image_ratio"],"title":"Information for image creation","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"prompt":{"type":"string","title":"prompt","description":"Prompt to create an image"},"image_ratio":{"type":"string","enum":["square","landscape","portrait"]}},"required":["prompt","image_ratio"],"title":"Information for image creation","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"imgUrl":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Generated image Url","description":"Generated image url"}},"required":["imgUrl"],"title":"Image creation result","additionalProperties":false},"description":"dall-e-3 image generator node.\n\nGenerate an image using the dall-e-3 model","tags":["Dall-e"]},{"method":"patch","path":"/connector/google-search","name":"connector_google_search_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Google search.\n\nSearch Google for the search term you entered","tags":["Google Search"]},{"method":"patch","path":"/connector/wanted","name":"connector_wanted_searchForWanted","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Wanted job posting search.\n\nSearch for job postings on Wanted","tags":["Wanted"]},{"method":"patch","path":"/connector/incruit","name":"connector_incruit_searchForIncruit","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Search Incruit job postings.\n\nSearch for job postings on Incruit","tags":["Incruit"]},{"method":"patch","path":"/connector/saramin","name":"connector_saramin_searchForSaramin","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Search for Saramin job postings.\n\nSearch for job postings in Saramin","tags":["Saramin"]},{"method":"patch","path":"/connector/jumpit","name":"connector_jumpit_searchForJumpit","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Jumpfit job posting search.\n\nSearch for job postings on Jumpfit","tags":["Jumpit"]},{"method":"patch","path":"/connector/careely","name":"connector_careely_searchForCareerly","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"뤼튼"},"title":"Must-include keywords","description":"Set keywords that must be included in search results."},"orKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"스튜디오"},"title":"Good keywords to enter","description":"Set good keywords to enter the search results."},"notKeywords":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Set keywords that should not be included in search results."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["andKeywords","max_results"],"title":"Conditions for searching","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Search Results Title"},"link":{"type":"string","format":"iri","title":"Search Results Link"},"snippet":{"type":"string","title":"Search Results Summary"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Search Results thumbnail"}},"required":["title","link"],"title":"Search Results","additionalProperties":false}},"description":"Careerly Search.\n\nSearch for posts in Careerly","tags":["Careerly"]},{"method":"patch","path":"/connector/google-shopping/aladine","name":"connector_google_shopping_aladine","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Aladdin Search.\n\nSearch for products in Aladdin\nAladdin is a service that allows you to purchase used books.","tags":["Aladin"]},{"method":"patch","path":"/connector/google-shopping/ali-express","name":"connector_google_shopping_ali_express_aliExpress","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Search for AliExpress.\n\nSearch for products on AliExpress","tags":["AliExpress"]},{"method":"patch","path":"/connector/google-shopping/coupang","name":"connector_google_shopping_coupang","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Coupang Search.\n\nSearch for products on Coupang","tags":["Coupang"]},{"method":"patch","path":"/connector/google-shopping/eql","name":"connector_google_shopping_eql_hansumEQL","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"EQL search.\n\nSearch for products in EQL\nEQL is a service that allows you to purchase clothes or shoes.","tags":["EQL"]},{"method":"patch","path":"/connector/google-shopping/iherb","name":"connector_google_shopping_iherb","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"iHerb Search.\n\nSearch for products on iHerb\niHerb is a service that allows you to purchase Nutritional supplement.","tags":["iHerb"]},{"method":"patch","path":"/connector/google-shopping/kurly","name":"connector_google_shopping_kurly_Kurly","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Kurly Search.\n\nSearch for products on Kurly\nKurly is a service where you can purchase groceries.","tags":["Kurly"]},{"method":"patch","path":"/connector/google-shopping/oco","name":"connector_google_shopping_oco","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"OCO search.\n\nSearch for products in OCO\n\nOco is one of the Korean companies and is a brand that advocates a brand editing shop.","tags":["OCO"]},{"method":"patch","path":"/connector/google-shopping/olive-young","name":"connector_google_shopping_olive_young_oliveYoung","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Olive Young Search.\n\nSearch for products at Olive Young\nOlive Young is a service that allows you to purchase cosmetics.","tags":["Olive Young"]},{"method":"patch","path":"/connector/google-shopping/twenty-nine-centimeter","name":"twenty_nine_centimeter_twentyNineCentimeter","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"29cm search.\n\nSearch for products from 29cm\n29cm is a service that allows you to purchase clothes or shoes.","tags":["29CM"]},{"method":"patch","path":"/connector/google-shopping/uniqlo","name":"connector_google_shopping_uniqlo","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Uniqlo Search.\n\nSearch for products in Uniqlo\nUniqlo is a service that allows you to purchase clothes or shoes.","tags":["Uniqlo"]},{"method":"patch","path":"/connector/google-shopping/yes-twenty-four","name":"connector_google_shopping_yes_twenty_four_yes24","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"yes24 search.\n\nSearch for products on yes24\nyes24 is a service that allows you to purchase books.","tags":["yes24"]},{"method":"patch","path":"/connector/google-shopping/musinsa","name":"connector_google_shopping_musinsa","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","lang","max_results"],"title":"Product search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Product name"},"link":{"type":"string","format":"iri","enum":["#"]},"price":{"type":"string","title":"Product Price","description":"₩57,600 Format"},"source":{"type":"string","title":"Product Source"},"deliveryCost":{"type":"string","title":"Shipping fee"},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","title":"Product Image"},"rating":{"type":"number","title":"Product Rating"}},"required":["title","link","price","thumbnail"],"title":"Product search results","additionalProperties":false}},"description":"Musinsa Search.\n\nSearch for products in Musinsa\nMusinsa is a service that allows you to purchase clothes or shoes.","tags":["Musinsa"]},{"method":"patch","path":"/connector/arxiv-search","name":"connector_arxiv_search_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"num_results":{"type":"integer","x-wrtn-placeholder":"10","title":"Number of search results","description":"Sets how many search results to retrieve"},"from_date":{"type":"string","format":"date","title":"Start date for search results","description":"Set the start date for search results"},"to_date":{"type":"string","format":"date","title":"End date for the search results","description":"Set the end date for the search results"},"and_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"biology"},"title":"Must be included keywords","description":"Keywords that must be included in search results"},"or_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"ecosystem"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results"},"not_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"pollution"},"title":"Keywords that should not be included","description":"Keywords that should not be included in search results"}},"required":["and_keywords"],"title":"Search criteria","description":"Enter your search criteria\n\n------------------------------\n\nDescription of the current {@link IConnector.ISearchInput} type:\n\n> Enter your search criteria","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"num_results":{"type":"integer","x-wrtn-placeholder":"10","title":"Number of search results","description":"Sets how many search results to retrieve"},"from_date":{"type":"string","format":"date","title":"Start date for search results","description":"Set the start date for search results"},"to_date":{"type":"string","format":"date","title":"End date for the search results","description":"Set the end date for the search results"},"and_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"biology"},"title":"Must be included keywords","description":"Keywords that must be included in search results"},"or_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"ecosystem"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results"},"not_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"pollution"},"title":"Keywords that should not be included","description":"Keywords that should not be included in search results"}},"required":["and_keywords"],"title":"Search criteria","description":"Enter your search criteria\n\n------------------------------\n\nDescription of the current {@link IConnector.ISearchInput} type:\n\n> Enter your search criteria","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"references":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"The title of the output"},"type":{"type":"string","enum":["video","image","news_article","research_paper"]},"source":{"type":"string","enum":["youtube","facebook","instagram","google_search","arxiv","google_news"]},"url":{"type":"string","format":"iri","title":"URL address","description":"The URL address of the output"},"contents":{"type":"string","title":"Output Content","description":"Here is the content of the output"},"image":{"type":"string","format":"iri","title":"Output Image URL","description":"The URL address of the image of the output"},"statistics":{"type":"object","properties":{"view_count":{"type":"integer"},"like_count":{"type":"integer"},"rank":{"type":"integer"}},"required":[],"additionalProperties":false}},"required":["title","type","source","url"],"additionalProperties":false},"title":"Output Information","description":"Contains output information for search results"}},"required":["references"],"title":"Search Results","additionalProperties":false},"description":"Archive Paper Search.\n\nSearches the archive for papers based on the search criteria you entered","tags":["Arxiv"]},{"method":"patch","path":"/connector/daum-blog","name":"connector_daum_blog_searchBlog","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Set keywords that must be included in the following search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Good keywords to enter","description":"Set good keywords to enter the following search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Set keywords that should not be included in the following search results."},"sort":{"type":"string","enum":["accuracy","recency"]},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"Results page number","description":"The number of the results page."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"The number of documents to be displayed on one page","description":"The number of documents to be displayed on one page."}},"required":["andKeywords"],"title":"Information needed for the next search","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Set keywords that must be included in the following search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Good keywords to enter","description":"Set good keywords to enter the following search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Set keywords that should not be included in the following search results."},"sort":{"type":"string","enum":["accuracy","recency"]},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"Results page number","description":"The number of the results page."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"The number of documents to be displayed on one page","description":"The number of documents to be displayed on one page."}},"required":["andKeywords"],"title":"Information needed for the next search","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"meta":{"type":"object","properties":{"totalCount":{"type":"number","title":"Number of searched contents","description":"Total number of documents searched."},"pageableCount":{"type":"number","title":"The number of content that can be exposed among the searched documents","description":"The number of content that can be exposed among the searched documents."},"isEnd":{"type":"boolean","title":"Whether the current page is the last page","description":"If the value is false, you can request the next page by incrementing page."}},"required":["totalCount","pageableCount","isEnd"],"title":"meta","additionalProperties":false},"documents":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the document","description":"The title of the document searched."},"contents":{"type":"string","title":"Part of the text of the document","description":"This is part of the text of the document that was searched."},"url":{"type":"string","title":"Document URL","description":"The URL of the document being searched."},"blogName":{"type":"string","title":"The name of the blog","description":"The name of the blog searched."},"thumbnail":{"type":"string","contentMediaType":"image/*","title":"Thumbnail image URL","description":"Representative preview image URL extracted from the search system."},"dateTime":{"type":"string","title":"Document Creation Time","description":"The time the document was created."}},"required":["title","contents","url","blogName","thumbnail","dateTime"],"additionalProperties":false},"title":"documents"}},"required":["meta","documents"],"title":"Next blog search results","additionalProperties":false},"description":"Search the following blog content","tags":["Daum Blog"]},{"method":"patch","path":"/connector/daum-cafe","name":"connector_daum_cafe_searchCafe","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Set keywords that must be included in the following search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Good keywords to enter","description":"Set good keywords to enter the following search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Set keywords that should not be included in the following search results."},"sort":{"type":"string","enum":["accuracy","recency"]},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"Results page number","description":"The number of the results page."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"The number of documents to be displayed on one page","description":"The number of documents to be displayed on one page."}},"required":["andKeywords"],"title":"Information needed for the next search","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Set keywords that must be included in the following search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Good keywords to enter","description":"Set good keywords to enter the following search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Set keywords that should not be included in the following search results."},"sort":{"type":"string","enum":["accuracy","recency"]},"page":{"type":"number","minimum":1,"maximum":50,"default":1,"title":"Results page number","description":"The number of the results page."},"size":{"type":"number","minimum":1,"maximum":50,"default":10,"title":"The number of documents to be displayed on one page","description":"The number of documents to be displayed on one page."}},"required":["andKeywords"],"title":"Information needed for the next search","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"meta":{"type":"object","properties":{"totalCount":{"type":"number","title":"Number of searched cafe contents","description":"Total number of searched cafes."},"pageableCount":{"type":"number","title":"The number of contents that can be exposed among the searched cafe contents","description":"The number of contents that can be exposed among the searched cafe contents."},"isEnd":{"type":"boolean","title":"Whether the current page is the last page","description":"If the value is false, you can request the next page by incrementing page."}},"required":["totalCount","pageableCount","isEnd"],"title":"metadata","additionalProperties":false},"documents":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the document","description":"The title of the document searched."},"contents":{"type":"string","title":"Part of the text of the document","description":"This is part of the text of the document that was searched."},"url":{"type":"string","title":"Document URL","description":"The URL of the document being searched."},"cafeName":{"type":"string","title":"Cafe Name","description":"The following cafe name is searched."},"thumbnail":{"type":"string","contentMediaType":"image/*","title":"Thumbnail image URL","description":"Representative preview image URL extracted from the search system."},"dateTime":{"type":"string","title":"Document Creation Time","description":"The time the document was created."}},"required":["title","contents","url","cafeName","thumbnail","dateTime"],"additionalProperties":false},"title":"documents"}},"required":["meta","documents"],"title":"Next Cafe Search Results","additionalProperties":false},"description":"Search for the following cafe content","tags":["Daum"]},{"method":"patch","path":"/connector/naver-blog","name":"connector_naver_blog_blogList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"lastBuildDate":{"type":"string","title":"The time the search results were generated","description":"The time the search results were generated."},"total":{"type":"number","title":"Total number of search results","description":"Total number of search results."},"start":{"type":"number","title":"The starting position of the search","description":"The starting position of the search results."},"display":{"type":"number","title":"The number of search results to display at one time","description":"The number of search results to display at one time."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Post title","description":"Title of Naver blog post."},"link":{"type":"string","title":"Post link","description":"Link to Naver blog post."},"description":{"type":"string","title":"Summary of post","description":"Summary of Naver blog post."},"bloggername":{"type":"string","title":"The name of the blog that contains the blog post","description":"The name of the blog that contains the Naver blog post."},"bloggerlink":{"type":"string","title":"Address of the blog that contains the blog post","description":"Address of the blog that contains the Naver blog post."},"postdate":{"type":"string","title":"The date the blog post was created","description":"The date the Naver blog post was created."}},"required":["title","link","description","bloggername","bloggerlink","postdate"],"title":"Naver blog search data","additionalProperties":false},"title":"Individual search results","description":"Individual search results."}},"required":["lastBuildDate","total","start","display","items"],"title":"Naver blog search results","additionalProperties":false},"description":"Naver blog search.\n\nSearch Naver blog content","tags":["Naver Blog"]},{"method":"patch","path":"/connector/naver-cafe","name":"connector_naver_cafe_cafeList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"data":{"type":"object","properties":{"lastBuildDate":{"type":"string","title":"The time the search results were generated","description":"The time the search results were generated."},"total":{"type":"number","title":"Total number of search results","description":"Total number of search results."},"start":{"type":"number","title":"The starting position of the search","description":"The starting position of the search results."},"display":{"type":"number","title":"The number of search results to display at one time","description":"The number of search results to display at one time."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Post title","description":"Title of Naver Cafe post."},"link":{"type":"string","title":"Post link","description":"Link to Naver Cafe post."},"description":{"type":"string","title":"Summary of post","description":"Summary of Naver Cafe post."},"cafename":{"type":"string","title":"The name of the cafe where the post is located","description":"The name of the cafe where the Naver Cafe post is located."},"cafeurl":{"type":"string","title":"Link to the cafe where the post is located","description":"Link to the cafe where the Naver Cafe post is located."}},"required":["title","link","description","cafename","cafeurl"],"title":"Naver Cafe Search Data","additionalProperties":false},"title":"Individual search results","description":"Individual search results."}},"required":["lastBuildDate","total","start","display","items"],"title":"Naver Cafe search result data","description":"Naver Cafe search result data.","additionalProperties":false}},"required":["data"],"title":"Naver Cafe Search Results","additionalProperties":false},"description":"Naver Cafe search.\n\nSearch Naver Cafe contents","tags":["Naver"]},{"method":"patch","path":"/connector/naver-news","name":"connector_naver_news_newsList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeywords":{"type":"string","x-wrtn-placeholder":"뤼튼","title":"Must-include keywords","description":"Keywords that must be included in search results."},"orKeywords":{"type":"string","x-wrtn-placeholder":"스튜디오","title":"Keywords that would be good to include","description":"Keywords that you would like to see included in the search results."},"notKeywords":{"type":"string","x-wrtn-placeholder":"폭력","title":"Keywords that should not be included","description":"Keywords that should not be included in search results."},"display":{"type":"number","minimum":1,"maximum":100,"default":10,"x-wrtn-placeholder":"10","title":"Number to search","description":"Set how many search results to retrieve.\nMinimum 1, maximum 100, default 10."},"sort":{"type":"string","enum":["sim","date"]}},"required":["andKeywords"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"lastBuildDate":{"type":"string","title":"The time the search results were generated","description":"The time the search results were generated."},"total":{"type":"number","title":"Total number of search results","description":"Total number of search results."},"start":{"type":"number","title":"The starting position of the search","description":"The starting position of the search results."},"display":{"type":"number","title":"The number of search results to display at one time","description":"The number of search results to display at one time."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"News Title."},"link":{"type":"string","format":"iri","title":"Naver News URL","description":"Naver News URL."},"originallink":{"type":"string","format":"iri","title":"Original URL","description":"Original URL of news article."},"description":{"type":"string","title":"Summary of the news article</b>","description":"The part that matches the search term <b>is wrapped in tags."},"pubDate":{"type":"string","title":"News article publication time","description":"The time the news article was provided to Naver."}},"required":["title","link","originallink","description","pubDate"],"title":"Naver News Search Data","additionalProperties":false},"title":"Individual search results","description":"Individual search results."}},"required":["lastBuildDate","total","start","display","items"],"additionalProperties":false},"description":"Search Naver News","tags":["Naver"]},{"method":"patch","path":"/connector/youtube-search","name":"connector_youtube_search_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"and_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"뤼튼"},"minItems":1,"title":"Must be included keywords","description":"Keywords that must be included in search results."},"or_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"스튜디오"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results."},"not_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Keywords that should not be included in search results."}},"required":["and_keywords"],"title":"YouTube search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"and_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"뤼튼"},"minItems":1,"title":"Must be included keywords","description":"Keywords that must be included in search results."},"or_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"스튜디오"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results."},"not_keywords":{"type":"array","items":{"type":"string","minLength":1,"x-wrtn-placeholder":"폭력"},"title":"Keywords that should not be included","description":"Keywords that should not be included in search results."}},"required":["and_keywords"],"title":"YouTube search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"YouTube video title","description":"Title of the YouTube video that appears in the search results."},"link":{"type":"string","format":"iri","title":"YouTube video link","description":"Links to YouTube videos that appear in search results."},"thumbnail":{"type":"string","format":"iri","title":"Thumbnail image for YouTube videos","description":"Thumbnail image for YouTube videos."},"view_count":{"type":"integer","title":"YouTube video views","description":"YouTube video views."},"channel_name":{"type":"string","title":"Channel name","description":"Channel name of YouTube videos that appear in search results."},"channel_link":{"type":"string","format":"iri","title":"Channel link","description":"Link to the YouTube channel that appears in the search results."},"published_date":{"type":"string","title":"YouTube video published date","description":"Date the YouTube video was published.\nex) 1 year ago"}},"required":["title","link","thumbnail","view_count","channel_name","channel_link","published_date"],"title":"YouTube search results","additionalProperties":false}},"description":"YouTube video search.\n\nGet YouTube video search results\n\nResults include video titles and URLs, as most users likely want to watch the videos.\nUse the published_date field to filter videos by the desired period (e.g., exclude \"1 year ago\").\nIdeal for summarizing, analyzing, or extracting keywords using the /transcript endpoint.\nExtract URLs from video data and input them into the /transcript endpoint.\nUse the transcripts for tasks like summarization, content analysis, or keyword extraction.\nExample Use Cases:\n Product Reviews: Extract details (e.g., product names, pros, cons) from review videos.\n Tutorials: Create text-based guides or step-by-step instructions from instructional videos.","tags":["Youtube"]},{"method":"patch","path":"/connector/google-scholar","name":"connector_google_scholar_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"andKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"Keywords that must be included","description":"Keywords that must be included in search results."},"orKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results."},"notKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"Keywords to exclude","description":"Keywords that should not be included in search results."},"max_results":{"type":"integer","x-wrtn-placeholder":"10","title":"Number of search results","description":"Sets how many search results to retrieve."}},"required":["andKeyword","max_results"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"andKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"biology"},"title":"Keywords that must be included","description":"Keywords that must be included in search results."},"orKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"ecosystem"},"title":"Keywords that you would like to see included","description":"Keywords that you would like to see included in your search results."},"notKeyword":{"type":"array","items":{"type":"string","x-wrtn-placeholder":"pollution"},"title":"Keywords to exclude","description":"Keywords that should not be included in search results."},"max_results":{"type":"integer","x-wrtn-placeholder":"10","title":"Number of search results","description":"Sets how many search results to retrieve."}},"required":["andKeyword","max_results"],"title":"Search Conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Unique id of search result data","description":"Unique id of search result data."},"title":{"type":"string","title":"Title of the paper searched","description":"This is the title of the paper searched."},"link":{"type":"string","format":"iri","nullable":true},"snippet":{"type":"string","title":"Snippet of the search results","description":"Here is a snippet of the search results."},"publication_info":{"type":"string","title":"Publication Summary Information","description":"Here is the publication summary information for the searched paper."},"resource":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Title of the reference material","description":"Title of the reference material."},"file_format":{"type":"string","title":"Reference file format","description":"This is the format of the reference file."},"link":{"type":"string","format":"iri","title":"Link to the reference material","description":"Here is a link to the reference material."}},"required":["title","link"],"title":"References","additionalProperties":false},"nullable":true},"citation_count":{"type":"integer","title":"Number of times cited","description":"The number of times the searched paper was cited."},"related_pages_link":{"type":"string","format":"iri","title":"Links to related academic materials","description":"Here are links to academic materials related to the searched paper."},"version_info":{"type":"object","properties":{"version":{"type":"integer","nullable":true},"link":{"type":"string","format":"iri","nullable":true}},"required":["version","link"],"title":"version","additionalProperties":false}},"required":["id","title","link","snippet","publication_info","resource","citation_count","related_pages_link","version_info"],"title":"Search Results","additionalProperties":false}},"description":"Search Google Scholar paper list.\n\nGet a list of papers in Google Scholar","tags":["Google Scholar"]},{"method":"patch","path":"/connector/csv/read","name":"connector_csv_read","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"file","description":"This is the Csv file to read."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"This is the CSV file delimiter to read."}},"required":["s3Url","delimiter"],"title":"Csv file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"This is the CSV file delimiter to read."}},"required":["delimiter"],"title":"Csv file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"file","description":"This is the Csv file to read."}},"required":["s3Url"],"title":"Csv file information","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"string"}},"title":"csv data list","description":"Read csv file data."}},"required":["data"],"title":"Csv file reading result","additionalProperties":false},"description":"Read CSV file contents","tags":["CSV"]},{"method":"post","path":"/connector/csv/write","name":"connector_csv_write","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fileName":{"type":"string","x-wrtn-placeholder":"example.csv","title":"File name","description":"The name of the Csv file to be created."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"The Csv file delimiter to be generated."},"values":{"type":"array","items":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"string"}},"title":"File data values","description":"These are the data values to be placed in the Csv file to be created."}},"required":["fileName","delimiter","values"],"title":"Information required to create a CSV file","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fileName":{"type":"string","x-wrtn-placeholder":"example.csv","title":"File name","description":"The name of the Csv file to be created."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"The Csv file delimiter to be generated."},"values":{"type":"array","items":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"string"}},"title":"File data values","description":"These are the data values to be placed in the Csv file to be created."}},"required":["fileName","delimiter","values"],"title":"Information required to create a CSV file","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"s3Url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"csv file","description":"This is the s3 url of the csv file that was created."}},"required":["s3Url"],"title":"Csv file creation result","additionalProperties":false},"description":"Create a CSV file","tags":["CSV"]},{"method":"post","path":"/connector/csv/csv-to-excel","name":"connector_csv_csv_to_excel_csvToExcel","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"file","description":"This is the file to convert from csv to excel."},"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"This is the file delimiter to convert from csv to excel."}},"required":["s3Url","delimiter"],"title":"Information needed to convert a Csv file to an Excel file","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"delimiter":{"type":"string","x-wrtn-placeholder":",","title":"delimiter","description":"This is the file delimiter to convert from csv to excel."}},"required":["delimiter"],"title":"Information needed to convert a Csv file to an Excel file","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"s3Url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"file","description":"This is the file to convert from csv to excel."}},"required":["s3Url"],"title":"Information needed to convert a Csv file to an Excel file","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"url":{"type":"string","format":"iri","contentMediaType":"text/csv","title":"s3 url","description":"Here is the s3 url of the converted excel file."}},"required":["url"],"title":"Csv file to Excel file conversion result","additionalProperties":false},"description":"Convert CSV file to Excel file.","tags":["CSV"]},{"method":"delete","path":"/connector/notion/page/block","name":"connector_notion_page_block_deleteBlock","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"block_id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["block_id","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"block_id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["block_id"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete a block\n\nSets a Block object, including page blocks,\nto archived: true using the ID specified. Note: in the Notion UI application, this moves the block to the \"Trash\" where it can still be accessed and restored.","tags":[]},{"method":"post","path":"/connector/notion/page/markdown","name":"connector_notion_page_markdown_appendBlocksByMarkdown","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["pageId","markdown","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["pageId","markdown"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["id","link"],"additionalProperties":false},{"type":"object","properties":{"name":{"type":"string","title":"name","description":"for example, APIResponseError"},"code":{"type":"string","title":"code","description":"for example, object_not_found"},"status":{"type":"number","title":"status","description":"for example, 404"},"body":{"type":"string","title":"serialized body","description":"for example, '{\"object\":\"error\",\"status\":404,\"code\":\"object_not_found\",\"message\":\"Could not find page with ID: 6f8304d2-de52-417d-a032-b340a421a8c1. Make sure the relevant pages and databases are shared with your integration.\",\"request_id\":\"3e773c7e-c703-40a8-9b13-635ad750c3a2\"}'"}},"required":["name","code","status","body"],"additionalProperties":false}]},"description":"Append block by markdown format\n\nYou can add blocks to the page immediately with only the markdown grammar.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/file","name":"connector_notion_page_file_createFile","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"file":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to upload."}},"required":["url"],"title":"external","additionalProperties":false},"name":{"type":"string","title":"filename"},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption for this file"}},"required":["external"],"title":"file","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["file","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"file":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to upload."}},"required":["url"],"title":"external","additionalProperties":false},"name":{"type":"string","title":"filename"},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption for this file"}},"required":["external"],"title":"file","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["file","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an file type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `file`.\n\nUploading a file exposes it to the Notion page as an icon in the file format, but there is no Preview.\nIf you want the internal elements to be seen as soon as you enter the page, it is better to create the image, pdf format for each format, and consider embed for other formats.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/embed","name":"connector_notion_page_embed_createEmbed","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"embed":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to embed."},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this embed"}},"required":["url"],"title":"embed","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["embed","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"embed":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to embed."},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this embed"}},"required":["url"],"title":"embed","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["embed","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an embed type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `embed`.\n\nThis is suitable when you want an internal element to be rendered immediately, such as an imprame within a page.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/bookmark","name":"connector_notion_page_bookmark_createBookmark","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"bookmark":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to bookmark."},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this bookmark"}},"required":["url"],"title":"bookmark","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["bookmark","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"bookmark":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url\n\nYou can enter the path of the file you want to bookmark."},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this bookmark"}},"required":["url"],"title":"bookmark","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["bookmark","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an bookmark type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `bookmark`.\n\nBookmarks are visually better and more organized because they have previews, images, and explanations than just saving url as text.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/image","name":"connector_notion_page_image_createImage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"image":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","pattern":".*\\.(bmp|gif|heic|jpe?g|png|svg|tiff?)(\\?.*)?","title":"url","description":"image file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'."}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this image"}},"required":["external"],"title":"image","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["image","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"image":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"uri","pattern":".*\\.(bmp|gif|heic|jpe?g|png|svg|tiff?)(\\?.*)?","title":"url","description":"image file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'."}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this image"}},"required":["external"],"title":"image","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["image","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an image type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `image`.\n\nimage file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/video","name":"connector_notion_page_video_createVideo","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"video":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"video file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]"}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this embed"}},"required":["external"],"title":"video","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["video","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"video":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"video file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]"}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this embed"}},"required":["external"],"title":"video","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["video","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an video type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `video`.\n\nvideo file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/pdf","name":"connector_notion_page_pdf_createPdf","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"pdf":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","pattern":".*\\.(pdf)(\\?.*)?","title":"url"}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this pdf"}},"required":["external"],"title":"pdf","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["pdf","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pdf":{"type":"object","properties":{"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","pattern":".*\\.(pdf)(\\?.*)?","title":"url"}},"required":["url"],"title":"external","additionalProperties":false},"caption":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"caption of this pdf"}},"required":["external"],"title":"pdf","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["pdf","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an pdf type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `pdf`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/code","name":"connector_notion_page_code_createCode","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"code":{"type":"object","properties":{"language":{"type":"string","enum":["c","json","diff","html","markdown","r","abap","agda","arduino","assembly","bash","basic","bnf","c#","c++","clojure","coffeescript","coq","css","dart","dhall","docker","ebnf","elixir","elm","erlang","f#","flow","fortran","gherkin","glsl","go","graphql","groovy","haskell","idris","java","javascript","julia","kotlin","latex","less","lisp","livescript","llvm ir","lua","makefile","markup","matlab","mathematica","mermaid","nix","notion formula","objective-c","ocaml","pascal","perl","php","plain text","powershell","prolog","protobuf","purescript","python","racket","reason","ruby","rust","sass","scala","scheme","scss","shell","solidity","sql","swift","toml","typescript","vb.net","verilog","vhdl","visual basic","webassembly","xml","yaml","java/c/c++/c#"]},"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich text for this codebox"}},"required":["language","rich_text"],"title":"code","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["code","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"code":{"type":"object","properties":{"language":{"type":"string","enum":["c","json","diff","html","markdown","r","abap","agda","arduino","assembly","bash","basic","bnf","c#","c++","clojure","coffeescript","coq","css","dart","dhall","docker","ebnf","elixir","elm","erlang","f#","flow","fortran","gherkin","glsl","go","graphql","groovy","haskell","idris","java","javascript","julia","kotlin","latex","less","lisp","livescript","llvm ir","lua","makefile","markup","matlab","mathematica","mermaid","nix","notion formula","objective-c","ocaml","pascal","perl","php","plain text","powershell","prolog","protobuf","purescript","python","racket","reason","ruby","rust","sass","scala","scheme","scss","shell","solidity","sql","swift","toml","typescript","vb.net","verilog","vhdl","visual basic","webassembly","xml","yaml","java/c/c++/c#"]},"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich text for this codebox"}},"required":["language","rich_text"],"title":"code","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["code","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an code type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `code`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","deprecated":true,"tags":["Notion"]},{"method":"post","path":"/connector/notion/page/equation","name":"connector_notion_page_equation_createEquation","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"equation":{"type":"object","properties":{"expression":{"type":"string","enum":["y = 2x"],"title":"expression\n\nan equation in mathematics"}},"required":["expression"],"title":"equation","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["equation","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"equation":{"type":"object","properties":{"expression":{"type":"string","enum":["y = 2x"],"title":"expression\n\nan equation in mathematics"}},"required":["expression"],"title":"equation","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["equation","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an equation type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `equation`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/divider","name":"connector_notion_page_divider_createDivider","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"divider":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["divider","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"divider":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["divider","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an divider type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `divider`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/table_of_contents","name":"connector_notion_page_table_of_contents_createTableOfContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"table_of_contents":{"type":"object","properties":{"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]}},"required":["color"],"title":"table_of_contents","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["table_of_contents","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"table_of_contents":{"type":"object","properties":{"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]}},"required":["color"],"title":"table_of_contents","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["table_of_contents","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an table_of_contents type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `table_of_contents`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/link_to_page","name":"connector_notion_page_link_to_page_createLinkToPage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"link_to_page":{"type":"object","properties":{"page_id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["page_id"],"title":"link_to_page","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["link_to_page","secretKey","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"link_to_page":{"type":"object","properties":{"page_id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["page_id"],"title":"link_to_page","additionalProperties":false},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["link_to_page","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an link_to_page type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `link_to_page`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"post","path":"/connector/notion/page/toggle","name":"connector_notion_page_toggle_createToggle","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]}},"required":["rich_text"],"title":"toggle","additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["secretKey","pageId","toggle"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]},"children":{"type":"array","items":{"type":"object","properties":{"toggle":{"type":"object","properties":{"rich_text":{"type":"array","items":{"type":"object","properties":{"text":{"type":"object","properties":{"content":{"type":"string","title":"content"},"link":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url"}},"required":["url"],"title":"link","additionalProperties":false}},"required":["content"],"title":"text","additionalProperties":false}},"required":["text"],"additionalProperties":false},"maxItems":1,"title":"rich_text"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink","gray_background","brown_background","orange_background","yellow_background","green_background","blue_background","purple_background","pink_background","red_background"]}},"required":["rich_text"],"title":"toggle","additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["toggle"],"additionalProperties":false}}},"required":["rich_text","children"],"additionalProperties":false}},"required":["pageId","toggle"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Append an toggle type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `toggle`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get/page/contents","name":"connector_notion_get_page_contents_readPageContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["pageId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"content":{"type":"string","title":"content","description":"The contents of the page you  read.\n\nThe contents are in Markdown format."}},"required":["content"],"additionalProperties":false},"description":"Read the contents of a Notion page.\nReads the contents of a Notion page in Markdown format.\n\nRead Notion page contents","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get/page","name":"connector_notion_get_page_readPageList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"pageId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"title":"id","description":"페이지 고유 id\n\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here."},"title":{"type":"string","title":"Title","description":"Page Title"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["pageId","title","link"],"title":"Page list query results","additionalProperties":false}},"description":"Retrieve a list of pages.\n\nRetrieve a list of all pages in your Notion workspace","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get/users","name":"connector_notion_get_users_getUsers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"User unique id"},"name":{"type":"string","title":"Name","description":"Username"}},"required":["id","name"],"title":"User list query results","additionalProperties":false}},"description":"Retrieve the list of users in the workspace","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get/database-info","name":"connector_notion_get_database_info_getDatabaseListInfo","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"database unique id"},"title":{"type":"string","title":"Title","description":"Database Title"},"url":{"type":"string","format":"iri","title":"url","description":"Database Page URL"},"properties":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T\n\n------------------------------\n\nDescription of the current {@link RecordstringINotion.DatabaseProperty} type:\n\n> Construct a type with a set of properties K of type T","additionalProperties":{"oneOf":[{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["number"],"title":"type"},"number":{"type":"object","properties":{"format":{"type":"string","enum":["number","percent","number_with_commas","dollar","canadian_dollar","singapore_dollar","euro","pound","yen","ruble","rupee","won","yuan","real","lira","rupiah","franc","hong_kong_dollar","new_zealand_dollar","krona","norwegian_krone","mexican_peso","rand","new_taiwan_dollar","danish_krone","zloty","baht","forint","koruna","shekel","chilean_peso","philippine_peso","dirham","colombian_peso","riyal","ringgit","leu","argentine_peso","uruguayan_peso","peruvian_sol"]}},"required":["format"],"title":"number","additionalProperties":false}},"required":["id","name","type","number"],"title":"Database numeric properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["formula"],"title":"type"},"formula":{"type":"object","properties":{"expression":{"type":"string","title":"expression"}},"required":["expression"],"title":"formula","additionalProperties":false}},"required":["id","name","type","formula"],"title":"Database official properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["select"],"title":"type"},"select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"}},"required":["options"],"title":"select","additionalProperties":false}},"required":["id","name","type","select"],"title":"Database Selection Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["multi_select"],"title":"type"},"multi_select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"}},"required":["options"],"title":"multi_select","additionalProperties":false}},"required":["id","name","type","multi_select"],"title":"Database Multi-Select Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["status"],"title":"type"},"status":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"},"groups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]},"option_ids":{"type":"array","items":{"type":"string"},"title":"option_ids"}},"required":["id","name","color","option_ids"],"additionalProperties":false},"title":"groups"}},"required":["options","groups"],"title":"status","additionalProperties":false}},"required":["id","name","type","status"],"title":"Database status properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["relation"],"title":"type"},"relation":{"type":"object","properties":{"database_id":{"type":"string","title":"database_id"},"synced_property_id":{"type":"string","title":"synced_property_id"},"synced_property_name":{"type":"string","title":"synced_property_name"}},"required":["database_id","synced_property_id","synced_property_name"],"title":"relation","additionalProperties":false}},"required":["id","name","type","relation"],"title":"Database Relationship Properties","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["rollup"],"title":"type"},"rollup":{"type":"object","properties":{"rollup_property_name":{"type":"string","title":"rollup_property_name"},"relation_property_name":{"type":"string","title":"relation_property_name"},"rollup_property_id":{"type":"string","title":"rollup_property_id"},"relation_property_id":{"type":"string","title":"relation_property_id"},"function":{"type":"string","enum":["date_range","count","range","average","unique","count_values","empty","not_empty","show_unique","percent_empty","percent_not_empty","sum","median","min","max","earliest_date","latest_date","checked","unchecked","percent_checked","percent_unchecked","count_per_group","percent_per_group","show_original"]}},"required":["rollup_property_name","relation_property_name","rollup_property_id","relation_property_id","function"],"title":"rollup","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","rollup","id","name"],"title":"Database Aggregate Properties","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["title"],"title":"type"},"title":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","title","id","name"],"title":"Database title property","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["rich_text"],"title":"type"},"rich_text":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","rich_text"],"title":"database text property","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["url"],"title":"type"},"url":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","url","id","name"],"title":"Database Url property","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["people"],"title":"type"},"people":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","people"],"title":"database people properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["files"],"title":"type"},"files":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","files"],"title":"Database File Properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["email"],"title":"type"},"email":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","email"],"title":"Database Email Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["phone_number"],"title":"type"},"phone_number":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","phone_number"],"title":"Database Phone Number Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["date"],"title":"type"},"date":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","date"],"title":"Database Date Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["checkbox"],"title":"type"},"checkbox":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","checkbox"],"title":"Database Checkbox Properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["created_by"],"title":"type"}},"required":["id","name","type"],"title":"Database Creator Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["created_time"],"title":"type"},"created_time":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","created_time"],"title":"Database Creation Time Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["last_edited_by"],"title":"type"},"last_edited_by":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","last_edited_by"],"title":"Database Last Modified Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["last_edited_time"],"title":"type"},"last_edited_time":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","last_edited_time"],"title":"Database Modification Time Attribute","additionalProperties":false}]}}},"required":["id","title","url","properties"],"title":"Database Information","additionalProperties":false}},"description":"Query the database list to create items in the database","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get/database-info/{databaseId}","name":"connector_notion_get_database_info_getDatabaseInfo","parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["databaseId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"}},"additionalProperties":false,"required":["databaseId"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"database unique id"},"title":{"type":"string","title":"Title","description":"Database Title"},"url":{"type":"string","format":"iri","title":"url","description":"Database Page URL"},"properties":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T\n\n------------------------------\n\nDescription of the current {@link RecordstringINotion.DatabaseProperty} type:\n\n> Construct a type with a set of properties K of type T","additionalProperties":{"oneOf":[{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["number"],"title":"type"},"number":{"type":"object","properties":{"format":{"type":"string","enum":["number","percent","number_with_commas","dollar","canadian_dollar","singapore_dollar","euro","pound","yen","ruble","rupee","won","yuan","real","lira","rupiah","franc","hong_kong_dollar","new_zealand_dollar","krona","norwegian_krone","mexican_peso","rand","new_taiwan_dollar","danish_krone","zloty","baht","forint","koruna","shekel","chilean_peso","philippine_peso","dirham","colombian_peso","riyal","ringgit","leu","argentine_peso","uruguayan_peso","peruvian_sol"]}},"required":["format"],"title":"number","additionalProperties":false}},"required":["id","name","type","number"],"title":"Database numeric properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["formula"],"title":"type"},"formula":{"type":"object","properties":{"expression":{"type":"string","title":"expression"}},"required":["expression"],"title":"formula","additionalProperties":false}},"required":["id","name","type","formula"],"title":"Database official properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["select"],"title":"type"},"select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"}},"required":["options"],"title":"select","additionalProperties":false}},"required":["id","name","type","select"],"title":"Database Selection Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["multi_select"],"title":"type"},"multi_select":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"}},"required":["options"],"title":"multi_select","additionalProperties":false}},"required":["id","name","type","multi_select"],"title":"Database Multi-Select Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["status"],"title":"type"},"status":{"type":"object","properties":{"options":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]}},"required":["id","name","color"],"additionalProperties":false},"title":"options"},"groups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"color":{"type":"string","enum":["default","red","green","blue","gray","brown","orange","yellow","purple","pink"]},"option_ids":{"type":"array","items":{"type":"string"},"title":"option_ids"}},"required":["id","name","color","option_ids"],"additionalProperties":false},"title":"groups"}},"required":["options","groups"],"title":"status","additionalProperties":false}},"required":["id","name","type","status"],"title":"Database status properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["relation"],"title":"type"},"relation":{"type":"object","properties":{"database_id":{"type":"string","title":"database_id"},"synced_property_id":{"type":"string","title":"synced_property_id"},"synced_property_name":{"type":"string","title":"synced_property_name"}},"required":["database_id","synced_property_id","synced_property_name"],"title":"relation","additionalProperties":false}},"required":["id","name","type","relation"],"title":"Database Relationship Properties","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["rollup"],"title":"type"},"rollup":{"type":"object","properties":{"rollup_property_name":{"type":"string","title":"rollup_property_name"},"relation_property_name":{"type":"string","title":"relation_property_name"},"rollup_property_id":{"type":"string","title":"rollup_property_id"},"relation_property_id":{"type":"string","title":"relation_property_id"},"function":{"type":"string","enum":["date_range","count","range","average","unique","count_values","empty","not_empty","show_unique","percent_empty","percent_not_empty","sum","median","min","max","earliest_date","latest_date","checked","unchecked","percent_checked","percent_unchecked","count_per_group","percent_per_group","show_original"]}},"required":["rollup_property_name","relation_property_name","rollup_property_id","relation_property_id","function"],"title":"rollup","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","rollup","id","name"],"title":"Database Aggregate Properties","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["title"],"title":"type"},"title":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","title","id","name"],"title":"Database title property","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["rich_text"],"title":"type"},"rich_text":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","rich_text"],"title":"database text property","additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["url"],"title":"type"},"url":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["type","url","id","name"],"title":"Database Url property","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["people"],"title":"type"},"people":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","people"],"title":"database people properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["files"],"title":"type"},"files":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","files"],"title":"Database File Properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["email"],"title":"type"},"email":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","email"],"title":"Database Email Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["phone_number"],"title":"type"},"phone_number":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","phone_number"],"title":"Database Phone Number Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["date"],"title":"type"},"date":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","date"],"title":"Database Date Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["checkbox"],"title":"type"},"checkbox":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","checkbox"],"title":"Database Checkbox Properties","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["created_by"],"title":"type"}},"required":["id","name","type"],"title":"Database Creator Attributes","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["created_time"],"title":"type"},"created_time":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","created_time"],"title":"Database Creation Time Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["last_edited_by"],"title":"type"},"last_edited_by":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","last_edited_by"],"title":"Database Last Modified Attribute","additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"},"type":{"type":"string","enum":["last_edited_time"],"title":"type"},"last_edited_time":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":false}},"required":["id","name","type","last_edited_time"],"title":"Database Modification Time Attribute","additionalProperties":false}]}}},"required":["id","title","url","properties"],"title":"Database Information","additionalProperties":false},"description":"Retrieves database information to create items in the database","tags":["Notion"]},{"method":"patch","path":"/connector/notion/get-page-by-title","name":"connector_notion_get_page_by_title_getPageByTitle","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"Page Title"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["title","secretKey"],"title":"Information needed to search the page","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"Page Title"}},"required":["title"],"title":"Information needed to search the page","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to search the page","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"Type","description":"Parent Page Object Type"},"workspace":{"type":"boolean","title":"Whether the workspace is","description":"Whether the parent page is a workspace"}},"required":["type"],"title":"Parent Page","description":"Parent Page Information","additionalProperties":false},"properties":{"type":"object","properties":{"title":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Page property id"},"type":{"type":"string","title":"Property Type","description":"Page Property Type"},"title":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","title":"type","description":"Title property type"},"text":{"type":"object","properties":{"content":{"type":"string","title":"Content","description":"Title Text Content"},"link":{"type":"string","format":"iri","nullable":true}},"required":["content","link"],"title":"Page title text information","additionalProperties":false},"annotations":{"type":"object","properties":{"bold":{"type":"boolean","title":"Bold","description":"Title Text Bold"},"italic":{"type":"boolean","title":"italicized","description":"Title text italicized"},"strikethrough":{"type":"boolean","title":"strikethrough","description":"Title text strikethrough"},"underline":{"type":"boolean","title":"underline","description":"Title text underline"},"code":{"type":"boolean","title":"Whether the title text is wrapped in code","description":"Whether the title text is wrapped in code"},"color":{"type":"string","title":"Color","description":"Title Text Color"}},"required":["bold","italic","strikethrough","underline","code","color"],"title":"Page title Additional information","additionalProperties":false},"plain_text":{"type":"string","title":"Original","description":"Page Title Original Text"},"href":{"type":"string","format":"iri","nullable":true}},"required":["type","text","annotations","plain_text","href"],"title":"Page title attribute","additionalProperties":false},"title":"Title Attribute","description":"Page Title Attribute Information"}},"required":["id","type","title"],"title":"Title attribute","description":"Information about the title attribute","additionalProperties":false}},"required":["title"],"title":"Page property information","additionalProperties":false},"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"url":{"type":"string","format":"iri","title":"url","description":"Page url"},"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"created_time":{"type":"string","title":"Date created","description":"Date the page was created"},"last_edited_time":{"type":"string","title":"Last modified","description":"Date the page was last modified"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the person who created the page"}},"required":["object","id"],"title":"Created by","description":"Information about who created the page","additionalProperties":false},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the last person to edit the page"}},"required":["object","id"],"title":"Last modified by","description":"Information about who last modified the page","additionalProperties":false},"cover":{"type":"object","properties":{"type":{"type":"string","title":"Type","description":"Image Type"},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"title":"External image information","additionalProperties":false}},"required":["type","external"],"additionalProperties":false,"nullable":true},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"]},"emoji":{"type":"string","nullable":true},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"additionalProperties":false,"nullable":true},"file":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"file url"},"expiry_time":{"type":"string","title":"expiration time","description":"Image file expiration time"}},"required":["url","expiry_time"],"title":"Icon file","description":"Icon information when the icon type is file","additionalProperties":false}},"required":["type"],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether to archive the page","description":"Whether to archive the page"},"public_url":{"type":"string","format":"iri","nullable":true}},"required":["parent","properties","object","url","id","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","public_url"],"additionalProperties":false},"description":"Search for pages by title","tags":["Notion"]},{"method":"patch","path":"/connector/notion/find-item-list/{databaseId}","name":"connector_notion_find_item_list_getDatabaseItemList","parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"},"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["databaseId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"}},"additionalProperties":false,"required":["databaseId"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"type","description":"Parent database item object type"},"database_id":{"type":"string","title":"database id","description":"database item parent id"}},"required":["type","database_id"],"title":"Parent Database Item","description":"Parent Database Item Information","additionalProperties":false},"properties":{"title":"Property","description":"Database Item Properties"},"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"created_time":{"type":"string","title":"Date created","description":"Date the page was created"},"last_edited_time":{"type":"string","title":"Last modified","description":"Date the page was last modified"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the person who created the page"}},"required":["object","id"],"title":"Created by","description":"Information about who created the page","additionalProperties":false},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the last person to edit the page"}},"required":["object","id"],"title":"Last modified by","description":"Information about who last modified the page","additionalProperties":false},"cover":{"type":"object","properties":{"type":{"type":"string","title":"Type","description":"Image Type"},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"title":"External image information","additionalProperties":false}},"required":["type","external"],"additionalProperties":false,"nullable":true},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"]},"emoji":{"type":"string","nullable":true},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"additionalProperties":false,"nullable":true},"file":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"file url"},"expiry_time":{"type":"string","title":"expiration time","description":"Image file expiration time"}},"required":["url","expiry_time"],"title":"Icon file","description":"Icon information when the icon type is file","additionalProperties":false}},"required":["type"],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether to archive the page","description":"Whether to archive the page"},"url":{"type":"string","format":"iri","title":"url","description":"Page url"},"public_url":{"type":"string","format":"iri","nullable":true},"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"title":{"type":"string","title":"tilte\n\nTitle of the document you just created"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id","title","link"],"title":"Database item creation result","additionalProperties":false}},"description":"Retrieve a list of database items.\n\nRetrieve a list of items that exist in a table database","tags":["Notion"]},{"method":"patch","path":"/connector/notion/find-item/{databaseId}","name":"connector_notion_find_item_getDatabaseItem","parameters":[{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"The title of the item in the database item"},"number":{"type":"integer","title":"Number","description":"Number in database item"},"url":{"type":"string","format":"iri","title":"url","description":"url in database item"},"email":{"type":"string","format":"email","title":"Email address","description":"Email address in database item"},"rich_text":{"type":"string","title":"text","description":"Text in database item"},"phone_number":{"type":"string","title":"Phone number","description":"Phone number in database item"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to find an item in the database","additionalProperties":{}}},"additionalProperties":false,"required":["databaseId","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title || ''}"},"description":" Unique id of the database"},"body":{"type":"object","properties":{"title":{"type":"string","title":"Title","description":"The title of the item in the database item"},"number":{"type":"integer","title":"Number","description":"Number in database item"},"url":{"type":"string","format":"iri","title":"url","description":"url in database item"},"email":{"type":"string","format":"email","title":"Email address","description":"Email address in database item"},"rich_text":{"type":"string","title":"text","description":"Text in database item"},"phone_number":{"type":"string","title":"Phone number","description":"Phone number in database item"}},"required":[],"title":"Information needed to find an item in the database","additionalProperties":{}}},"additionalProperties":false,"required":["databaseId","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to find an item in the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"parent":{"type":"object","properties":{"type":{"type":"string","title":"type","description":"Parent database item object type"},"database_id":{"type":"string","title":"database id","description":"database item parent id"}},"required":["type","database_id"],"title":"Parent Database Item","description":"Parent Database Item Information","additionalProperties":false},"properties":{"title":"Property","description":"Database Item Properties"},"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"created_time":{"type":"string","title":"Date created","description":"Date the page was created"},"last_edited_time":{"type":"string","title":"Last modified","description":"Date the page was last modified"},"created_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the person who created the page"}},"required":["object","id"],"title":"Created by","description":"Information about who created the page","additionalProperties":false},"last_edited_by":{"type":"object","properties":{"object":{"type":"string","enum":["user","page","list","comment","database","block","property_item"]},"id":{"type":"string","title":"id","description":"Unique id of the last person to edit the page"}},"required":["object","id"],"title":"Last modified by","description":"Information about who last modified the page","additionalProperties":false},"cover":{"type":"object","properties":{"type":{"type":"string","title":"Type","description":"Image Type"},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"title":"External image information","additionalProperties":false}},"required":["type","external"],"additionalProperties":false,"nullable":true},"icon":{"type":"object","properties":{"type":{"type":"string","enum":["file","emoji","external"]},"emoji":{"type":"string","nullable":true},"external":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"image url"}},"required":["url"],"additionalProperties":false,"nullable":true},"file":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"url","description":"file url"},"expiry_time":{"type":"string","title":"expiration time","description":"Image file expiration time"}},"required":["url","expiry_time"],"title":"Icon file","description":"Icon information when the icon type is file","additionalProperties":false}},"required":["type"],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether to archive the page","description":"Whether to archive the page"},"url":{"type":"string","format":"iri","title":"url","description":"Page url"},"public_url":{"type":"string","format":"iri","nullable":true},"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"title":{"type":"string","title":"tilte\n\nTitle of the document you just created"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["parent","properties","object","created_time","last_edited_time","created_by","last_edited_by","cover","icon","archived","url","public_url","id","title","link"],"title":"Database item creation result","additionalProperties":false},"description":"Retrieval of database items.\n\nRetrieves an item that exists in a table database","tags":["Notion"]},{"method":"post","path":"/connector/notion/markdown","name":"connector_notion_markdown_createPageByMarkdown","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","x-wrtn-placeholder":"테스트 페이지.","title":"Page title","description":"New page title to be created"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["parentPageId","title","secretKey","markdown"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","x-wrtn-placeholder":"테스트 페이지.","title":"Page title","description":"New page title to be created"},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["parentPageId","title","markdown"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"name":{"type":"string","title":"name","description":"for example, APIResponseError"},"code":{"type":"string","title":"code","description":"for example, object_not_found"},"status":{"type":"number","title":"status","description":"for example, 404"},"body":{"type":"string","title":"serialized body","description":"for example, '{\"object\":\"error\",\"status\":404,\"code\":\"object_not_found\",\"message\":\"Could not find page with ID: 6f8304d2-de52-417d-a032-b340a421a8c1. Make sure the relevant pages and databases are shared with your integration.\",\"request_id\":\"3e773c7e-c703-40a8-9b13-635ad750c3a2\"}'"}},"required":["name","code","status","body"],"additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"title":{"type":"string","title":"tilte\n\nTitle of the document you just created"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["id","title","link"],"title":"Page creation result","additionalProperties":false}]},"description":"Create page by markdown format\n\nReceive the markdown text and immediately create it as a notation page.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.\n\nSince Notion prioritizes accessible pages during authentication, creating pages must be sub-pages within the page, which means that there must be a parent page.","tags":["Notion"]},{"method":"put","path":"/connector/notion/page/title","name":"connector_notion_page_title_updatePageTitle","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Title of Page","description":"It means title to update this page"},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["title","pageId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"title":{"type":"string","title":"Title of Page","description":"It means title to update this page"},"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]}},"required":["title","pageId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"name":{"type":"string","title":"name","description":"for example, APIResponseError"},"code":{"type":"string","title":"code","description":"for example, object_not_found"},"status":{"type":"number","title":"status","description":"for example, 404"},"body":{"type":"string","title":"serialized body","description":"for example, '{\"object\":\"error\",\"status\":404,\"code\":\"object_not_found\",\"message\":\"Could not find page with ID: 6f8304d2-de52-417d-a032-b340a421a8c1. Make sure the relevant pages and databases are shared with your integration.\",\"request_id\":\"3e773c7e-c703-40a8-9b13-635ad750c3a2\"}'"}},"required":["name","code","status","body"],"additionalProperties":false},{"type":"object","properties":{"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"title":{"type":"string","title":"tilte\n\nTitle of the document you just created"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["id","title","link"],"title":"Page creation result","additionalProperties":false}]},"description":"Update Notion Page Title","tags":["Notion"]},{"method":"post","path":"/connector/notion/create-gallery-database","name":"connector_notion_create_gallery_database_createGalleryDatabase","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","title":"databaseTitle"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["parentPageId","title","secretKey"],"title":"Information needed to create a gallery view database","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","title":"databaseTitle"}},"required":["parentPageId","title"],"title":"Information needed to create a gallery view database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to create a gallery view database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Database id"},"title":{"type":"string","title":"title","description":"Title of database"},"url":{"type":"string","format":"iri","title":"url","description":"Page url of database"}},"required":["id","title","url"],"title":"Information created a gallery view database","additionalProperties":false},"description":"Create a Notion Gallery Database.\n\nCreate a gallery view database for notion.\n\nIt is not possible to create a gallery view at once, and you must change the view to a gallery directly.\nThis endpoint must not be used to create each items.\nThis endpoint is only used to create a database.\nCreating a database is different from adding items to a database.","tags":["Notion"]},{"method":"post","path":"/connector/notion/create-gallery-item","name":"connector_notion_create_gallery_item_createGalleryItem","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to add a item.\n\nIf the database is not created, you can create a database using the `Create Gallery Database` function first.\nThe endpoint is POST: /connector/notion/create-gallery-database."},"info":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title","description":"Database Item Title.\nThe title of the item to be added to the database."},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["title","markdown"],"title":"Information created a gallery view database item","additionalProperties":false},"title":"informations","description":"Information needed to create a gallery database items.\n\nYou can add multiple items at once.\nIf you need to add multiple database items, you should add each piece of information to the info as an array.\nYou should not make multiple calls when you need to add multiple items."},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["databaseId","info","secretKey"],"title":"Information needed to create a gallery view database items","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to add a item.\n\nIf the database is not created, you can create a database using the `Create Gallery Database` function first.\nThe endpoint is POST: /connector/notion/create-gallery-database."},"info":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title","description":"Database Item Title.\nThe title of the item to be added to the database."},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["title","markdown"],"title":"Information created a gallery view database item","additionalProperties":false},"title":"informations","description":"Information needed to create a gallery database items.\n\nYou can add multiple items at once.\nIf you need to add multiple database items, you should add each piece of information to the info as an array.\nYou should not make multiple calls when you need to add multiple items."}},"required":["databaseId","info"],"title":"Information needed to create a gallery view database items","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to create a gallery view database items","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"pageId":{"type":"string","title":"pageId","description":"Created item database id"},"url":{"type":"string","format":"iri","title":"page url","description":"Created item page url"}},"required":["pageId","url"],"title":"Information created a gallery view database item","additionalProperties":false}},"description":"Create items in the gallery database.\n\nCreate an item in the generated gallery view database.\nCreating a database item means adding an item to an existing database.\nIf there is no database received from input, you must first create a database using the POST: /connector/notion/create-gallery-database endpoint and then run it.\nYou should use this endpoint when adding items to an already created database.\nYou need to use this endpoint to add multiple items to the gallery database at once.\nIf you need to add 3 items, instead of calling the endpoint 3 times, you should put the 3 items in an array in the info information and add the 3 items in 1 endpoint call.\nSince the Notion database can only be created in table format, you will need to instruct users to manually change it to a gallery database view.","tags":["Notion"]},{"method":"post","path":"/connector/notion/update-page-content","name":"connector_notion_update_page_content_updatePageContent","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["pageId","markdown","secretKey"],"title":"Information needed to update the page content","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"markdown":{"type":"string","title":"markdown","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode."}},"required":["pageId","markdown"],"title":"Information needed to update the page content","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to update the page content","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"id":{"type":"string","title":"page id","description":"Unique id of the generated page"},"link":{"type":"string","format":"iri","title":"page link"}},"required":["id","link"],"additionalProperties":false},{"type":"object","properties":{"name":{"type":"string","title":"name","description":"for example, APIResponseError"},"code":{"type":"string","title":"code","description":"for example, object_not_found"},"status":{"type":"number","title":"status","description":"for example, 404"},"body":{"type":"string","title":"serialized body","description":"for example, '{\"object\":\"error\",\"status\":404,\"code\":\"object_not_found\",\"message\":\"Could not find page with ID: 6f8304d2-de52-417d-a032-b340a421a8c1. Make sure the relevant pages and databases are shared with your integration.\",\"request_id\":\"3e773c7e-c703-40a8-9b13-635ad750c3a2\"}'"}},"required":["name","code","status","body"],"additionalProperties":false}]},"description":"Update Page Content.\n\nUpdates the contents of the page.\n\nThis function updates the contents written on the page to the desired contents.\n\nThe contents to be updated must be written in Markdown format.","tags":["Notion"]},{"method":"post","path":"/connector/notion/create-database","name":"connector_notion_create_database_createDatabase","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","title":"title","description":"Database Title"},"properties":{"type":"array","items":{"type":"object","properties":{},"required":[],"title":"Database Schema","additionalProperties":{"oneOf":[{"type":"object","properties":{"rich_text":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["rich_text"],"title":"Notion Database rich_text property","description":"This property is used when adding a text property to the database.\nThe text property can only accept text.\nThis is a property for creating items that should be expressed as text.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.\n\n------------------------------\n\nDescription of the current {@link INotion.IRichTextProperty} type:\n\n> This property is used when adding a text property to the database.\n> The text property can only accept text.\n> This is a property for creating items that should be expressed as text.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.","additionalProperties":false},{"type":"object","properties":{"title":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["title"],"title":"Notion Database title property","description":"This property is used when adding a title property to a database.\nThis property must be added when creating a database.\nIt must never be omitted.\nThe title property can only accept text.\nItems added to that property can be used as pages, and content can also be added to the pages.\nThis is a property for creating items that should be expressed as topics or titles.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.\n\n------------------------------\n\nDescription of the current {@link INotion.ITitleProperty} type:\n\n> This property is used when adding a title property to a database.\n> This property must be added when creating a database.\n> It must never be omitted.\n> The title property can only accept text.\n> Items added to that property can be used as pages, and content can also be added to the pages.\n> This is a property for creating items that should be expressed as topics or titles.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.","additionalProperties":false}]}},"description":"Database Properties Schema"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["parentPageId","title","properties","secretKey"],"title":"Information needed to create a notion database","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"parentPageId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/page","jmesPath":"[].{value:pageId, label:title}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/page","jmesPath":"[].{value:id, label:id}"},"x-wrtn-placeholder":"부모 페이지를 선택하세요."}]},"title":{"type":"string","title":"title","description":"Database Title"},"properties":{"type":"array","items":{"type":"object","properties":{},"required":[],"title":"Database Schema","additionalProperties":{"oneOf":[{"type":"object","properties":{"rich_text":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["rich_text"],"title":"Notion Database rich_text property","description":"This property is used when adding a text property to the database.\nThe text property can only accept text.\nThis is a property for creating items that should be expressed as text.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.\n\n------------------------------\n\nDescription of the current {@link INotion.IRichTextProperty} type:\n\n> This property is used when adding a text property to the database.\n> The text property can only accept text.\n> This is a property for creating items that should be expressed as text.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.","additionalProperties":false},{"type":"object","properties":{"title":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["title"],"title":"Notion Database title property","description":"This property is used when adding a title property to a database.\nThis property must be added when creating a database.\nIt must never be omitted.\nThe title property can only accept text.\nItems added to that property can be used as pages, and content can also be added to the pages.\nThis is a property for creating items that should be expressed as topics or titles.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.\n\n------------------------------\n\nDescription of the current {@link INotion.ITitleProperty} type:\n\n> This property is used when adding a title property to a database.\n> This property must be added when creating a database.\n> It must never be omitted.\n> The title property can only accept text.\n> Items added to that property can be used as pages, and content can also be added to the pages.\n> This is a property for creating items that should be expressed as topics or titles.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.","additionalProperties":false}]}},"description":"Database Properties Schema"}},"required":["parentPageId","title","properties"],"title":"Information needed to create a notion database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to create a notion database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Database id"},"title":{"type":"string","title":"title","description":"Database title"},"url":{"type":"string","format":"iri","title":"url","description":"Database page url"}},"required":["id","title","url"],"title":"Information created a notion database","additionalProperties":false},"description":"Create a database.\n\nCreate a Notion Database\n\nCreating a database is different from adding items to a database.\nCreating a database is a process of creating a database, and adding items to a database is a process of adding items to an existing database.\nYou need to understand what your users are asking for, how many properties they need, and which properties should be created.","tags":["Notion"]},{"method":"post","path":"/connector/notion/add-database-property","name":"connector_notion_add_database_property_addDatabaseProperty","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to delete property."},"property":{"type":"object","properties":{},"required":[],"title":"Database Schema","additionalProperties":{"oneOf":[{"type":"object","properties":{"rich_text":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["rich_text"],"title":"Notion Database rich_text property","description":"This property is used when adding a text property to the database.\nThe text property can only accept text.\nThis is a property for creating items that should be expressed as text.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.\n\n------------------------------\n\nDescription of the current {@link INotion.IRichTextProperty} type:\n\n> This property is used when adding a text property to the database.\n> The text property can only accept text.\n> This is a property for creating items that should be expressed as text.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.","additionalProperties":false},{"type":"object","properties":{"title":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["title"],"title":"Notion Database title property","description":"This property is used when adding a title property to a database.\nThis property must be added when creating a database.\nIt must never be omitted.\nThe title property can only accept text.\nItems added to that property can be used as pages, and content can also be added to the pages.\nThis is a property for creating items that should be expressed as topics or titles.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.\n\n------------------------------\n\nDescription of the current {@link INotion.ITitleProperty} type:\n\n> This property is used when adding a title property to a database.\n> This property must be added when creating a database.\n> It must never be omitted.\n> The title property can only accept text.\n> Items added to that property can be used as pages, and content can also be added to the pages.\n> This is a property for creating items that should be expressed as topics or titles.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.","additionalProperties":false}]}},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["databaseId","property","secretKey"],"title":"Information needed to add a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to delete property."},"property":{"type":"object","properties":{},"required":[],"title":"Database Schema","additionalProperties":{"oneOf":[{"type":"object","properties":{"rich_text":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["rich_text"],"title":"Notion Database rich_text property","description":"This property is used when adding a text property to the database.\nThe text property can only accept text.\nThis is a property for creating items that should be expressed as text.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.\n\n------------------------------\n\nDescription of the current {@link INotion.IRichTextProperty} type:\n\n> This property is used when adding a text property to the database.\n> The text property can only accept text.\n> This is a property for creating items that should be expressed as text.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create the meaning and idiom as rich_text properties.","additionalProperties":false},{"type":"object","properties":{"title":{"type":"object","properties":{},"required":[],"additionalProperties":false}},"required":["title"],"title":"Notion Database title property","description":"This property is used when adding a title property to a database.\nThis property must be added when creating a database.\nIt must never be omitted.\nThe title property can only accept text.\nItems added to that property can be used as pages, and content can also be added to the pages.\nThis is a property for creating items that should be expressed as topics or titles.\nFor example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.\n\n------------------------------\n\nDescription of the current {@link INotion.ITitleProperty} type:\n\n> This property is used when adding a title property to a database.\n> This property must be added when creating a database.\n> It must never be omitted.\n> The title property can only accept text.\n> Items added to that property can be used as pages, and content can also be added to the pages.\n> This is a property for creating items that should be expressed as topics or titles.\n> For example, when creating an English vocabulary list, if you need three properties: word, meaning, and idiom, you should be able to create words as title properties because words can be used as topics or titles.","additionalProperties":false}]}}},"required":["databaseId","property"],"title":"Information needed to add a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to add a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Database id"},"title":{"type":"string","title":"title","description":"Database title"},"url":{"type":"string","format":"iri","title":"url","description":"Database page url"}},"required":["id","title","url"],"title":"Information created a notion database","additionalProperties":false},"description":"Add property to database.\n\nAdd property to notion database\nIf you want to add a property to an existing database, you should use this function.\nFor example, if there is an English word database in the Notion database, and there are three existing properties: word, meaning, and example sentence, and the user wants to add a property called Korean meaning, you should use this function to add a new property.\nThis function can only add one property at a time.","tags":["Notion"]},{"method":"post","path":"/connector/notion/delete-database-property","name":"connector_notion_delete_database_property_deleteDatabaseProperty","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to delete property."},"propertyName":{"type":"string","title":"propertyName","description":"The name of the property want to delete"},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["databaseId","propertyName","secretKey"],"title":"Information needed to delete a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to delete property."},"propertyName":{"type":"string","title":"propertyName","description":"The name of the property want to delete"}},"required":["databaseId","propertyName"],"title":"Information needed to delete a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to delete a property to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Database id"},"title":{"type":"string","title":"title","description":"Database title"},"url":{"type":"string","format":"iri","title":"url","description":"Database page url"}},"required":["id","title","url"],"title":"Information created a notion database","additionalProperties":false},"description":"Delete property to database.\n\nDelete property to notion database\nIf you want to delete a property in an existing database, you should use this function.\nFor example, if there is an English word database in the Notion database, and there are 4 properties: word, meaning, example, and Korean meaning, and the user wants to delete the property called Korean meaning, you should use this function to delete the property.\nYou need to know the property name to delete it.\nThis function can only delete one property at a time.","tags":["Notion"]},{"method":"post","path":"/connector/notion/add-items-to-database","name":"connector_notion_add_items_to_database_addItemsToDatabase","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to add a item.\n\nIf the database is not created, you can create a database using the `Create Database` function first.\nThe endpoint is POST: /connector/notion/create-database."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title value","description":"The value to be filled in the title property."},"rich_text":{"type":"array","items":{"type":"object","properties":{"propertyName":{"type":"string"},"value":{"type":"string"}},"required":["propertyName","value"],"additionalProperties":false},"title":"rich_text value","description":"The values to be filled in the rich_text property."},"date":{"type":"string","format":"date-time","title":"date value","description":"The value to be filled in the date property.\nYou must specify the date-time at the time the input was filled in."},"markdown":{"type":"string","title":"page content","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode.\nThis Markdown string is used to add content to the page of each database row."}},"required":["title","rich_text","date"],"title":"Information about the item added to the database","description":"This combination of items is used to populate a row in the database.\nFor example, if the properties of the database are title, rich_text, rich_text, rich_text, date, The combination of items requires 1 title, 3 rich_texts, and 1 date.\n\n------------------------------\n\nDescription of the current {@link INotion.ICreateDatabaseItem} type:\n\n> This combination of items is used to populate a row in the database.\n> For example, if the properties of the database are title, rich_text, rich_text, rich_text, date, The combination of items requires 1 title, 3 rich_texts, and 1 date.","additionalProperties":false},"title":"Items to create","description":"These are the item combinations to be created in the database.\nEach item combination is created for each row in the database."},"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["databaseId","items","secretKey"],"title":"Information needed to add an items to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"databaseId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/notion/get/database-info","jmesPath":"[].{value:id, label:title}"},"title":"databaseId","description":"Database Id what you want to add a item.\n\nIf the database is not created, you can create a database using the `Create Database` function first.\nThe endpoint is POST: /connector/notion/create-database."},"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title value","description":"The value to be filled in the title property."},"rich_text":{"type":"array","items":{"type":"object","properties":{"propertyName":{"type":"string"},"value":{"type":"string"}},"required":["propertyName","value"],"additionalProperties":false},"title":"rich_text value","description":"The values to be filled in the rich_text property."},"date":{"type":"string","format":"date-time","title":"date value","description":"The value to be filled in the date property.\nYou must specify the date-time at the time the input was filled in."},"markdown":{"type":"string","title":"page content","description":"If you add a markdown string, it will be converted appropriately according to the Notion's block.\nTherefore, you don't have to use Unicode symbols to implement lists or decorate documents using letters.\nOf course, this depends on the user, and there is no problem using the character string you want, such as inserting an emoji as well as Unicode.\nThis Markdown string is used to add content to the page of each database row."}},"required":["title","rich_text","date"],"title":"Information about the item added to the database","description":"This combination of items is used to populate a row in the database.\nFor example, if the properties of the database are title, rich_text, rich_text, rich_text, date, The combination of items requires 1 title, 3 rich_texts, and 1 date.\n\n------------------------------\n\nDescription of the current {@link INotion.ICreateDatabaseItem} type:\n\n> This combination of items is used to populate a row in the database.\n> For example, if the properties of the database are title, rich_text, rich_text, rich_text, date, The combination of items requires 1 title, 3 rich_texts, and 1 date.","additionalProperties":false},"title":"Items to create","description":"These are the item combinations to be created in the database.\nEach item combination is created for each row in the database."}},"required":["databaseId","items"],"title":"Information needed to add an items to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"notion","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"Information needed to add an items to the database","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Database id"},"title":{"type":"string","title":"title","description":"Database title"},"url":{"type":"string","format":"iri","title":"url","description":"Database page url"}},"required":["id","title","url"],"title":"Information created a notion database","additionalProperties":false},"description":"Add items to the database.\n\nAdds an item to each row in the database\nIf you want to add items to an existing database, you should use this function.\nYou should analyze the user's requirements and assign appropriate values ​​to each property.\nYou should select the value you want to add and the property to which you want to add the value.\nFor example, if you have an English vocabulary database and the properties are word, example, and Korean meaning, and you create two items,\nif the items to add are [{\"apple\", \"Apple is a fruit\", \"사과\"}, {\"snack\", \"I like snack\", \"과자\"}],\nyou should assign \"apple\" and \"snack\" to the word property,  \"Apple is a fruit\" and \"I like snack\" to the example, and \"사과\" and \"과자\" to the Korean meaning property.","tags":["Notion"]},{"method":"patch","path":"/connector/google-hotel","name":"connector_google_hotel_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"check_in_date":{"type":"string","format":"date","title":"Check-in date","description":"Set your check-in date.\n\nPlease enter a date after today's date."},"check_out_date":{"type":"string","format":"date","title":"Checkout Date","description":"Set a checkout date.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","default":2,"title":"Number of adults","description":"Set the number of adults staying. The default is 2."},"children":{"type":"integer","default":0,"title":"Number of children","description":"Set the number of children staying. The default is 0."},"sort_by":{"type":"string","enum":["3","8","13"]},"min_price":{"type":"integer","title":"Minimum price","description":"Please set the minimum price for the price range."},"max_price":{"type":"integer","title":"Maximum price","description":"Please set the maximum price for the price range."},"rating":{"type":"string","enum":["7","8","9"]},"type":{"type":"array","items":{"type":"string","enum":["12","13","14","15","16","17","18","19","20","21","22","23","24"]},"title":"Accommodation type","description":"Please select the accommodation type.\n\nOnly 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 are possible values."},"hotel_class":{"type":"array","items":{"type":"string","enum":["1","2","3","4","5"]},"title":"Accommodation class","description":"Please select your accommodation class.'\n\nOnly 1, 2, 3, 4, 5 are possible values."},"free_cancellation":{"type":"boolean","title":"Is free cancellation possible?","description":"Search only properties with free cancellation."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","check_in_date","check_out_date","max_results"],"title":"Accommodation search criteria","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the keyword you want to search for."},"check_in_date":{"type":"string","format":"date","title":"Check-in date","description":"Set your check-in date.\n\nPlease enter a date after today's date."},"check_out_date":{"type":"string","format":"date","title":"Checkout Date","description":"Set a checkout date.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","default":2,"title":"Number of adults","description":"Set the number of adults staying. The default is 2."},"children":{"type":"integer","default":0,"title":"Number of children","description":"Set the number of children staying. The default is 0."},"sort_by":{"type":"string","enum":["3","8","13"]},"min_price":{"type":"integer","title":"Minimum price","description":"Please set the minimum price for the price range."},"max_price":{"type":"integer","title":"Maximum price","description":"Please set the maximum price for the price range."},"rating":{"type":"string","enum":["7","8","9"]},"type":{"type":"array","items":{"type":"string","enum":["12","13","14","15","16","17","18","19","20","21","22","23","24"]},"title":"Accommodation type","description":"Please select the accommodation type.\n\nOnly 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 are possible values."},"hotel_class":{"type":"array","items":{"type":"string","enum":["1","2","3","4","5"]},"title":"Accommodation class","description":"Please select your accommodation class.'\n\nOnly 1, 2, 3, 4, 5 are possible values."},"free_cancellation":{"type":"boolean","title":"Is free cancellation possible?","description":"Search only properties with free cancellation."},"max_results":{"type":"integer","title":"Number of search results","description":"Set the number of search results."}},"required":["keyword","check_in_date","check_out_date","max_results"],"title":"Accommodation search criteria","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"Accommodation Name","description":"Accommodation Name"},"description":{"type":"string","title":"Property Description","description":"Property Description"},"link":{"type":"string","title":"Accommodation Link","description":"Accommodation Link"},"check_in_time":{"type":"string","title":"Check-in time","description":"Accommodation check-in time"},"check_out_time":{"type":"string","title":"Check-out Time","description":"Accommodation Check-out Time"},"price":{"type":"string","title":"Accommodation prices","description":"Accommodation prices"},"nearby_place":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"Surrounding facility name","description":"Surrounding facility name"},"transportations":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","title":"Types of Transportation","description":"Types of Transportation"},"duration":{"type":"string","title":"Time required","description":"Time required to reach surrounding facilities"}},"required":["type","duration"],"additionalProperties":false},"title":"Transportation","description":"Transportation to nearby facilities"}},"required":["name"],"title":"Surrounding facilities","additionalProperties":false},"title":"Facilities around the property","description":"Facilities around the property"},"hotel_class":{"type":"string","title":"Accommodation rating","description":"Accommodation rating"},"thumbnails":{"type":"array","items":{"type":"string","format":"iri","contentMediaType":"image/*"},"title":"thumbnail","description":"Accommodation thumbnail image"},"rating":{"type":"string","title":"rating","description":"Accommodation rating"},"review_count":{"type":"string","title":"Number of reviews","description":"Number of reviews"},"amenities":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"excluded_amenities":{"type":"array","items":{"type":"string"},"title":"Amenities not provided","description":"Amenities not provided by the property"}},"required":["name","price","thumbnails","amenities"],"title":"Accommodation search results","additionalProperties":false}},"description":"Google Hotels Search.\n\nSearch for accommodations using Google Hotels service\nOnly one keyword should be requested per request.\nFor example, if you need to enter Seoul and Tokyo as keywords, you should make two requests with one word, \"Seoul\" and \"Tokyo\", not \"Seoul, Tokyo\".","tags":["Google Hotel"]},{"method":"patch","path":"/connector/airport-information/search","name":"connector_airport_information_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the name of the country or city you want to search for."}},"required":["keyword"],"title":"Airport information search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","title":"Search term","description":"Enter the name of the country or city you want to search for."}},"required":["keyword"],"title":"Airport information search conditions","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"country_name":{"type":"string","title":"Country","description":"Country Name"},"city_name":{"type":"string","title":"City","description":"City Name"},"airport_name":{"type":"string","title":"Airport","description":"Airport Name"},"airport_code":{"type":"string","title":"Airport Code","description":"Airport Code"}},"required":["country_name","city_name","airport_name","airport_code"],"title":"Airport information search results","additionalProperties":false}},"description":"Search for airport information using the entered search term.\nOnly one item should be requested per request.\nThis connector only processes one search term at a time, so if you want to search for multiple terms, you will need to call this connector separately for each search term.","tags":["Search Airport Information"]},{"method":"patch","path":"/connector/google-flight/one-way","name":"connector_google_flight_one_way_oneWay","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Departure","description":"Please enter the code of the departure airport.\n\nThe departure code must be the same even if it is a round trip (type \"1\").\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the departure_id must be the same as when calling connector/google-flight/departure."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Destination","description":"Please enter the destination airport code.\n\nEven if it is a round trip (type \"1\"), the destination code must be the same.\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the arrival_id must be the same as when calling connector/google-flight/departure."},"type":{"type":"string","enum":["1","2"]},"outbound_date":{"type":"string","format":"date","title":"Departure date","description":"Please enter your departure date.\n\nPlease enter a date after today's date."},"return_date":{"type":"string","format":"date","title":"Date of arrival","description":"Please enter the date of arrival.\n\nIf type is \"1\", it must be entered.\n\nIf type is \"2\", it must not be entered.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","title":"Number of adults","description":"Please enter the number of adults."},"children":{"type":"integer","title":"Number of children","description":"Please enter the number of children."},"stop":{"type":"string","enum":["0","1","2","3"]},"max_price":{"type":"integer","title":"Maximum Price","description":"Please enter the maximum price for your flight.\n\nYou must search for flights that do not exceed the maximum price you entered."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"Information needed to search for airline tickets","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Departure","description":"Please enter the code of the departure airport.\n\nThe departure code must be the same even if it is a round trip (type \"1\").\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the departure_id must be the same as when calling connector/google-flight/departure."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Destination","description":"Please enter the destination airport code.\n\nEven if it is a round trip (type \"1\"), the destination code must be the same.\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the arrival_id must be the same as when calling connector/google-flight/departure."},"type":{"type":"string","enum":["1","2"]},"outbound_date":{"type":"string","format":"date","title":"Departure date","description":"Please enter your departure date.\n\nPlease enter a date after today's date."},"return_date":{"type":"string","format":"date","title":"Date of arrival","description":"Please enter the date of arrival.\n\nIf type is \"1\", it must be entered.\n\nIf type is \"2\", it must not be entered.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","title":"Number of adults","description":"Please enter the number of adults."},"children":{"type":"integer","title":"Number of children","description":"Please enter the number of children."},"stop":{"type":"string","enum":["0","1","2","3"]},"max_price":{"type":"integer","title":"Maximum Price","description":"Please enter the maximum price for your flight.\n\nYou must search for flights that do not exceed the maximum price you entered."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"Information needed to search for airline tickets","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"departure_airport":{"type":"object","properties":{"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."},"time":{"type":"string","title":"Flight Departure Date / Time","description":"The date and time of the flight departure."}},"required":["name","code","time"],"title":"Flight Information","additionalProperties":false},"arrival_airport":{"type":"object","properties":{"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."},"time":{"type":"string","title":"Flight Departure Date / Time","description":"The date and time of the flight departure."}},"required":["name","code","time"],"title":"Flight Information","additionalProperties":false},"duration":{"type":"string","title":"Flight time","description":"This is the time it takes to fly."},"airplane":{"type":"string","title":"Airplane type","description":"Here is the aircraft type information."},"airline":{"type":"string","title":"Airline","description":"Here is the airline information."},"airline_logo":{"type":"string","format":"uri","contentMediaType":"image/*","title":"Airline Logo","description":"This is an image of an airline logo."},"travel_class":{"type":"string","title":"Seat Class","description":"Here is the seat class information."},"flight_number":{"type":"string","title":"Flight number","description":"Flight number is."}},"required":["departure_airport","arrival_airport","duration","airplane","airline","airline_logo","travel_class","flight_number"],"additionalProperties":false},"title":"Flight Information","description":"Here is the flight information."},"total_duration":{"type":"string","title":"Total flight time","description":"Total flight time."},"price":{"type":"string","title":"Flight prices","description":"Flight prices."},"layover":{"type":"object","properties":{"duration":{"type":"string","title":"Transfer time","description":"It's transfer time."},"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."}},"required":["duration","name","code"],"title":"Transfer information","additionalProperties":false},"departure_token":{"type":"string","title":"Return flight search token","description":"Token for return flight search"},"booking_token":{"type":"string","title":"Final confirmation token for flight","description":"Token for final confirmation of flight"}},"required":["flight","total_duration","price"],"title":"Flight search results","description":"Here are the flight search results.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.ISearchOutput} type:\n\n> Here are the flight search results.","additionalProperties":false},"title":"Final selected flight information","description":"Here is the final selected flight information."},"booking_options":{"type":"array","items":{"type":"object","properties":{"book_with":{"type":"string","title":"Reservation site","description":"This is a site where you can book flights of your choice."},"price":{"type":"string","title":"Price","description":"The price of the selected flight."},"book_link":{"type":"string","format":"uri","title":"Reservation Link","description":"Here is a link to book your selected flight."}},"required":["book_with","price","book_link"],"title":"Reservation options","description":"Reservation options.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.IBookingOption} type:\n\n> Reservation options.","additionalProperties":false},"title":"Reservation Information","description":"Here is the information you need to book your chosen flight."}},"required":["flight","booking_options"],"title":"Final flight selection results","description":"Here are the final flight selection results.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.IFinalResponse} type:\n\n> Here are the final flight selection results.","additionalProperties":false},"description":"Search for one-way flights","tags":["Google Flight"]},{"method":"patch","path":"/connector/google-flight/round-trip","name":"connector_google_flight_round_trip_roundTrip","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Departure","description":"Please enter the code of the departure airport.\n\nThe departure code must be the same even if it is a round trip (type \"1\").\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the departure_id must be the same as when calling connector/google-flight/departure."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Destination","description":"Please enter the destination airport code.\n\nEven if it is a round trip (type \"1\"), the destination code must be the same.\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the arrival_id must be the same as when calling connector/google-flight/departure."},"type":{"type":"string","enum":["1","2"]},"outbound_date":{"type":"string","format":"date","title":"Departure date","description":"Please enter your departure date.\n\nPlease enter a date after today's date."},"return_date":{"type":"string","format":"date","title":"Date of arrival","description":"Please enter the date of arrival.\n\nIf type is \"1\", it must be entered.\n\nIf type is \"2\", it must not be entered.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","title":"Number of adults","description":"Please enter the number of adults."},"children":{"type":"integer","title":"Number of children","description":"Please enter the number of children."},"stop":{"type":"string","enum":["0","1","2","3"]},"max_price":{"type":"integer","title":"Maximum Price","description":"Please enter the maximum price for your flight.\n\nYou must search for flights that do not exceed the maximum price you entered."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"Information needed to search for airline tickets","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"departure_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Departure","description":"Please enter the code of the departure airport.\n\nThe departure code must be the same even if it is a round trip (type \"1\").\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the departure_id must be the same as when calling connector/google-flight/departure."},"arrival_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/airport-information/search","jmesPath":"[].{value:airport_code, label: [country_name, city_name, airport_name, airport_code].join('-', @)}"},"title":"Destination","description":"Please enter the destination airport code.\n\nEven if it is a round trip (type \"1\"), the destination code must be the same.\n\nWhen calling connector/google-flight/arrival for a round trip (type \"1\"), the arrival_id must be the same as when calling connector/google-flight/departure."},"type":{"type":"string","enum":["1","2"]},"outbound_date":{"type":"string","format":"date","title":"Departure date","description":"Please enter your departure date.\n\nPlease enter a date after today's date."},"return_date":{"type":"string","format":"date","title":"Date of arrival","description":"Please enter the date of arrival.\n\nIf type is \"1\", it must be entered.\n\nIf type is \"2\", it must not be entered.\n\nPlease enter a date after today's date."},"adults":{"type":"integer","title":"Number of adults","description":"Please enter the number of adults."},"children":{"type":"integer","title":"Number of children","description":"Please enter the number of children."},"stop":{"type":"string","enum":["0","1","2","3"]},"max_price":{"type":"integer","title":"Maximum Price","description":"Please enter the maximum price for your flight.\n\nYou must search for flights that do not exceed the maximum price you entered."}},"required":["departure_id","arrival_id","type","outbound_date","adults","stop"],"title":"Information needed to search for airline tickets","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"flight":{"type":"array","items":{"type":"object","properties":{"departure_airport":{"type":"object","properties":{"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."},"time":{"type":"string","title":"Flight Departure Date / Time","description":"The date and time of the flight departure."}},"required":["name","code","time"],"title":"Flight Information","additionalProperties":false},"arrival_airport":{"type":"object","properties":{"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."},"time":{"type":"string","title":"Flight Departure Date / Time","description":"The date and time of the flight departure."}},"required":["name","code","time"],"title":"Flight Information","additionalProperties":false},"duration":{"type":"string","title":"Flight time","description":"This is the time it takes to fly."},"airplane":{"type":"string","title":"Airplane type","description":"Here is the aircraft type information."},"airline":{"type":"string","title":"Airline","description":"Here is the airline information."},"airline_logo":{"type":"string","format":"uri","contentMediaType":"image/*","title":"Airline Logo","description":"This is an image of an airline logo."},"travel_class":{"type":"string","title":"Seat Class","description":"Here is the seat class information."},"flight_number":{"type":"string","title":"Flight number","description":"Flight number is."}},"required":["departure_airport","arrival_airport","duration","airplane","airline","airline_logo","travel_class","flight_number"],"additionalProperties":false},"title":"Flight Information","description":"Here is the flight information."},"total_duration":{"type":"string","title":"Total flight time","description":"Total flight time."},"price":{"type":"string","title":"Flight prices","description":"Flight prices."},"layover":{"type":"object","properties":{"duration":{"type":"string","title":"Transfer time","description":"It's transfer time."},"name":{"type":"string","title":"Airport name","description":"Airport name."},"code":{"type":"string","title":"Airport Code","description":"This is a three-digit airport code."}},"required":["duration","name","code"],"title":"Transfer information","additionalProperties":false},"departure_token":{"type":"string","title":"Return flight search token","description":"Token for return flight search"},"booking_token":{"type":"string","title":"Final confirmation token for flight","description":"Token for final confirmation of flight"}},"required":["flight","total_duration","price"],"title":"Flight search results","description":"Here are the flight search results.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.ISearchOutput} type:\n\n> Here are the flight search results.","additionalProperties":false},"title":"Final selected flight information","description":"Here is the final selected flight information."},"booking_options":{"type":"array","items":{"type":"object","properties":{"book_with":{"type":"string","title":"Reservation site","description":"This is a site where you can book flights of your choice."},"price":{"type":"string","title":"Price","description":"The price of the selected flight."},"book_link":{"type":"string","format":"uri","title":"Reservation Link","description":"Here is a link to book your selected flight."}},"required":["book_with","price","book_link"],"title":"Reservation options","description":"Reservation options.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.IBookingOption} type:\n\n> Reservation options.","additionalProperties":false},"title":"Reservation Information","description":"Here is the information you need to book your chosen flight."}},"required":["flight","booking_options"],"title":"Final flight selection results","description":"Here are the final flight selection results.\n\n------------------------------\n\nDescription of the current {@link IGoogleFlight.IFinalResponse} type:\n\n> Here are the final flight selection results.","additionalProperties":false},"description":"Search for round-trip flights","tags":["Google Flight"]},{"method":"post","path":"/connector/slack/vote","name":"connector_slack_vote","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"title":{"type":"string","title":"Title of vote to be held\n\nIt should be written as a simple one-line markdown and can include Slack emojis."},"items":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"option title"},"link":{"type":"string","title":"option's link"}},"required":["text"],"additionalProperties":false},"title":"options available for voting\n\nIt refers to the options available for voting."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["channel","title","items","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"title":{"type":"string","title":"Title of vote to be held\n\nIt should be written as a simple one-line markdown and can include Slack emojis."},"items":{"type":"array","items":{"type":"object","properties":{"text":{"type":"string","title":"option title"},"link":{"type":"string","title":"option's link"}},"required":["text"],"additionalProperties":false},"title":"options available for voting\n\nIt refers to the options available for voting."}},"required":["channel","title","items"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"blocks":{"type":"array","items":{},"title":"title blocks"},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"additionalProperties":false},"description":"Send Slack Custom Template Messages for Voting","tags":["Slack"]},{"method":"post","path":"/connector/slack/conversation/mark","name":"connector_slack_conversation_mark","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to mark"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["channel","ts","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to mark"}},"required":["channel","ts"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Marks a specific message in a Slack channel as read\n\nYou need to know both the channel ID and the ts value of the message.","tags":["Slack"]},{"method":"post","path":"/connector/slack/scheduleMessage/text","name":"connector_slack_scheduleMessage_text_sendScheduleMessage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"Transfer Schedule Time","description":"You can schedule the time you want to send the message in advance.\nThe scheduled time must be in the same form as the ts property in the Message."},"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts\n\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["post_at","channel","text","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"Transfer Schedule Time","description":"You can schedule the time you want to send the message in advance.\nThe scheduled time must be in the same form as the ts property in the Message."},"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts\n\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message."},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."}},"required":["post_at","channel","text"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["post_at"],"additionalProperties":false},"description":"Create a schduled message\n\nBy default,\nit is not much different from sending a message except for specifying a schduled time,\nand requires a channel ID and message content.\nIf the message you want to schedule is within a specific thread, you must pass the ts value of the parent message.\n\nMessages booked through this feature are not visible in the Slack desktop app and can only be canceled through the API.\nTherefore, be careful in writing messages.\nIf you want to cancel, please refer to the message created through another connector and call the delete connector again.\n\nUsers may be embarrassed if the message you booked is not viewed in the Slack desktop app,\nso although it cannot be viewed before and after transmission,\nit would be a good idea to let them know that it will actually be transmitted in our service.","tags":["Slack"]},{"method":"delete","path":"/connector/slack/scheduleMessage","name":"connector_slack_scheduleMessage_deleteScheduleMessage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"scheduled_message_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-scheduled-messages","jmesPath":"scheduled_messages[].{value:id, label:text}"},"title":"scheduled message id to delete"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["channel","scheduled_message_id","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"scheduled_message_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-scheduled-messages","jmesPath":"scheduled_messages[].{value:id, label:text}"},"title":"scheduled message id to delete"}},"required":["channel","scheduled_message_id"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete the scheduled message\n\nTo clear a scheduled message,\nyou must get the exact id of that message, so you must first use the scheduled message lookup connector.\nWhen using this connector,\nthe ID of the channel is also required, which can be retrieved from the message object by querying the channel or by querying the scheduled message.","tags":["Slack"]},{"method":"post","path":"/connector/slack/postMessage/text/myself","name":"connector_slack_postMessage_text_myself_sendTextToMyself","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"text":{"type":"string","title":"message to send"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["text","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"text":{"type":"string","title":"message to send"}},"required":["text"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"additionalProperties":false},"description":"post text message to myself.\n\nsend message to myself\n\nHere, you can send a message as long as you have the message.\nThis feature identifies who the token's users are inside and sends a message to themselves.\nTherefore, even if you don't specify a channel,\nyou send a message to the `im` channel that corresponds to your own user id.","tags":["Slack"]},{"method":"post","path":"/connector/slack/postMessage/reply","name":"connector_slack_postMessage_reply_sendReply","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to reply"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["ts","channel","text","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to reply"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."}},"required":["ts","channel","text"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"additionalProperties":false},"description":"post reply message to thread.\n\nsend reply message to thread\n\nCreates a reply.\nTo reply, you must first look up the thread.\nYou can look up the thread and pass on the 'ts' value of that thread.\nYou still need the channel's ID here.\nThe channel's ID will start with a C or D and be an unknown string,\nnot a natural language name recognized by the user.\nTherefore, if you don't know the channel ID, you should also look up the channel.","tags":["Slack"]},{"method":"post","path":"/connector/slack/postMessage/text","name":"connector_slack_postMessage_text_sendText","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["channel","text","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."}},"required":["channel","text"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"additionalProperties":false},"description":"post text message.\n\nsend message to channel\n\nHere, you can send a message as long as you have the message and channel information you want to send.\nSlack is a very close service to work, so it's dangerous to send messages that haven't been confirmed.\nYou must send the contents after receiving confirmation from the user.\n\nIf you want to send a message to a DM channel, you need to search for an IM channel.\nMost IM channel IDs will start with 'D', but if the value provided by the user is a value that starts with 'U',\nthis is most likely the user ID of the IM channel, not the channel.\nYou need to search for a user starting with that ID and then send a message.","tags":["Slack"]},{"method":"put","path":"/connector/slack/message","name":"connector_slack_message_updateMessage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts to update"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["thread_ts","channel","text","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"thread_ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"thread ts to update"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{ value: im_channel_id, label: display_name }"}}]},"text":{"type":"string","title":"message to send","description":"When a user enters a markdown format string, the internal function modifies it to the format of the slack.\nUsers can put text in accordance with the usual markdown grammar.\nFor user readability, it is recommended that the string be sent with appropriate new-line characters."}},"required":["thread_ts","channel","text"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."}},"required":["ts"],"additionalProperties":false},"description":"Update message body in thread.\n\nUpdate message body\n\nUse to modify messages sent by users.\nIf the message is not sent by the user, user cannot modify it.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-scheduled-messages","name":"connector_slack_get_scheduled_messages_getScheduledMessages","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"scheduled_messages":{"type":"array","items":{"type":"object","properties":{"post_at":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"date_created":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"when the user scheduled the message"},"text":{"type":"string","title":"message contents","description":"When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property."},"attachments":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title\n\nLarge title text near the top of the attachment."},"id":{"type":"number","title":"id"}},"required":[],"additionalProperties":false},"title":"Attachments","description":"Attachement contains all types of files and can sometimes be an external link.\nIt is not the type that can be confirmed because the internal properties can vary depending on the type of block it is making up."},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"id":{"type":"string","title":"id of scheduled message"},"post_at_date":{"type":"string","title":"date-time format of post_at"}},"required":["post_at","date_created","text","channel","id","post_at_date"],"additionalProperties":false},"title":"scheduled messages"},"next_cursor":{"type":"string","nullable":true}},"required":["scheduled_messages","next_cursor"],"additionalProperties":false},"description":"Get a list of scheduled messages\n\nLook up the messages you booked.\nYou can use `post_at` and `post_at_date` to find out when the message will be sent.\nIf you want to clear the message, use the `id` value in the scheduled message.\n\nIf a user wants to send a reservation message to himself,\nhe or she should look up both the user and the 'im' channel, then find the 'im' channel with his or her user ID and send it to that channel.\nWhat is on the 'im' channel includes not only the user's own channel, but also all the channels that can send and receive direct messages for each user.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-user-details","name":"connector_slack_get_user_details_getUserDetails","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"userIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{value: id, label: display_name}"}},"minItems":1,"title":"userIds\n\nYou can enter the ID value of the user who wants to look up the details."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["userIds","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"userIds":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{value: id, label: display_name}"}},"minItems":1,"title":"userIds\n\nYou can enter the ID value of the user who wants to look up the details."}},"required":["userIds"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"fields":{"type":"object","properties":{},"required":[],"description":"Construct a type with a set of properties K of type T","additionalProperties":{"type":"string"}},"id":{"type":"string","title":"User ID","description":"Indicates the ID of the user.\nThis is different from the ID of the DM channel, or IM Channel.\nDM is a communication channel with people in that channel,\nand even if it is 1:1 the user has multiple DM channels,\nso it is not possible to say that the user's ID is a DM channel."},"im_channel_id":{"type":"string","nullable":true},"display_name":{"type":"string","nullable":true},"real_name":{"type":"string","nullable":true},"status_text":{"type":"string","nullable":true}},"required":["fields","id","im_channel_id","display_name","real_name"],"title":"profile","description":"User information will usually include user's directories, start date, email, phone number, and status information.\nThe start date usually records when this member joined Slack or when he joined the team, but all the information here is written by the individual user and not by the HR person.\n\n------------------------------\n\nDescription of the current {@link ISlack.IGetUserDetailOutput} type:\n\n> User information will usually include user's directories, start date, email, phone number, and status information.\n> The start date usually records when this member joined Slack or when he joined the team, but all the information here is written by the individual user and not by the HR person.","additionalProperties":false}},"description":"Inquire user details\n\nInquire the user's detailed profile to acquire information such as phone number, email, and position.\nIt cannot be verified if the user has not filled in.\nThis function receives the user's ID in an array and inquires at once.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-users","name":"connector_slack_get_users_getUsers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"users":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"name","description":"This is the name of the user,\nbut in some countries,\nit may not be possible to call the user's name carelessly,\nand the company should refrain from using it because the position exists."},"id":{"type":"string","title":"User ID","description":"Indicates the ID of the user.\nThis is different from the ID of the DM channel, or IM Channel.\nDM is a communication channel with people in that channel,\nand even if it is 1:1 the user has multiple DM channels,\nso it is not possible to say that the user's ID is a DM channel."},"profile_image":{"type":"string","format":"iri","contentMediaType":"image/*","nullable":true},"slack_team_id":{"type":"string","title":"slack_team_id"},"im_channel_id":{"type":"string","nullable":true},"display_name":{"type":"string","nullable":true},"real_name":{"type":"string","nullable":true},"deleted":{"type":"boolean","title":"deleted","description":"This value is used to distinguish between deleted users."},"status_text":{"type":"string","nullable":true}},"required":["name","id","profile_image","slack_team_id","im_channel_id","display_name","real_name","deleted"],"additionalProperties":false},"title":"user list"},"next_cursor":{"type":"string","nullable":true}},"required":["users","next_cursor"],"additionalProperties":false},"description":"Look up the list of users.\n\nUsers include bots and refer to all users in the team who are looking up.\nHere, you can look up the user's ID and name, the name the user wanted to display, the profile image, and whether the user has been deleted.\nIf you look up the user here, you can send a message to your colleagues on a specific direct channel, such as an `im` ( = channel type. )\n\nThis connector is essential because the `im` channel query only shows the user's ID and does not know who the direct channel is talking to.\n\nThe user has a separate display name.\nA display name is a name that the user has chosen to show.\nTherefore, it would be best to use this name as a courtesy.\n\nIt can look up Slack users, but it can look up the entire user through pagenation.\nThere could be hundreds of people in the company, so you'll have to look at multiple pages.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-replies","name":"connector_slack_get_replies_getReplies","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to look up."},"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["ts","channel","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-channel-histories","jmesPath":"messages[].{value: ts, label: text}"},"title":"ts","description":"It means the 'ts' value of the chat you want to look up."},"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["ts","channel"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"replies":{"type":"array","items":{"type":"object","properties":{"username":{"type":"string","nullable":true},"user_profile":{"type":"string","format":"iri","nullable":true},"link":{"type":"string","format":"iri","title":"shortcut link","description":"Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times."},"text":{"type":"string","title":"message contents","description":"When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property."},"user":{"type":"string","nullable":true},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"reply_count":{"type":"number","title":"reply_count","description":"Indicates the number of replies on this thread.\nIf there are many replies, active discussions are underway."},"reply_users_count":{"type":"number","title":"reply_users_count","description":"This means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread."},"ts_date":{"type":"string","title":"date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'."},"links":{"type":"array","items":{"type":"string","format":"iri"},"title":"links\n\nLinks from the chat"}},"required":["username","user_profile","link","text","user","channel","ts","reply_count","reply_users_count","ts_date","links"],"additionalProperties":false},"title":"replies","description":"This value refers to replies that depend on the currently viewed thread."},"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"User ID","description":"Indicates the ID of the user.\nThis is different from the ID of the DM channel, or IM Channel.\nDM is a communication channel with people in that channel,\nand even if it is 1:1 the user has multiple DM channels,\nso it is not possible to say that the user's ID is a DM channel."},"im_channel_id":{"type":"string","nullable":true},"display_name":{"type":"string","nullable":true}},"required":["id","im_channel_id","display_name"],"additionalProperties":false},"title":"members","description":"This is a list of people who participated in the conversation in this conversation list."},"usergroups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"ID","description":"The ID of the user group."},"team_id":{"type":"string","title":"Team ID","description":"The ID of the team."},"is_usergroup":{"type":"boolean","title":"Is User Group","description":"Indicates if the object is a user group."},"name":{"type":"string","title":"Name","description":"Friendly name of the group."},"description":{"type":"string","title":"Description","description":"Purpose of the group (optional)."},"handle":{"type":"string","title":"Handle","description":"Value used to notify group members via a mention without a leading @ sign."},"is_external":{"type":"boolean","title":"Is External","description":"Indicates if the user group is external."},"date_create":{"type":"number","title":"Date Created","description":"Unix timestamp of when the group was created."},"date_update":{"type":"number","title":"Date Updated","description":"Unix timestamp of when the group was last updated."},"date_delete":{"type":"number","title":"Date Deleted","description":"Non-zero value for disabled groups."},"auto_type":{"type":"string","enum":["admins","owners"],"nullable":true},"created_by":{"type":"string","title":"Created By","description":"User ID of the member who created the group."},"updated_by":{"type":"string","title":"Updated By","description":"User ID of the member who updated the group."},"deleted_by":{"type":"string","nullable":true},"prefs":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"},"title":"Channels","description":"Default channels members will be invited to upon joining."},"groups":{"type":"array","items":{"type":"string"},"title":"Groups","description":"Default private channels members will be invited to upon joining."}},"required":["channels","groups"],"title":"Preferences","description":"Contains default channels and groups (private channels) that members of this group will be invited to upon joining.","additionalProperties":false},"users":{"type":"array","items":{"type":"string"},"title":"Users","description":"List of user object IDs belonging to the group (optional).\n\nIf you want to look up a particular user, you can find out if this property has that user ID.\nIf you want to see the user's nickname or name that corresponds to the user's ID, refer to the User Inquiry connector."},"user_count":{"type":"number","title":"User Count","description":"Total number of users in the group."}},"required":["id","team_id","is_usergroup","name","handle","is_external","date_create","date_update","date_delete","auto_type","created_by","updated_by","deleted_by","prefs","user_count"],"title":"UserGroup","description":"Represents a user group with various properties like ID, name, and user details.\n\n------------------------------\n\nDescription of the current {@link ISlack.UserGroup} type:\n\n> Represents a user group with various properties like ID, name, and user details.","additionalProperties":false},"title":"usergroups"},"channel":{"type":"object","properties":{"name":{"type":"string","nullable":true}},"required":[],"title":"Channel information","additionalProperties":false},"next_cursor":{"type":"string","nullable":true}},"required":["replies","members","usergroups","channel","next_cursor"],"additionalProperties":false},"description":"Inquire the inside of the thread in History\n\nIf you have inquired the history of a channel,\nyou can use the 'ts' values of its history elements to query the internal thread for each history again.\nEach channel history has a number of replies, so if this number is more than 1, it is worth looking up.\n'Reply' is basically no different from the 'Message'(=Channel History).","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-channel-link-histories","name":"slack_get_channel_link_histories_getChannelLinkHistories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"username":{"type":"string","nullable":true},"user_profile":{"type":"string","format":"iri","nullable":true},"link":{"type":"string","format":"iri","title":"shortcut link","description":"Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times."},"text":{"type":"string","title":"message contents","description":"When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property."},"user":{"type":"string","nullable":true},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"reply_count":{"type":"number","title":"reply_count","description":"Indicates the number of replies on this thread.\nIf there are many replies, active discussions are underway."},"reply_users_count":{"type":"number","title":"reply_users_count","description":"This means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread."},"ts_date":{"type":"string","title":"date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'."},"links":{"type":"array","items":{"type":"string","format":"iri"},"title":"links\n\nLinks from the chat"}},"required":["username","user_profile","link","text","user","channel","ts","reply_count","reply_users_count","ts_date","links"],"additionalProperties":false},"title":"message","description":"This refers to the history of conversations made on the channel.\nThe closer you are to the 0th in the array, the more recent it is.\nHowever, Slack's message can be modified, so just because it is the 0th, it may not be the last writing/modified."},"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"User ID","description":"Indicates the ID of the user.\nThis is different from the ID of the DM channel, or IM Channel.\nDM is a communication channel with people in that channel,\nand even if it is 1:1 the user has multiple DM channels,\nso it is not possible to say that the user's ID is a DM channel."},"im_channel_id":{"type":"string","nullable":true},"display_name":{"type":"string","nullable":true}},"required":["id","im_channel_id","display_name"],"additionalProperties":false},"title":"members\n\nThis is a list of people who participated in the conversation in this conversation list."},"usergroups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"ID","description":"The ID of the user group."},"team_id":{"type":"string","title":"Team ID","description":"The ID of the team."},"is_usergroup":{"type":"boolean","title":"Is User Group","description":"Indicates if the object is a user group."},"name":{"type":"string","title":"Name","description":"Friendly name of the group."},"description":{"type":"string","title":"Description","description":"Purpose of the group (optional)."},"handle":{"type":"string","title":"Handle","description":"Value used to notify group members via a mention without a leading @ sign."},"is_external":{"type":"boolean","title":"Is External","description":"Indicates if the user group is external."},"date_create":{"type":"number","title":"Date Created","description":"Unix timestamp of when the group was created."},"date_update":{"type":"number","title":"Date Updated","description":"Unix timestamp of when the group was last updated."},"date_delete":{"type":"number","title":"Date Deleted","description":"Non-zero value for disabled groups."},"auto_type":{"type":"string","enum":["admins","owners"],"nullable":true},"created_by":{"type":"string","title":"Created By","description":"User ID of the member who created the group."},"updated_by":{"type":"string","title":"Updated By","description":"User ID of the member who updated the group."},"deleted_by":{"type":"string","nullable":true},"prefs":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"},"title":"Channels","description":"Default channels members will be invited to upon joining."},"groups":{"type":"array","items":{"type":"string"},"title":"Groups","description":"Default private channels members will be invited to upon joining."}},"required":["channels","groups"],"title":"Preferences","description":"Contains default channels and groups (private channels) that members of this group will be invited to upon joining.","additionalProperties":false},"users":{"type":"array","items":{"type":"string"},"title":"Users","description":"List of user object IDs belonging to the group (optional).\n\nIf you want to look up a particular user, you can find out if this property has that user ID.\nIf you want to see the user's nickname or name that corresponds to the user's ID, refer to the User Inquiry connector."},"user_count":{"type":"number","title":"User Count","description":"Total number of users in the group."}},"required":["id","team_id","is_usergroup","name","handle","is_external","date_create","date_update","date_delete","auto_type","created_by","updated_by","deleted_by","prefs","user_count"],"title":"UserGroup","description":"Represents a user group with various properties like ID, name, and user details.\n\n------------------------------\n\nDescription of the current {@link ISlack.UserGroup} type:\n\n> Represents a user group with various properties like ID, name, and user details.","additionalProperties":false},"title":"usergroups"},"channel":{"type":"object","properties":{"name":{"type":"string","nullable":true}},"required":[],"title":"Channel information","additionalProperties":false},"next_cursor":{"type":"string","nullable":true}},"required":["messages","members","usergroups","channel","next_cursor"],"additionalProperties":false},"description":"get links from channel histories.\n\nGet Channel Links from Channel Histories\n\nRetrieves conversations in and out of channels.\nA channel ID starts with 'C' or 'D' (uppercase). If no ID is provided, search by channel name or keywords.\nUsers often don’t know channel IDs, so prioritize finding the channel unless the input starts with 'C' or 'D'.\nSearch conversations within specific timeframes using datetime formats.\nFilters out messages without links, retaining only those with links in the links property.\nThis ensures efficient link extraction from conversation histories.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-channel-histories","name":"connector_slack_get_channel_histories_getChannelHistories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"channel_type":{"type":"string","enum":["private","public","im"]},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only messages before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only messages after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."},"cursor":{"type":"string","title":"cursor","description":"If you pass the next_cursor or cursor value received from the previous inquiry, you can get additional data from the data.\nIf the next_cursor is not null, you can retrieve additional data.\nIf you don't put a value, it will be recognized as the first page.\nThis should never be null. If you don't have a value, don't forward properties."}},"required":["channel"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"username":{"type":"string","nullable":true},"user_profile":{"type":"string","format":"iri","nullable":true},"link":{"type":"string","format":"iri","title":"shortcut link","description":"Link to view the conversation history immediately.\nWe can provide you with a shortcut link if user want, but you don't have to expose it to them in normal times."},"text":{"type":"string","title":"message contents","description":"When users occasionally call others, they can be called in the form of '@USERNAME', which is called a tag.\nIn the conversation history, the link and code box are abbreviated to <LINK/> and <CODE/>, respectively.\nFor users, it is replaced by a user name, Like <@USERNAME>.\n<@USERNAME> is about calling someone else, and it's not the name of the person who started the conversation, so be careful.\nif you want to find who started this conversation, check 'user' property."},"user":{"type":"string","nullable":true},"channel":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id"},"ts":{"type":"string","x-wrtn-placeholder":"1234567890.123456","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack."},"reply_count":{"type":"number","title":"reply_count","description":"Indicates the number of replies on this thread.\nIf there are many replies, active discussions are underway."},"reply_users_count":{"type":"number","title":"reply_users_count","description":"This means the person who has one or more Replys in this thread.\nThe number of unique people discussing in the thread."},"ts_date":{"type":"string","title":"date format of `ts`\n\nThis is the value changed to ISO String to make it easier to recognize the current time value by separating 'ts'."},"links":{"type":"array","items":{"type":"string","format":"iri"},"title":"links\n\nLinks from the chat"}},"required":["username","user_profile","link","text","user","channel","ts","reply_count","reply_users_count","ts_date","links"],"additionalProperties":false},"title":"message","description":"This refers to the history of conversations made on the channel.\nThe closer you are to the 0th in the array, the more recent it is.\nHowever, Slack's message can be modified, so just because it is the 0th, it may not be the last writing/modified."},"members":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"User ID","description":"Indicates the ID of the user.\nThis is different from the ID of the DM channel, or IM Channel.\nDM is a communication channel with people in that channel,\nand even if it is 1:1 the user has multiple DM channels,\nso it is not possible to say that the user's ID is a DM channel."},"im_channel_id":{"type":"string","nullable":true},"display_name":{"type":"string","nullable":true}},"required":["id","im_channel_id","display_name"],"additionalProperties":false},"title":"members\n\nThis is a list of people who participated in the conversation in this conversation list."},"usergroups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"ID","description":"The ID of the user group."},"team_id":{"type":"string","title":"Team ID","description":"The ID of the team."},"is_usergroup":{"type":"boolean","title":"Is User Group","description":"Indicates if the object is a user group."},"name":{"type":"string","title":"Name","description":"Friendly name of the group."},"description":{"type":"string","title":"Description","description":"Purpose of the group (optional)."},"handle":{"type":"string","title":"Handle","description":"Value used to notify group members via a mention without a leading @ sign."},"is_external":{"type":"boolean","title":"Is External","description":"Indicates if the user group is external."},"date_create":{"type":"number","title":"Date Created","description":"Unix timestamp of when the group was created."},"date_update":{"type":"number","title":"Date Updated","description":"Unix timestamp of when the group was last updated."},"date_delete":{"type":"number","title":"Date Deleted","description":"Non-zero value for disabled groups."},"auto_type":{"type":"string","enum":["admins","owners"],"nullable":true},"created_by":{"type":"string","title":"Created By","description":"User ID of the member who created the group."},"updated_by":{"type":"string","title":"Updated By","description":"User ID of the member who updated the group."},"deleted_by":{"type":"string","nullable":true},"prefs":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"},"title":"Channels","description":"Default channels members will be invited to upon joining."},"groups":{"type":"array","items":{"type":"string"},"title":"Groups","description":"Default private channels members will be invited to upon joining."}},"required":["channels","groups"],"title":"Preferences","description":"Contains default channels and groups (private channels) that members of this group will be invited to upon joining.","additionalProperties":false},"users":{"type":"array","items":{"type":"string"},"title":"Users","description":"List of user object IDs belonging to the group (optional).\n\nIf you want to look up a particular user, you can find out if this property has that user ID.\nIf you want to see the user's nickname or name that corresponds to the user's ID, refer to the User Inquiry connector."},"user_count":{"type":"number","title":"User Count","description":"Total number of users in the group."}},"required":["id","team_id","is_usergroup","name","handle","is_external","date_create","date_update","date_delete","auto_type","created_by","updated_by","deleted_by","prefs","user_count"],"title":"UserGroup","description":"Represents a user group with various properties like ID, name, and user details.\n\n------------------------------\n\nDescription of the current {@link ISlack.UserGroup} type:\n\n> Represents a user group with various properties like ID, name, and user details.","additionalProperties":false},"title":"usergroups"},"channel":{"type":"object","properties":{"name":{"type":"string","nullable":true}},"required":[],"title":"Channel information","additionalProperties":false},"next_cursor":{"type":"string","nullable":true}},"required":["messages","members","usergroups","channel","next_cursor"],"additionalProperties":false},"description":"get channel histories.\n\nGet Channel Histories\n\nRetrieves conversations in and out of channels.\nChannel IDs start with 'C' or 'D' (uppercase). If no ID is provided, search by channel name or keywords.\nUsers typically don’t know channel IDs, so prioritize finding the channel unless the input starts with 'C' or 'D'.\nSearch conversations within specific timeframes using datetime formats.\nIn history, links and code boxes are shown as <LINK/> and <CODE/>. Mentions appear as <@USERNAME>, but this indicates a mention, not the conversation starter.\nFilters by date should prioritize the datetime format for accuracy.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-private-channels","name":"connector_slack_get_private_channels_getPrivateChannels","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"}},"required":[],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"channel name"},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id","description":"The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["name","id"],"additionalProperties":false}},"description":"get private channels\n\nView channels.\nThis connector will only look up its own `private` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`private` channel is a locked channel that can only be viewed by those invited to the channel.\n\nIf you can't find the channel ID by name, it might be because it's on the next page, not because you don't have a channel.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-public-channels","name":"connector_slack_get_public_channels_getPublicChannels","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"}},"required":[],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"channel name"},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id","description":"The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["name","id"],"additionalProperties":false}},"description":"get public channels\n\nView channels.\nThis connector will only look up its own `public` channel.\nThe channel ID is required to look up the conversation history within the channel later.\nThe `public` channel is anyone's accessible.\nThis does not require an invitation process, and users can join the channel themselves if necessary.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-im-channels","name":"connector_slack_get_im_channels_getImChannels","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","deprecated":true,"title":"limit"},"cursor":{"type":"string","deprecated":true,"title":"cursor"}},"required":[],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"request condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"created":{"type":"integer","title":"created time"},"is_im":{"type":"boolean","enum":[true],"title":"Is it the `im` type or not"},"is_org_shared":{"type":"boolean","title":"is org shared"},"is_user_deleted":{"type":"boolean","title":"is user deleted"},"priority":{"type":"number","title":"priority"},"user":{"type":"string","title":"channel owner's id"},"context_team_id":{"type":"string","title":"channel owner's team id"},"username":{"type":"string","nullable":true},"id":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","title":"channel id","description":"The channel ID starts with 'C' and 'D', and for a private DM channel, 'D'.\nBut Sometimes there are channel names that start with a G."}},"required":["created","is_im","is_org_shared","is_user_deleted","priority","user","context_team_id","id"],"additionalProperties":false}},"description":"get im channels\n\nView channels.\nThis connector will only look up its own `im` channel.\nThe channel ID is required to look up the conversation history within the channel later.\n`im` channel is a conversation that takes place in one's profile and refers to a personal channel that can only be viewed by oneself.\nUsers also use chat as storage or notepad, such as storing files and images here.\n\nTo send a 1:1 message to other users, you must first look up the `im` channel.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-files","name":"connector_slack_get_files_getFiles","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"number","default":1,"title":"page"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"user":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{value: id, label: display_name}"},"title":"user id\n\nIf you only want to check files sent by a particular user, enter your ID."},"types":{"type":"object","properties":{"spaces":{"type":"boolean","title":"spaces","description":"Slack's Post is a feature that allows users to write and share long forms of documents or writings.\nIt is more formatting free than regular messages and can contain code blocks or sections, which are useful for creating structured documents.\nSlack often categorizes these documented files into spaces, helping to share knowledge or information easily within the team."},"snippets":{"type":"boolean","title":"snippets","description":"Snippets are used to share short code or text snippets.\nThey are usually useful when programmers share short code blocks or snippets of log files with their teams.\nSnippets quickly uploads text or code, and allows others to refer to or copy the content. In Slack, these files are classified into a file type called snippets."},"images":{"type":"boolean","title":"images"},"gdocs":{"type":"boolean","title":"gdocs\n\nGoogle docs"},"zips":{"type":"boolean","title":"zips"},"pdfs":{"type":"boolean","title":"pdfs"}},"required":[],"title":"file types to include","description":"The file types you may encounter include (but are not limited to):\nIf you want to look up all of them regardless of the file type, you can ignore the properties.\nIf the file type is important, you can specify the file type property as true inside the object.","additionalProperties":false},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only files before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only files after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"number","default":1,"title":"page"},"channel":{"oneOf":[{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-public-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-private-channels","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-im-channels","jmesPath":"[].{value:id, label:name || '개인 채널'}"}}]},"user":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/slack/get-users","jmesPath":"users[].{value: id, label: display_name}"},"title":"user id\n\nIf you only want to check files sent by a particular user, enter your ID."},"types":{"type":"object","properties":{"spaces":{"type":"boolean","title":"spaces","description":"Slack's Post is a feature that allows users to write and share long forms of documents or writings.\nIt is more formatting free than regular messages and can contain code blocks or sections, which are useful for creating structured documents.\nSlack often categorizes these documented files into spaces, helping to share knowledge or information easily within the team."},"snippets":{"type":"boolean","title":"snippets","description":"Snippets are used to share short code or text snippets.\nThey are usually useful when programmers share short code blocks or snippets of log files with their teams.\nSnippets quickly uploads text or code, and allows others to refer to or copy the content. In Slack, these files are classified into a file type called snippets."},"images":{"type":"boolean","title":"images"},"gdocs":{"type":"boolean","title":"gdocs\n\nGoogle docs"},"zips":{"type":"boolean","title":"zips"},"pdfs":{"type":"boolean","title":"pdfs"}},"required":[],"title":"file types to include","description":"The file types you may encounter include (but are not limited to):\nIf you want to look up all of them regardless of the file type, you can ignore the properties.\nIf the file type is important, you can specify the file type property as true inside the object.","additionalProperties":false},"latestDateTime":{"type":"string","format":"date-time","title":"latestDateTime","description":"Only files before this date-time will be included in results. Default is the current time.\nIt is a value that takes precedence over 'latest', 'latestTimestamp'."},"oldestDateTime":{"type":"string","format":"date-time","title":"oldestDateTime","description":"Only files after this date-time will be included in results.\nIt is a value that takes precedence over 'oldest', 'oldestTimestamp'."},"limit":{"type":"integer","minimum":1,"maximum":1000,"x-wrtn-placeholder":"200","title":"limit","description":"Indicates the number of data to look up at at once.\nIf not entered, use 100 as the default.\nThis should never be null. If you don't have a value, don't forward properties.\n\nIn reality, the value can be from 1 to 1000, so the recommendation is a number over 200.\nIf there is a user's request and there is a section that is cumbersome to page, you can enter 200.\n\nSince it is burdensome for users to inquire too many conversation details,\nit is recommended to page 100 to 200 conversation details at a time if more data is needed.\nAlternatively, it is also helpful to get a date to inquire from the user."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ok":{"type":"boolean"},"files":{"type":"array","items":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string","pattern":"^((C(.*))|(D(.*))|(G(.*)))"},"title":"channels"},"name":{"type":"string","title":"name"},"id":{"type":"string","title":"id"},"user":{"type":"string","title":"user"},"size":{"type":"integer","title":"size"},"created":{"type":"number","title":"created"},"comments_count":{"type":"integer","title":"comments_count"},"mimetype":{"type":"string","title":"mimetype"},"url_private":{"type":"string","format":"iri","title":"url_private"},"url_private_download":{"type":"string","format":"iri","title":"url_private_download"},"thumb_1024":{"type":"string","format":"iri","title":"thumb_1024"}},"required":["channels","name","id","user","size","created","comments_count","mimetype"],"additionalProperties":false}},"paging":{"type":"object","properties":{"count":{"type":"number","title":"current file count"},"total":{"type":"number","title":"total page"},"page":{"type":"number","title":"current page"},"pages":{"type":"number","title":"total page"}},"required":["count","total","page","pages"],"additionalProperties":false}},"required":["ok","files","paging"],"title":"File Lookup Results","additionalProperties":false},"description":"get files in workspace\n\nYou can look up Slack workspace and channels, or all files sent from users.\nIt is pagenation and can filter by file type, and also provides thumbnail links, download links, and original message links.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/get-user-groups","name":"connector_slack_get_user_groups_getUserGroups","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ok":{"type":"boolean","title":"ok"},"usergroups":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"ID","description":"The ID of the user group."},"team_id":{"type":"string","title":"Team ID","description":"The ID of the team."},"is_usergroup":{"type":"boolean","title":"Is User Group","description":"Indicates if the object is a user group."},"name":{"type":"string","title":"Name","description":"Friendly name of the group."},"description":{"type":"string","title":"Description","description":"Purpose of the group (optional)."},"handle":{"type":"string","title":"Handle","description":"Value used to notify group members via a mention without a leading @ sign."},"is_external":{"type":"boolean","title":"Is External","description":"Indicates if the user group is external."},"date_create":{"type":"number","title":"Date Created","description":"Unix timestamp of when the group was created."},"date_update":{"type":"number","title":"Date Updated","description":"Unix timestamp of when the group was last updated."},"date_delete":{"type":"number","title":"Date Deleted","description":"Non-zero value for disabled groups."},"auto_type":{"type":"string","enum":["admins","owners"],"nullable":true},"created_by":{"type":"string","title":"Created By","description":"User ID of the member who created the group."},"updated_by":{"type":"string","title":"Updated By","description":"User ID of the member who updated the group."},"deleted_by":{"type":"string","nullable":true},"prefs":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"},"title":"Channels","description":"Default channels members will be invited to upon joining."},"groups":{"type":"array","items":{"type":"string"},"title":"Groups","description":"Default private channels members will be invited to upon joining."}},"required":["channels","groups"],"title":"Preferences","description":"Contains default channels and groups (private channels) that members of this group will be invited to upon joining.","additionalProperties":false},"users":{"type":"array","items":{"type":"string"},"title":"Users","description":"List of user object IDs belonging to the group (optional).\n\nIf you want to look up a particular user, you can find out if this property has that user ID.\nIf you want to see the user's nickname or name that corresponds to the user's ID, refer to the User Inquiry connector."},"user_count":{"type":"number","title":"User Count","description":"Total number of users in the group."}},"required":["id","team_id","is_usergroup","name","handle","is_external","date_create","date_update","date_delete","auto_type","created_by","updated_by","deleted_by","prefs","user_count"],"title":"UserGroup","description":"Represents a user group with various properties like ID, name, and user details.\n\n------------------------------\n\nDescription of the current {@link ISlack.UserGroup} type:\n\n> Represents a user group with various properties like ID, name, and user details.","additionalProperties":false},"title":"usergroups"}},"required":["ok","usergroups"],"additionalProperties":false},"description":"Get usergroups in workspace.\n\nget user groups in workspace\n\nLook up user groups. This can be used to call all specific groups by tagging.\nHowever, it is difficult to know if it is an appropriate user group other than 'handle' because all internal users come out with IDs.\nIf you want to see a list of users, use the User Inquiry connector together.\nIf you want to see the user's nickname or name that corresponds to the user's ID, refer to the User Inquiry connector.","tags":["Slack"]},{"method":"patch","path":"/connector/slack/me","name":"connector_slack_me_getMyInfo","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"user":{"type":"object","properties":{"user_id":{"type":"string","title":"User ID","description":"Request's User ID.\nThis is identifier of requester from others."},"team_id":{"type":"string","title":"Team ID"},"team":{"type":"string","title":"Team Name"},"name":{"type":"string","title":"User Name","description":"Requester's User Name.\nBut, This is not unique. so This can't be used as an identifier."}},"required":["user_id","team_id","team","name"],"title":"user","additionalProperties":false}},"required":["user"],"additionalProperties":false},"description":"Get Requester's Information\n\nYou can use that function to get requester's information.\nIf you want to get information about requester, call this function.\nThen you can use that information wherever you need requester's information.","tags":["Slack"]},{"method":"delete","path":"/connector/slack/messages","name":"connector_slack_messages_deleteMessage","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"channel":{"type":"string","title":"Channel ID"},"user_id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"connector/slack/me","jmesPath":"user.{value: id, label: name}"},"title":"User ID","description":"User ID the of message.\nThis property is for checking log.\nyou can use only the `user_id` of messages matched requester's `user_id`"},"ts":{"type":"string","x-wrtn-placeholder":"1405894322.002768","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.\nYou must put the ts of the message sent by requester not others.\nyou can use only the `ts` of messages matched requester's `user_id`"}},"required":["channel","user_id","ts"],"additionalProperties":false},"title":"Message Info List","description":"Even if the user wants to delete \"all\" or \"every\" messages, you can delete only requester's messages."},"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["messages","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"channel":{"type":"string","title":"Channel ID"},"user_id":{"type":"string","x-wrtn-prerequisite":{"method":"patch","path":"connector/slack/me","jmesPath":"user.{value: id, label: name}"},"title":"User ID","description":"User ID the of message.\nThis property is for checking log.\nyou can use only the `user_id` of messages matched requester's `user_id`"},"ts":{"type":"string","x-wrtn-placeholder":"1405894322.002768","title":"timestamp","description":"for example, `1721804246.083609`.\nThis is the time value expression method used by Slack.\nYou must put the ts of the message sent by requester not others.\nyou can use only the `ts` of messages matched requester's `user_id`"}},"required":["channel","user_id","ts"],"additionalProperties":false},"title":"Message Info List","description":"Even if the user wants to delete \"all\" or \"every\" messages, you can delete only requester's messages."}},"required":["messages"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"slack","x-wrtn-secret-scopes":["channels:read","channels:history","users.profile:read","im:read","im:history","groups:history","groups:read","chat:write","users:read","files:read","usergroups:read","team:read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete Messages\n\nYou must strictly distinguish between the requester's information and other's information. Always verify whether the information being requested pertains to the requester or someone else.\nBefore you call this function, you must call the function that gets requester's information.\nYou must only use requester's information to delete messages.\nYou must strictly filter the messages you delete to only those that match the requester's `User ID`\nYou must look through all the messages and only delete the ones that match the requester's user id.\nDon't read one message and stop working on it because it has a different user id of requester.\nTo delete messages,\nYou need the timestamps of the messages you wrote that you want to delete and channel id.","tags":["Slack"]},{"method":"delete","path":"/connector/jira/issues/comments","name":"connector_jira_issues_comments_deleteComment","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"commentId":{"type":"string","title":"ID of comment to delete"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueIdOrKey","commentId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"commentId":{"type":"string","title":"ID of comment to delete"}},"required":["issueIdOrKey","commentId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"delete comment.\n\nDelete the comment\n\nDelete the comments on the issue.\nIn order to delete the comments on the issue, you need the issue ID or key and the ID of the comment to be deleted.\nPlease be careful because deleted comments will not be able to be viewed again.","tags":["Jira"]},{"method":"post","path":"/connector/jira/issues/comments/markdown","name":"connector_jira_issues_comments_markdown_createComment","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"version":{"type":"number","enum":[1],"title":"version"},"type":{"type":"string","enum":["doc"],"title":"type"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["version","type","content"],"additionalProperties":false},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["body","issueIdOrKey","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"version":{"type":"number","enum":[1],"title":"version"},"type":{"type":"string","enum":["doc"],"title":"type"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["version","type","content"],"additionalProperties":false},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]}},"required":["body","issueIdOrKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"ID of comment"}},"required":["id"],"additionalProperties":false},"description":"creates a comment on an issue.\n\nCreates a comment on an issue\nHere, user can write the body of the comment you want to write with the ID or key of the issue.","tags":["Jira"]},{"method":"put","path":"/connector/jira/issues/comments/markdown","name":"connector_jira_issues_comments_markdown_updateComment","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"version":{"type":"number","enum":[1],"title":"version"},"type":{"type":"string","enum":["doc"],"title":"type"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["version","type","content"],"additionalProperties":false},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"commentId":{"type":"string","title":"ID of comment to update"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["body","issueIdOrKey","commentId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"object","properties":{"version":{"type":"number","enum":[1],"title":"version"},"type":{"type":"string","enum":["doc"],"title":"type"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["version","type","content"],"additionalProperties":false},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"commentId":{"type":"string","title":"ID of comment to update"}},"required":["body","issueIdOrKey","commentId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"modify comment body.\n\nmodify comment\n\nModify the comment. You can only modify the body of the comment here.\nTo create comment in issue, Just write markdown string format contents.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/issues/get-comments","name":"connector_jira_issues_get_comments_getComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueIdOrKey","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":["issueIdOrKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"comments":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id of comment"},"author":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"additionalProperties":false},"created":{"type":"string","title":"created time of this comment"},"updated":{"type":"string","title":"updated time of this comment"},"updateAuthor":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"additionalProperties":false},"body":{"title":"Content of This Comments"}},"required":["id","author","created","updated","updateAuthor","body"],"additionalProperties":false},"title":"comments"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["comments","total"],"additionalProperties":false},"description":"get comments by issue id or key.\n\nGet comments by issue id or key\n\nThis connector uses the issue's key or ID value to query the comments written on the issue.\nComments are also visible when looking up issues,\nbut not all comments inside are visible,\nso user have to use this connector to look up them in pagination.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/issues/get-transitions","name":"connector_jira_issues_get_transitions_getTransitions","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueIdOrKey","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]}},"required":["issueIdOrKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"transitions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id of transition"},"to":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category","additionalProperties":false}},"required":["description","name","id","statusCategory"],"additionalProperties":false}},"required":["id","to"],"additionalProperties":false},"title":"transition list of this jira issue"}},"required":["transitions"],"additionalProperties":false},"description":"Inquire the transition of an issue, which is an edge on a workflow that allows you to change the status of an issue\nIf the person who designed the workflow for the project defined three states that could be moved from the current state, there would be three edges.\nIn Jira, just because there is a status that can be viewed in a project or issue does not mean that you can change the status unconditionally.\nWhen designing an edge, for example, you can also design an issue in the 'backoff' state to go through the 'in progress' state once.\nIn this case, you need to move two edges to turn the backoff issue into 'done'.","tags":["Jira"]},{"method":"put","path":"/connector/jira/issues/asignee","name":"connector_jira_issues_asignee_assign","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"asigneeId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}]},"issueId":{"type":"string","title":"ID of issue"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["asigneeId","issueId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"asigneeId":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"}}]},"issueId":{"type":"string","title":"ID of issue"}},"required":["asigneeId","issueId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"assign the assignee.\n\nAssign the assignee from the Jira issue","tags":["Jira"]},{"method":"delete","path":"/connector/jira/issues/asignee","name":"connector_jira_issues_asignee_unassign","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueId":{"type":"string","title":"ID of issue"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueId":{"type":"string","title":"ID of issue"}},"required":["issueId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Unassign the assignee from the Jira issue","tags":["Jira"]},{"method":"put","path":"/connector/jira/issues/status","name":"connector_jira_issues_status_updateIssueStatus","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"transitionId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issue-get-transitions","jmesPath":"transitions[].{value:id, label: to.name}"},"title":"ID of transition"},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueIdOrKey","transitionId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"transitionId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issue-get-transitions","jmesPath":"transitions[].{value:id, label: to.name}"},"title":"ID of transition"}},"required":["issueIdOrKey","transitionId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"change issue status.\n\nChange issue status\n\nChanging the status of an issue must be done after inquiring about changeable Transitions from the current issue.\nThis is forced by the person who designed the workflow in the project, so you must change the status in the order set.","tags":["Jira"]},{"method":"put","path":"/connector/jira/issues/{id}","name":"connector_jira_issues_updateIssue","parameters":[{"type":"object","properties":{"id":{"type":"string","description":" issue id to update"},"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true}]}},"required":["id"],"title":"Specify a representative at the same time as you create","additionalProperties":false},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents.","additionalProperties":false},"duedate":{"type":"string","format":"date","title":"due date","description":"date format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"issuetypes[].{value:id, label:name}"},"title":"id of issue type","description":"The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype","additionalProperties":false},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue","description":"Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue","additionalProperties":false},"priority":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:id, label:name}"},"title":"id of proirity","description":"You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority","additionalProperties":false},"project":{"oneOf":[{"type":"object","properties":{"id":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}}]}},"required":["id"],"additionalProperties":false},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"],"additionalProperties":false}]},"summary":{"type":"string","title":"summary","description":"Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":[],"additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["fields","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["id","body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"id":{"type":"string","description":" issue id to update"},"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true}]}},"required":["id"],"title":"Specify a representative at the same time as you create","additionalProperties":false},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents.","additionalProperties":false},"duedate":{"type":"string","format":"date","title":"due date","description":"date format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."},"issuetype":{"type":"object","properties":{"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"issuetypes[].{value:id, label:name}"},"title":"id of issue type","description":"The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype","additionalProperties":false},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue","description":"Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue","additionalProperties":false},"priority":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:id, label:name}"},"title":"id of proirity","description":"You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority","additionalProperties":false},"project":{"oneOf":[{"type":"object","properties":{"id":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}}]}},"required":["id"],"additionalProperties":false},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"],"additionalProperties":false}]},"summary":{"type":"string","title":"summary","description":"Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":[],"additionalProperties":false}},"required":["fields"],"additionalProperties":false}},"additionalProperties":false,"required":["id","body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"update issue in jira.\n\nUpdate an issue\n\nYou can modify any element in the field.\nIt can be used to modify the issue type, person in charge, summary, and description.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully.","tags":["Jira"]},{"method":"post","path":"/connector/jira/issues/markdown","name":"connector_jira_issues_markdown_createIssueByMarkdown","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true}]}},"required":["id"],"title":"Specify a representative at the same time as you create","description":"The person in charge who wants to register must be a registered user in Jira.\nIf the person in charge does not exist, an error will occur.\nYou should not think that the ID of Slack or external service will be the same in Jira.\nIt is a good idea to check the person in charge because the user's ID may be different for each service.","additionalProperties":false},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version\n\nversion only can be number 1"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents.","additionalProperties":false},"issuetype":{"type":"object","properties":{"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"issuetypes[].{value:id, label:name}"},"title":"id of issue type","description":"The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype","description":"The issue type must be set, but the issue type that can be assigned to the project is set.\nUse the Issue Type Inquiry connector to determine which issue types can be set up.","additionalProperties":false},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue","description":"Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue","additionalProperties":false},"priority":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:id, label:name}"},"title":"id of proirity","description":"You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority","description":"The project manager may have prohibited or not set priorities for each issue in the project.\nEven in the case of a project you just created,\nthe priority assignment for each issue may be omitted depending on the user.\nIn this case, priority assignment is not possible through API,\nso you should check the project settings.\n\nIf there is an error when creating it,\nit is likely to be a matter of priority,\nso please create it without priorities.\nAlso, it takes a long time to check the settings for each user on a daily basis,\nso make sure that you don't tell the user about the priority assignment,\nbut present it as an option.","additionalProperties":false},"project":{"oneOf":[{"type":"object","properties":{"id":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}}]}},"required":["id"],"additionalProperties":false},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"],"additionalProperties":false}]},"summary":{"type":"string","title":"summary","description":"Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":["issuetype","project","summary"],"title":"fields\n\nIndicates the fields that you need to fill in when you want to create an issue.","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["fields","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"fields":{"type":"object","properties":{"assignee":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/issues/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/project/get-users-assignable","jmesPath":"[].{value:accountId, label:displayName}"},"nullable":true}]}},"required":["id"],"title":"Specify a representative at the same time as you create","description":"The person in charge who wants to register must be a registered user in Jira.\nIf the person in charge does not exist, an error will occur.\nYou should not think that the ID of Slack or external service will be the same in Jira.\nIt is a good idea to check the person in charge because the user's ID may be different for each service.","additionalProperties":false},"description":{"type":"object","properties":{"type":{"type":"string","enum":["doc"],"title":"type of description\n\nAllow doc type only Now"},"version":{"type":"number","enum":[1],"title":"version\n\nversion only can be number 1"},"content":{"type":"string","title":"contents of description","description":"You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."}},"required":["type","version","content"],"title":"description\n\nThe content of the Jira issue consists of a combination of various contents.","additionalProperties":false},"issuetype":{"type":"object","properties":{"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"issuetypes[].{value:id, label:name}"},"title":"id of issue type","description":"The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."}},"required":["id"],"title":"issuetype","description":"The issue type must be set, but the issue type that can be assigned to the project is set.\nUse the Issue Type Inquiry connector to determine which issue types can be set up.","additionalProperties":false},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."},"parent":{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of parent issue","description":"Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."}},"required":["key"],"title":"parent of this issue","additionalProperties":false},"priority":{"type":"object","properties":{"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:id, label:name}"},"title":"id of proirity","description":"You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."}},"required":["id"],"title":"priority","description":"The project manager may have prohibited or not set priorities for each issue in the project.\nEven in the case of a project you just created,\nthe priority assignment for each issue may be omitted depending on the user.\nIn this case, priority assignment is not possible through API,\nso you should check the project settings.\n\nIf there is an error when creating it,\nit is likely to be a matter of priority,\nso please create it without priorities.\nAlso, it takes a long time to check the settings for each user on a daily basis,\nso make sure that you don't tell the user about the priority assignment,\nbut present it as an option.","additionalProperties":false},"project":{"oneOf":[{"type":"object","properties":{"id":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"[].{value:id, label:name}"}}]}},"required":["id"],"additionalProperties":false},{"type":"object","properties":{"key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-project","jmesPath":"[].{value:key, label:name}"},"title":"key of project"}},"required":["key"],"additionalProperties":false}]},"summary":{"type":"string","title":"summary","description":"Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."}},"required":["issuetype","project","summary"],"title":"fields\n\nIndicates the fields that you need to fill in when you want to create an issue.","additionalProperties":false}},"required":["fields"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"string","title":"ID of the issue that was created just now"},"key":{"type":"string","title":"Key of the issue that was created just now"}},"required":["id","key"],"title":"output of creation of issue","additionalProperties":false},"description":"create issue by markdown in jira.\n\nCreate an Issue with Markdown\n\nRequired: issue type, project, and summary. Use other connectors to find IDs for issue or priority types if unknown.\nWrite the body using predefined content blocks. Check content type guidelines carefully.\nPrioritization depends on project settings. If prioritization fails, remove priority and retry.\nAssignees must exist in the system and may differ from names in other services (e.g., Slack). Verify names within Jira.\nFor errors, create a basic issue using the project key, ID, and text, then update assignee or priority incrementally.\nProvide a link for users to verify the created issue and confirm allocable attributes like assignees and priorities.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issue-detail","name":"connector_jira_get_issue_detail_getIssueDetail","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["issueIdOrKey","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issueIdOrKey":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:id, label:key}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"}}]}},"required":["issueIdOrKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"labels":{"type":"array","items":{"type":"string"},"title":"labels attached to the issue"},"fields":{"type":"object","properties":{"summary":{"type":"string","title":"summary"},"status":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category","additionalProperties":false},"untranslatedName":{"type":"string","title":"untranslated name"}},"required":["description","name","id","statusCategory"],"additionalProperties":false},"assignee":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"issuetype":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","title":"issuetype's id"}},"required":["name","id"],"additionalProperties":false},"reporter":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"priority":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","title":"id"}},"required":["name","id"],"additionalProperties":false},"parent":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the parent issue"},"key":{"type":"string","title":"The key of the parent issue"},"fields":{"type":"object","properties":{"summary":{"type":"string","title":"summary"}},"required":[],"title":"fields","additionalProperties":false}},"required":["id","key","fields"],"additionalProperties":false},"statuscategorychangedate":{"type":"string","nullable":true},"creator":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"comment":{"type":"object","properties":{"maxResults":{"type":"number","title":"Number of comments viewed at one time"},"total":{"type":"number","title":"Total count of comments"},"startAt":{"type":"number","title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"comments":{"type":"array","items":{},"title":"list of comments"}},"required":["maxResults","total","startAt","comments"],"title":"Comment Infomation and Pagination Metadata","additionalProperties":false},"description":{"title":"Description of Issue"}},"required":["status","priority","comment","description"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the issue"},"key":{"type":"string","title":"The key of the issue"}},"required":["fields","id","key"],"additionalProperties":false},"description":"get detailed Issue Information.\n\nGet detailed issue information\n\nProvides more accurate and detailed information, including the title and body of the issue\n\nIt can be used to look up the issue list first, or if you already know the key or ID of the issue.\nIf you do not know the key or ID, it is recommended to use the issue inquiry connector first.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issues","name":"connector_jira_get_issues_getIssues","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"status":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-statuses","jmesPath":"[].{value:id, label:untranslatedName}"},"title":"status"},"labels":{"type":"array","items":{"type":"string"},"title":"label titles\n\nComplex searches are possible using various labels."},"assignee":{"type":"string","title":"name of assignee"},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"keyword":{"type":"string","title":"search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project"},"issuetype":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"[].{label:untranslatedName, value:untranslatedName}"},"title":"issue type"},"reporter":{"type":"string","title":"name of reporter"},"created_start_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"created_end_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"priority":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:name, label:name}"},"title":"priority name","description":"If you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["project_key","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"status":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-statuses","jmesPath":"[].{value:id, label:untranslatedName}"},"title":"status"},"labels":{"type":"array","items":{"type":"string"},"title":"label titles\n\nComplex searches are possible using various labels."},"assignee":{"type":"string","title":"name of assignee"},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"keyword":{"type":"string","title":"search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project"},"issuetype":{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-types","jmesPath":"[].{label:untranslatedName, value:untranslatedName}"},"title":"issue type"},"reporter":{"type":"string","title":"name of reporter"},"created_start_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"created_end_date":{"type":"string","format":"date","title":"Search for issues created after this date"},"priority":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-issue-priorities","jmesPath":"[].{value:name, label:name}"},"title":"priority name","description":"If you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary."}},"required":["project_key"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"issues":{"type":"array","items":{"type":"object","properties":{"link":{"type":"string","format":"iri","title":"Link of issue","description":"User can access by using this link"},"fields":{"type":"object","properties":{"statuscategorychangedate":{"type":"string","nullable":true},"reporter":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"creator":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"assignee":{"type":"object","properties":{"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"},"active":{"type":"boolean","title":"Whether is user active"}},"required":["accountId","displayName","active"],"additionalProperties":false,"nullable":true},"summary":{"type":"string","title":"summary"},"issuetype":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","title":"issuetype's id"}},"required":["name","id"],"additionalProperties":false},"status":{"type":"object","properties":{"description":{"type":"string","title":"status description"},"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"statusCategory":{"type":"object","properties":{"id":{"type":"number","title":"category id"},"key":{"type":"string","x-wrtn-placeholder":"new","title":"category key"}},"required":["id","key"],"title":"status category","additionalProperties":false},"untranslatedName":{"type":"string","title":"untranslated name"}},"required":["description","name","id","statusCategory"],"additionalProperties":false},"priority":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","title":"id"}},"required":["name","id"],"additionalProperties":false},"parent":{"type":"object","properties":{"id":{"type":"string","title":"The ID of the parent issue"},"key":{"type":"string","title":"The key of the parent issue"},"fields":{"type":"object","properties":{"summary":{"type":"string","title":"summary"}},"required":[],"title":"fields","additionalProperties":false}},"required":["id","key","fields"],"additionalProperties":false}},"required":["status","priority"],"additionalProperties":false},"key":{"type":"string","title":"The key of the issue"},"id":{"type":"string","title":"The ID of the issue"}},"required":["link","fields","key","id"],"additionalProperties":false},"title":"Jira issue list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["issues","total"],"additionalProperties":false},"description":"Find The Jira issues.\n\nFind Jira issues\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-projects","name":"connector_jira_get_projects_getProjects","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"orderBy":{"type":"string","enum":["issueCount","lastIssueUpdatedTime","name"]},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"orderBy":{"type":"string","enum":["issueCount","lastIssueUpdatedTime","name"]},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"values":{"type":"array","items":{"type":"object","properties":{"id":{"oneOf":[{"type":"number"},{"type":"string","pattern":"^(0|[1-9]\\d*)$"}]},"key":{"type":"string","title":"key of project\n\nKey properties used to query the inside of a project."},"name":{"type":"string","title":"name of this project"},"projectCategory":{"type":"object","properties":{"description":{"type":"string","title":"description"},"id":{"type":"string","title":"id"},"name":{"type":"string","title":"name"}},"required":["description","id","name"],"title":"project category info","additionalProperties":false}},"required":["id","key","name"],"additionalProperties":false},"title":"Jira project list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["values","total"],"title":"output of getting Jira projects","additionalProperties":false},"description":"Find the Jira projects\n\nThe Jira project has a unique key and can then be used to query issues with the key.\nReturns a paginated list of projects visible to the user.\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issue-labels","name":"connector_jira_get_issue_labels_getIssueLabels","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"values":{"type":"array","items":{"type":"string"},"title":"label list"},"isLast":{"type":"boolean","title":"Wheather is last page"},"total":{"type":"integer","title":"total count"},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."}},"required":["values","total"],"additionalProperties":false},"description":"Find issue labels","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issue-types","name":"connector_jira_get_issue_types_getIssueTypes","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["projectId","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}}]}},"required":["projectId"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"issuetypes":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","pattern":"^(0|[1-9]\\d*)$","title":"issuetype's id"},"name":{"type":"string","x-wrtn-placeholder":"스토리","title":"issue type name\n\nIt may be name, bug, story or etc."},"description":{"type":"string","title":"description"},"subtask":{"type":"boolean","title":"whether is for substask issue type"}},"required":["id","name","description","subtask"],"additionalProperties":false},"title":"issue types in this projects"}},"required":["issuetypes"],"additionalProperties":false},"description":"Find issue types\n\nIn order for the user to inquire about the issue type, the ID of the project is required.\nIf the user mentioned the key or name of the project,\nit is necessary to first inquire the project and get the correct project ID.\nThe ID of the project is a numeric character type.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issue-statuses","name":"connector_jira_get_issue_statuses_getIssueStatus","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"projectId":{"oneOf":[{"type":"number","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}},{"type":"string","pattern":"^(0|[1-9]\\d*)$","x-wrtn-prerequisite":{"method":"post","path":"/connectors/jira/get-projects","jmesPath":"values[].{value:id,label:name}"}}]}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"statuses":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","x-wrtn-placeholder":"해야 할 일","title":"status name"},"id":{"type":"string","title":"status id"},"untranslatedName":{"type":"string","title":"untranslated name"},"projectId":{"type":"string","title":"projectId"}},"required":["name","id"],"additionalProperties":false},"title":"statuses"}},"required":["statuses"],"additionalProperties":false},"description":"Find issue statuses for searching issue","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-issue-priorities","name":"connector_jira_get_issue_priorities_getIssuePriorities","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"priority name\n\nIt may be Low, Medium, High."},"id":{"type":"string","pattern":"([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)","title":"id"}},"required":["name","id"],"additionalProperties":false}},"description":"Inquire the priority levels that can be assigned to the issue.\n\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nTherefore, it can be used as an enum value without requesting this API,\nand this API is already deprecated on the Jira REST API document.\nHowever, for projects that can already be specified by creating a priority level, this connector is added just in case.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/issues/get-users-assignable","name":"issues_get_users_assignable_getUsersAssignableInIssue","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"project":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"issueKey":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"connectors/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of issue\n\nIt refers to the key of the issue to search for the user to be assigned."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["project","issueKey","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"project":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"issueKey":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"connectors/jira/get-issues","jmesPath":"issues[].{value:key, label:key}"},"title":"key of issue\n\nIt refers to the key of the issue to search for the user to be assigned."}},"required":["project","issueKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"additionalProperties":false}},"description":"Find assignable users in issue.\n\nFind a person within the issue who can be assigned as assignee.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/projects/get-users-assignable","name":"get_users_assignable_getUsersAssignableInProject","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."},"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["project_key","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"maxResults":{"type":"integer","default":50,"title":"max results","description":"The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."},"startAt":{"type":"integer","default":0,"title":"page offset","description":"The index of the first item to return in a page of results (page offset)."},"project_key":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/jira/get-projects","jmesPath":"values[].{value:key, label:name}"},"title":"key of project\n\nIt refers to the key of the project to search for the user to be assigned."}},"required":["project_key"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"active":{"type":"boolean","title":"Whether is user active"},"accountId":{"type":"string","title":"id of this user account"},"displayName":{"type":"string","title":"creator's name"}},"required":["active","accountId","displayName"],"additionalProperties":false}},"description":"Find assignable users in project.\n\nFind a person within the project who can be assigned as assignee.","tags":["Jira"]},{"method":"patch","path":"/connector/jira/get-status-categories","name":"connector_jira_get_status_categories_getStatusCategories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"atlassian","title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"colorName":{"type":"string","title":"name of color"},"id":{"type":"number","title":"The ID of status category"},"key":{"type":"string","title":"The key of status category"},"name":{"type":"string","title":"name of the status category"}},"required":["colorName","id","key","name"],"additionalProperties":false}},"description":"get status categories.\n\nGet status categories","tags":["Jira"]},{"method":"patch","path":"/connector/google-map/autocomplete","name":"connector_google_map_autocomplete","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"input":{"type":"string","title":"search keyword"},"circle":{"type":"object","properties":{"latitude":{"type":"number","title":"Latitude","description":"It refers to a latitude value for specifying a space of an area to be searched."},"longitude":{"type":"number","title":"Longitude","description":"It refers to a longitude value for specifying a space of an area to be searched."},"radius":{"type":"number","default":500,"minimum":0,"maximum":50000,"title":"Radius","description":"This refers to the radial distance for specifying the space of the region to be searched. It is in meters.\ndefault value is 500 meters."}},"required":["latitude","longitude","radius"],"title":"Search radius","additionalProperties":false}},"required":["input"],"title":"Input Parameter of Autocomplete","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"input":{"type":"string","title":"search keyword"},"circle":{"type":"object","properties":{"latitude":{"type":"number","title":"Latitude","description":"It refers to a latitude value for specifying a space of an area to be searched."},"longitude":{"type":"number","title":"Longitude","description":"It refers to a longitude value for specifying a space of an area to be searched."},"radius":{"type":"number","default":500,"minimum":0,"maximum":50000,"title":"Radius","description":"This refers to the radial distance for specifying the space of the region to be searched. It is in meters.\ndefault value is 500 meters."}},"required":["latitude","longitude","radius"],"title":"Search radius","additionalProperties":false}},"required":["input"],"title":"Input Parameter of Autocomplete","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"suggestions":{"type":"array","items":{"type":"object","properties":{"placePrediction":{"type":"object","properties":{"placeId":{"type":"string","nullable":true},"text":{"type":"object","properties":{"text":{"type":"string","x-wrtn-placeholder":"대한민국 서울특별시 강남구 신사동 피자익스프레스","nullable":true}},"required":[],"title":"Name","additionalProperties":false},"types":{"type":"array","items":{"type":"string"},"title":"Place Types"}},"required":["types"],"additionalProperties":false,"nullable":true}},"required":["placePrediction"],"additionalProperties":false,"nullable":true},"title":"Response"}},"required":[],"title":"Response of Autocomplete","additionalProperties":false},"description":"Returns predictions for the given input in Google Maps.\n\nrecommendations for automatic completion or location through a search word or a latitude coordinate value to be used with the search word.\n\nSince it is a text auto-completion, this feature allows you to find better search keywords.\nHowever, since there is a separate connector for searching the surrounding geography, it is recommended to use that connector if you want to find a place that is not a keyword.\nIt is recommended that you use this connector to narrow down the search keyword before writing the place search connector.","tags":["Google Map"]},{"method":"patch","path":"/connector/google-map/review","name":"connector_google_map_review","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"place_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-map/search","jmesPath":"[].{value:place_id, label:place_id}"}}},"required":["place_id"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"place_id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/google-map/search","jmesPath":"[].{value:place_id, label:place_id}"}}},"required":["place_id"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"username":{"type":"string","title":"Author's name","description":"Reviewer's name."},"rating":{"type":"number","title":"Review ratings","description":"Here are the review ratings."},"description":{"type":"string","title":"Review content","description":"Here is the review content."},"link":{"type":"string","format":"iri","title":"Review Link","description":"Here is the review link."},"images":{"type":"array","items":{"type":"string","format":"iri","contentMediaType":"image/*"},"title":"Review Image","description":"This is the image registered in the review."},"date":{"type":"string","title":"Review Date","description":"The date the review was written."}},"required":["username","rating","description","link","images","date"],"title":"Review search results","additionalProperties":false}},"description":"Search Google Map restaurant reviews.\n\nSearch for restaurant reviews selected from Google Maps","tags":["Google Map"]},{"method":"patch","path":"/connector/google-map/search-text","name":"connector_google_map_search_text_searchText","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"textQuery":{"type":"string","title":"search keyword"},"nextPageToken":{"type":"string","title":"Page Token For Next Page"}},"required":["textQuery"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"textQuery":{"type":"string","title":"search keyword"},"nextPageToken":{"type":"string","title":"Page Token For Next Page"}},"required":["textQuery"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"places":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"id":{"type":"string","nullable":true},"types":{"type":"array","items":{"type":"string"},"nullable":true},"nationalPhoneNumber":{"type":"string","nullable":true},"internationalPhoneNumber":{"type":"string","nullable":true},"formattedAddress":{"type":"string","nullable":true},"location":{"type":"object","properties":{"latitude":{"type":"number","minimum":-90,"maximum":90,"nullable":true},"longitude":{"type":"number","minimum":0,"maximum":360,"nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"rating":{"type":"number","maximum":5,"nullable":true},"googleMapsUri":{"type":"string","format":"iri","nullable":true},"websiteUri":{"type":"string","format":"iri","nullable":true},"regularOpeningHours":{"type":"object","properties":{"openNow":{"type":"boolean","nullable":true},"periods":{"type":"array","items":{"type":"object","properties":{"open":{"type":"object","properties":{"day":{"type":"integer","minimum":0,"maximum":6,"nullable":true},"hour":{"type":"integer","minimum":0,"maximum":24,"nullable":true},"minute":{"type":"integer","minimum":0,"maximum":60,"nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"close":{"type":"object","properties":{"day":{"type":"integer","minimum":0,"maximum":6,"nullable":true},"hour":{"type":"integer","minimum":0,"maximum":24,"nullable":true},"minute":{"type":"integer","minimum":0,"maximum":60,"nullable":true}},"required":[],"title":"close","additionalProperties":false}},"required":[],"additionalProperties":false},"title":"periods"},"weekdayDescriptions":{"type":"array","items":{"type":"string"},"nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"utcOffsetMinutes":{"type":"number","minimum":0,"maximum":1440,"nullable":true},"businessStatus":{"type":"string","nullable":true},"priceLevel":{"type":"string","nullable":true},"userRatingCount":{"type":"integer","nullable":true},"displayName":{"type":"object","properties":{"text":{"type":"string","nullable":true},"languageCode":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"primaryTypeDisplayName":{"type":"object","properties":{"text":{"type":"string","nullable":true},"languageCode":{"type":"string","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"takeout":{"type":"boolean","nullable":true},"delivery":{"type":"boolean","nullable":true},"dineIn":{"type":"boolean","nullable":true},"reservable":{"type":"boolean","nullable":true},"servesBreakfast":{"type":"boolean","nullable":true},"servesLunch":{"type":"boolean","nullable":true},"servesDinner":{"type":"boolean","nullable":true},"servesBeer":{"type":"boolean","nullable":true},"servesBrunch":{"type":"boolean","nullable":true},"servesVegetarianFood":{"type":"boolean","nullable":true},"primaryType":{"type":"string","nullable":true},"photos":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"widthPx":{"type":"number","nullable":true},"heightPx":{"type":"number","nullable":true},"link":{"type":"string","nullable":true}},"required":[],"additionalProperties":false},"nullable":true},"outdoorSeating":{"type":"boolean","nullable":true},"liveMusic":{"type":"boolean","nullable":true},"menuForChildren":{"type":"boolean","nullable":true},"servesCocktails":{"type":"boolean","nullable":true},"servesDessert":{"type":"boolean","nullable":true},"servesCoffee":{"type":"boolean","nullable":true},"goodForChildren":{"type":"boolean","nullable":true},"allowsDogs":{"type":"boolean","nullable":true},"restroom":{"type":"boolean","nullable":true},"goodForGroups":{"type":"boolean","nullable":true},"goodForWatchingSports":{"type":"boolean","nullable":true},"paymentOptions":{"type":"object","properties":{"acceptsCreditCards":{"type":"boolean","nullable":true},"acceptsDebitCards":{"type":"boolean","nullable":true},"acceptsCashOnly":{"type":"boolean","nullable":true},"acceptsNfc":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"parkingOptions":{"type":"object","properties":{"freeParkingLot":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"accessibilityOptions":{"type":"object","properties":{"wheelchairAccessibleParking":{"type":"boolean","nullable":true},"wheelchairAccessibleSeating":{"type":"boolean","nullable":true}},"required":[],"additionalProperties":false,"nullable":true},"googleMapsLinks":{"type":"object","properties":{"placeUri":{"type":"string","format":"iri","nullable":true},"reviewsUri":{"type":"string","format":"iri","nullable":true},"photosUri":{"type":"string","format":"iri","nullable":true}},"required":[],"additionalProperties":false,"nullable":true}},"required":[],"additionalProperties":false},"title":"Places"},"nextPageToken":{"type":"string","nullable":true}},"required":["places","nextPageToken"],"additionalProperties":false},"description":"Search by text in Google Maps.\n\nGeneral search functionality on Google Maps\n\nIf possible, it is recommended to use POST/connector/google-map/search-text connector rather than this.\nHere, it is difficult to conduct additional search after providing information to users because only restaurants are searched using the Serp API and the response parameter does not provide a Google Map link.","tags":["Google Map"]},{"method":"patch","path":"/connector/google-map","name":"connector_google_map_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","minLength":1,"x-wrtn-placeholder":"강남역 맛집","title":"Search term","description":"Please enter your search term"}},"required":["keyword"],"title":"Information for searching restaurants on Google Maps","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"keyword":{"type":"string","minLength":1,"x-wrtn-placeholder":"강남역 맛집","title":"Search term","description":"Please enter your search term"}},"required":["keyword"],"title":"Information for searching restaurants on Google Maps","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"Name","description":"It's the name of a restaurant."},"place_id":{"type":"string","title":"unique ID","description":"This is the unique ID of the restaurant.\n\nThis is the information needed to search for reviews."},"gps_coordinate":{"type":"object","properties":{"latitude":{"type":"number","title":"Latitude","description":"This is the latitude of the restaurant's coordinates."},"longitude":{"type":"number","title":"Longitude","description":"This is the coordinates of the restaurant."}},"required":["latitude","longitude"],"title":"Coordinates","description":"Here are the coordinates for the restaurant.","additionalProperties":false},"rating":{"type":"number","title":"ratings","description":"Here are the restaurant ratings."},"reviews":{"type":"number","title":"Number of reviews","description":"This is the number of restaurant reviews."},"address":{"type":"string","title":"Address","description":"Here is the address of the restaurant."},"open_state":{"type":"string","title":"Operation Information","description":"Information about whether the restaurant is currently operating."},"operating_hours":{"type":"object","properties":{},"required":[],"title":"Information on operating hours","description":"Here is the information on the restaurant's operating hours.","additionalProperties":{"type":"string"}},"phone_number":{"type":"string","title":"Phone number","description":"This is the phone number for the restaurant."},"service_options":{"type":"object","properties":{},"required":[],"title":"Service options","description":"Service options provided by the restaurant.","additionalProperties":{"type":"boolean"}},"user_review":{"type":"string","title":"User Review","description":"This is a user review of a delicious restaurant."},"thumbnail":{"type":"string","format":"iri","contentMediaType":"image/*","nullable":true}},"required":["title","place_id","gps_coordinate","address"],"title":"Google Maps Restaurant Search Results","additionalProperties":false}},"description":"Google Map restaurant search.\n\nSearch for restaurants using Google Maps","tags":["Google Map"]},{"method":"patch","path":"/connector/github/users/get-received-events","name":"connector_github_users_get_received_events_getReceivedEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events received by the authenticated user\n\nThese are events that you've received by watching repositories and following users.\nIf you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.\nIn this case, the \"received\" event includes the repository that the user is interested in or the activity of the user who is following,\nfor example, if the user has pushed to the repository, or if an issue has been created from the repository that the user is interested in.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-pinned-repositories","name":"users_get_pinned_repositories_getUserPinnedRepositories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."}},"required":["secretKey","username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"string"}},"description":"Inquire the user's pinned repository names.\n\nInquire the user's pinned repositories\n\nInquire up to 6 repositories where the user has pinned.\nHere, only the name of the repository is searched, so if necessary, find detailed information about the repository by pageing the user's repository list.\nPlacing a pin in a repository is most likely a repository that users are most confident in.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-repositories","name":"connector_github_users_get_repositories_getUserRepositories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page","description":"The number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"]},"direction":{"type":"string","enum":["desc","asc"]},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page","description":"The number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"]},"direction":{"type":"string","enum":["desc","asc"]},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true},"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["private","public"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["readme","id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"],"additionalProperties":false},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the user's repositories\n\nSince it contains only the simplest information of the repository here, there is no way to know the lead me of the repository or detailed information.\nIt is recommended to use additional connectors to explore because other connectors have the ability to read leads or internal files in the repository.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/users/get-events","name":"organizations_users_get_events_getUserOrganizationEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Lists organization events for the authenticated user\n\nThis API endpoint retrieves events that have occurred within the organizations\nthe authenticated user is a member of. It includes activities such as issues,\npull requests, commits, and other actions taken within the organization's repositories.\n\nThe events cover all repositories within the organization that the user has access to,\nmaking it useful for tracking the organization's activity or monitoring the progress\nof projects that the user is involved in within the team.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-issues","name":"connector_github_organizations_get_issues_getOrganizationIssues","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["desc","asc"]},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"]},"state":{"type":"string","enum":["open","closed","all"]},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"]},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["desc","asc"]},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"]},"state":{"type":"string","enum":["open","closed","all"]},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"]},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"title":"Issues"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organization issues assigned to the authenticated user\n\nSimilar to the 'get-issues' connector, it is suitable for inquiring only about issues assigned within a specific organization.\nNaturally, the user will have to be a member of that organization.\n\nHere, the result value can be inquired together with PR because PR on GitHub is essentially an issue-like object.\nIf you want to see the issue separately, you should use a connector that looks up the issue in the repo, not the organization.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-repositories","name":"get_repositories_getOrganizationRepositories","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["private","public"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"],"additionalProperties":false},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organization repositories\n\nThis endpoint allows you to list all repositories that belong to a specified organization on GitHub.\nIt's useful for viewing all the repositories under an organization’s account, including both public and private repositories, depending on your access level.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-events","name":"connector_github_organizations_get_events_getOrganizationEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public organization events\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\n\nThis API endpoint retrieves a stream of public events that have occurred\nwithin a specified organization. These events include activities such as\nrepository creation, issues, pull requests, and other actions taken by members\nof the organization across all its public repositories.\n\nThis is useful for monitoring the public activity within an organization,\nproviding insights into how the organization is managing its projects,\nthe work being done by its members, and the overall public engagement with\nits repositories.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-collaborators","name":"connector_github_repos_get_collaborators_getCollaborators","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"affiliation":{"type":"string","enum":["outside","direct","all"]},"permission":{"type":"string","enum":["pull","triage","push","maintain","admin"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"affiliation":{"type":"string","enum":["outside","direct","all"]},"permission":{"type":"string","enum":["pull","triage","push","maintain","admin"]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List repository collaborators\n\nFor organization-owned repositories, the list of collaborators includes outside collaborators,\norganization members that are direct collaborators, organization members with access through team memberships,\norganization members with access through default organization permissions, and organization owners.\nOrganization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.\nTeam members will include the members of child teams.\n\nYou can refer to it before specifying a person in charge of the issue or a reviewer for PR.","tags":["Github"]},{"method":"post","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_createFileContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","path","message","content","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false}},"required":["owner","repo","path","message","content"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"content":{"type":"object","properties":{"name":{"type":"string","title":"file or folder name"},"path":{"type":"string","title":"file or folder path"},"sha":{"type":"string","title":"sha"},"size":{"type":"number","title":"size"}},"required":["name","path","sha","size"],"title":"content","additionalProperties":false},"commit":{"type":"object","properties":{"sha":{"type":"string","title":"sha"}},"required":["sha"],"title":"commit","additionalProperties":false}},"required":["content","commit"],"additionalProperties":false},"description":"Create File content and commit.\n\nCreate file content in github repository\n\nThis connector handles file creation only. Use the modification API for existing files.\nCreating a file is equivalent to a single commit, with commits required for changes like uploads or deletions.\nWhen adding a file, confirm the target branch. Avoid default branches unless specified.\nUsers value branches reflecting their work; always confirm file content before adding or modifying.\nFor requests involving a specific PR or branch, use this connector.\nFile content input is encoded to base64 within the connector. Do not pre-encode content manually.","tags":["Github"]},{"method":"put","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_updateFileContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["sha","owner","repo","path","message","content","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false}},"required":["sha","owner","repo","path","message","content"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"content":{"type":"object","properties":{"name":{"type":"string","title":"file or folder name"},"path":{"type":"string","title":"file or folder path"},"sha":{"type":"string","title":"sha"},"size":{"type":"number","title":"size"}},"required":["name","path","sha","size"],"title":"content","additionalProperties":false},"commit":{"type":"object","properties":{"sha":{"type":"string","title":"sha"}},"required":["sha"],"title":"commit","additionalProperties":false}},"required":["content","commit"],"additionalProperties":false},"description":"Update File content and commit.\n\nUpdate file content in github repository\n\nUpdating a file creates a single commit. Commits are hashes for saving changes like uploads, modifications, or deletions.\nEnsure the latest sha value is used to avoid conflicts. Check sha via API or from recently created files.\nModifying a file overwrites it, not appends to it. Verify existing code and make partial changes if needed.\nConfirm content with the user before adding or modifying files.\nFor specific PRs or branches, use this connector. Check commit conventions and commit-list for proper messaging.\nFile content is automatically encoded to base64 by the connector; do not pre-encode manually.","tags":["Github"]},{"method":"delete","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_deleteFileContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"}},"required":["message","secretKey","owner","repo","path","sha"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"}},"required":["message","owner","repo","path","sha"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Delete file content and commit.\n\nDelete file content in github repository\n\nTo delete file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on.\n\nAs the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.\n\nIf the user directly asks you to add, modify, or delete a file for a specific PR or specific branch, this connector should be considered.\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-folder-structures","name":"get_folder_structures_getRepositoryFolderStructures","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name","description":"The path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["secretKey","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name","description":"The path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"children":{"type":"array","items":{},"title":"children","description":"For folders, you may have other files or folders inside.\nThis should also be a folder or file type object,\nbut here, we specify it as any type to prevent it because it can be recursively infinitely large."}},"required":["type","size","name","path","sha","children"],"additionalProperties":false},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","nullable":true}},"required":["name","url","type","size","path","sha"],"additionalProperties":false}]}},"description":"Review Repository Folder Structure\n\nIt allows you to know the overall folder structure by traversing files in the repository.\nThis feature is intended to navigate like a DFS based on folders.\nIf this function is so vast that you cannot see the entire folder, you can pass the `path` again to inquire.\nThe `path` delivered is treated like a Root folder and continues the navigation from this folder.\nThis feature is designed to navigate to the inside two more times, up to steps 0, 1 at a time, based on the root folder.\n\nIf you want to know the details of the file, it is recommended to use the get-contents connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-contents/bulk","name":"connector_github_repos_get_contents_bulk_getBulkFileContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"],"additionalProperties":false},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","nullable":true}},"required":["name","url","type","size","path","sha"],"additionalProperties":false}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["null"],"title":"type"},"size":{"type":"number","enum":[0],"title":"size"},"message":{"type":"string","enum":["No files exist corresponding to the path."],"title":"message"}},"required":["type","size","message"],"additionalProperties":false}]}},"description":"Look up repository files(bulk)\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\nYou can pass multiple file paths to view multiple files at the same time.\nThere is no limit to the number of files.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-contents","name":"connector_github_repos_get_contents_getFileContents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"],"additionalProperties":false},{"type":"object","properties":{"name":{"type":"string","title":"name of this file"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"download_url":{"type":"string","nullable":true}},"required":["name","url","type","size","path","sha"],"additionalProperties":false}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["null"],"title":"type"},"size":{"type":"number","enum":[0],"title":"size"},"message":{"type":"string","enum":["No files exist corresponding to the path."],"title":"message"}},"required":["type","size","message"],"additionalProperties":false}]},"description":"Look up repository files\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-readme","name":"connector_github_repos_get_readme_getReadmeFile","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["secretKey","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true},"description":"Read the README file in the repository\n\nREADME is one of the initial settings of the project and usually records a description of this repository,\nso it's useful if you want to see a rough description of the repository.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-events","name":"connector_github_repos_get_events_getRepoEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["repo","username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["repo","username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events for the authenticated user\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nYou can check all events surrounding the repository, such as who inquired and who forked.\nIt is used in conjunction with a connector that inquires the activity details and is suitable for checking how active the repository is.","tags":["Github"]},{"method":"patch","path":"/connector/github/networks/get-events","name":"connector_github_networks_get_events_getNetworkRepoEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["repo","username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["repo","username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public events for a network of repositories.\n\nFetches events across all forks of a specified repository.\n\nThis API endpoint provides a stream of events that occur in any fork\nof the specified repository. It includes actions such as commits,\npull requests, issues, and other activity happening in the forked\nrepositories.\n\nUse this endpoint when you need to monitor the activity not just\nin the original repository, but also in all of its forks. This can\nbe particularly useful for understanding the broader impact or\nactivity surrounding a popular project that has been forked multiple\ntimes.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-events","name":"connector_github_users_get_events_getUserEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events for the authenticated user\n\nThis API endpoint retrieves a stream of events related to the authenticated user,\nincluding activities such as issues, pull requests, commits, and repository actions\nthat the user has participated in or been mentioned in. The events reflect the user's\ninteractions across all repositories they have access to, both public and private (if\nthe user has appropriate permissions).\n\nThis is useful for tracking a user's activity on GitHub, allowing you to see a\npersonalized feed of their involvement in various projects and interactions with\nother users.\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nIt looks up users' public events. Username should be your own nickname because you can usually only see your own events.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-organizations","name":"connector_github_users_get_organizations_getUserOrganizations","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organizations for a user\n\nLook up the user's organization list, but since you can't look up the user's private organization here,\nyou can't really conclude that there isn't an empty array.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-events","name":"connector_github_get_events_getEvents","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"}},"required":["id","login"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public events\n\nThis API is not built to serve real-time use cases. Depending on the time of day, event latency can be anywhere from 30s to 6h.\nWhen I look up the events, they may not be of much value to the user because they are events that occurred on github.\n\nIt's looking up public events, and it's looking at events that occur on github regardless of the specific user.\nTherefore, it may not be of much use unless it is a special case.\nIf you want to get your information, it would be more advantageous to use the 'user/get-events' connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-activities","name":"repositories_get_activities_getRepositoryActivities","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["desc","asc"]},"before":{"type":"string","title":"before","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["day","week","month","quarter","year"]},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"direction":{"type":"string","enum":["desc","asc"]},"before":{"type":"string","title":"before","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["day","week","month","quarter","year"]},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"ref":{"type":"string","x-wrtn-placeholder":"refs/heads/main","title":"ref"},"timestamp":{"type":"string","format":"date-time","title":"timestamp"},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"actor":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","avatar_url"],"additionalProperties":false}},"required":["id","ref","timestamp","activity_type","actor"],"additionalProperties":false},"title":"result of repository activities"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Get Repository' activities.\n\nGet repository activities\n\nYou can use it to see how active your contribution is to the repository\nbecause it looks up all the activities that have occurred in the repository.\n\nThe types of activities that can be viewed here are as follows, and you can also find out by which user it was operated.\npush, force_push, branch_creation, branch_deletion, pr_merge, merge_queue_merge","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests","name":"connector_github_repositories_pull_requests_createPullRequest","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","head","base","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."}},"required":["owner","repo","head","base"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"id":{"type":"integer","title":"issue id"}},"required":["number","title","id"],"additionalProperties":false},"description":"Create pull request\n\nCreates a pull request from a branch to a particular branch.\nIf the branch has already generated a pull request to the base branch, an error of 422 may occur.\nThis error indicates a collision because only one pull request from branch to another branch can exist open at the same time.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nWhen creating a PR, be sure to specify the base branch and the head branch, and even if it can be omitted, be sure to include Titles and bodies as much as possible.\nYou can also create a pull request in draft state if necessary.\n\nIn order to create PR, you may need to refer to the PULL_REQUEST_TEMPLATE.md file that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.","tags":["Github"]},{"method":"put","path":"/connector/github/repositories/pull-requests","name":"connector_github_repositories_pull_requests_updatePullRequest","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"state":{"type":"string","enum":["open","closed"]},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["pull_number","secretKey","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"state":{"type":"string","enum":["open","closed"]},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["pull_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"id":{"type":"integer","title":"issue id"}},"required":["number","title","id"],"additionalProperties":false},"description":"Update pull request\n\nUse to change the title or body of a PR, or draft status or open-close status.\nIt can also be used for overwriting labels or modifying them.\nIt can also be used to close or reopen pull request.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-comments","name":"pull_requests_get_comments_getPullRequestComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","id","created_at","user","updated_at"],"additionalProperties":false},"title":"issue comments"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List pull request comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.\n\nThis is actually the same as connector POST '/connector/github/repositories/issues/get-comments'.\nComments and reviews on PR are separate, you can only see comments on this connector.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/comments","name":"pull_requests_comments_createPullRequestComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["body","issue_number","owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["body","issue_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","id","created_at","user","updated_at"],"additionalProperties":false},"description":"Create an pull request comment","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-requested-reviewers","name":"readPullRequestRequestedReviewers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"users":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"title":"requested reviewers"},"teams":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","title":"description"},"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"},"slug":{"type":"string","title":"slug"},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"},"privacy":{"type":"string","enum":["closed","open"]}},"required":["description","name","id","slug","notification_setting","permission","privacy"],"additionalProperties":false},"title":"team"}},"required":["users","teams"],"additionalProperties":false},"description":"Get all requested reviewers for a pull request.\n\nGet all requested reviewers\n\nGets the users or teams whose review is requested for a pull request.\nOnce a requested reviewer submits a review, they are no longer considered a requested reviewer.\nTheir review will instead be returned by the List reviews for a pull request operation.\n\nThe requested_reviewers are the ones who have been asked to review, but not yet.\nSo when you see someone who has reviewed a PR, if that person is someone who has already finished a review, he/she will be part of the reviewers, not the requested_reviewers.\nTherefore, when you look at a reviewer, you should look at it separately between someone who has not yet reviewed it and one person who has reviewed it, which you should also call other features to see together.\nRefer to connector `:post /connector/github/repositories/pull-requests/get-reviews`.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/requested-reviewers","name":"pull_requests_requested_reviewers_requestReviewers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Request reviewers for a pull request\n\nRequests reviews for a pull request from a given set of users and/or teams. This endpoint triggers notifications.\nYou can specify a reviewer by the user's name alone, but not by anyone, so use a connector that looks up collaborators first.","tags":["Github"]},{"method":"delete","path":"/connector/github/repositories/pull-requests/requested-reviewers","name":"requested_reviewers_removeRequestedReviewers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{},"description":"Remove requested reviewers from a pull request.\n\nRemoves review requests from a pull request for a given set of users and/or teams\n\nYou should check the person who has already been requested as a reviewer, i.e., requested_reviewers, and then send out the delete request.\nEven if you don't do that, there will be no error, but it doesn't mean anything if you delete the person who hasn't been requested as a reviewer.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/reviews/get-comments","name":"pull_requests_reviews_get_comments_readReviewComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"review_id":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests/get-reviews","jmesPath":"result[].{value:id, label: join('', [user.login, ''s review'])}"},"title":"review_id"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["review_id","owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"review_id":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests/get-reviews","jmesPath":"result[].{value:id, label: join('', [user.login, ''s review'])}"},"title":"review_id"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["review_id","owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"pull_request_review_id":{"type":"integer","title":"pull_request_review_id"},"diff_hunk":{"type":"string","title":"diff_hunk","description":"diff_hunk is a form for representing a change in code in github.\nIt consists of strings, and the first line, based on the new line character,\nhas meta information about the change point between the symbols"},"path":{"type":"string","title":"path"},"position":{"type":"integer","nullable":true},"original_position":{"type":"integer","title":"original_position\n\nOriginal position value, which is the number of rows based on diff_hunk."},"commit_id":{"type":"string","title":"commit_id"},"original_commit_id":{"type":"string","title":"original_commit_id"},"in_reply_to_id":{"type":"integer","title":"in_reply_to_id\n\nIn_reply_to_id is a field used by GitHub's review or comment API that is used to write a reply to a particular review or comment."},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"html_url":{"type":"string","format":"iri","title":"html_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"body":{"type":"string","title":"body"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["pull_request_review_id","diff_hunk","path","position","original_position","commit_id","original_commit_id","user","html_url","author_association","id","created_at","updated_at"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List comments for a pull request review\n\nLists comments for a specific pull request review.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-reviews","name":"repositories_pull_requests_get_reviews_readReviews","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"state":{"type":"string","x-wrtn-placeholder":"APPROVED","title":"state"},"html_url":{"type":"string","format":"iri","title":"html_url"},"pull_request_url":{"type":"string","format":"iri","title":"pull_request_url"},"submitted_at":{"type":"string","format":"date-time","title":"submitted_at"},"commit_id":{"type":"string","nullable":true},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]}},"required":["id","user","body","state","html_url","pull_request_url","commit_id","author_association"],"additionalProperties":false},"title":"commit list of this pull request"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List reviews for a pull request\n\nPull Request Reviews are groups of pull request review comments on a pull request, grouped together with a state and optional body comment.\nLists all reviews for a specified pull request. The list of reviews returns in chronological order.\nSince github distinguishes requested_reviewers from those who have already completed the review,\nif you want to see a review for any PR, you should look up both of these connectors.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/reviews","name":"repositories_pull_requests_reviews_reviewPullRequest","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"commit_id":{"type":"string","title":"commit_id","description":"The SHA of the commit that needs a review.\nNot using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the position.\nDefaults to the most recent commit in the pull request when you do not specify a value."},"body":{"type":"string","title":"body","description":"Required when using REQUEST_CHANGES or COMMENT for the event parameter.\nThe body text of the pull request review."},"event":{"type":"string","enum":["APPROVE","REQUEST_CHANGES","COMMENT"]},"comments":{"type":"array","items":{"type":"object","properties":{"line":{"type":"integer","title":"line"},"side":{"type":"string","title":"side"},"start_line":{"type":"integer","title":"start_line"},"start_side":{"type":"string","title":"start_side"},"path":{"type":"string","title":"path"},"body":{"type":"string","title":"body"},"position":{"type":"integer","nullable":true}},"required":["line","side","start_line","start_side","path","position"],"additionalProperties":false},"title":"comments\n\nUse the following table to specify the location, destination, and contents of the draft review comment."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"commit_id":{"type":"string","title":"commit_id","description":"The SHA of the commit that needs a review.\nNot using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the position.\nDefaults to the most recent commit in the pull request when you do not specify a value."},"body":{"type":"string","title":"body","description":"Required when using REQUEST_CHANGES or COMMENT for the event parameter.\nThe body text of the pull request review."},"event":{"type":"string","enum":["APPROVE","REQUEST_CHANGES","COMMENT"]},"comments":{"type":"array","items":{"type":"object","properties":{"line":{"type":"integer","title":"line"},"side":{"type":"string","title":"side"},"start_line":{"type":"integer","title":"start_line"},"start_side":{"type":"string","title":"start_side"},"path":{"type":"string","title":"path"},"body":{"type":"string","title":"body"},"position":{"type":"integer","nullable":true}},"required":["line","side","start_line","start_side","path","position"],"additionalProperties":false},"title":"comments\n\nUse the following table to specify the location, destination, and contents of the draft review comment."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"id"}},"required":["id"],"additionalProperties":false},"description":"Create a review for a pull request\n\nPull request reviews created in the PENDING state are not submitted and therefore do not include the submitted_at property in the response. To create a pending review for a pull request, leave the event parameter blank.\nThe position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-files","name":"pull_requests_get_files_readPullRequestFiles","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List pull requests files\n\nThis is useful to see what files are contained in that PR.\nEach file's patch contains the entire format of the file.\nHowever, if you want to know the changes, you should look up diff, which is implemented with a different connector, so you'd better refer to it.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-commits","name":"pull_requests_get_commits_readPullRequestCommits","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"title":"commit list of this pull request"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List commits on a pull request\n\nLists a maximum of 250 commits for a pull request.\nTo receive a complete commit list for pull requests with more than 250 commits, use the List commits endpoint.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-diff","name":"repositories_pull_requests_get_diff_readPullRequestDiff","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"string"},{"type":"object","properties":{"message":{"type":"string","title":"Error Message"},"errors":{"type":"array","items":{"type":"object","properties":{"resource":{"type":"string","enum":["PullRequest"]},"field":{"type":"string","enum":["diff"]},"code":{"type":"string","enum":["too_large"]}},"required":["resource","field","code"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"error objects"},"status":{"type":"string","title":"error code"}},"required":["message","errors","status"],"additionalProperties":false}]},"description":"Get a diff of pull request.\n\nGet a diff of pull-request info\n\nThis is the same as PR's ability to query files,\nbut the format that this function returns is a string, which is more suitable for identifying changes to each file than viewing each file object,\nand in github, this is called the application/vnd.github.diff format.\nThis helps you see at a glance what codes have disappeared and been added in a form suitable for code review.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nIf there are too many changes, the connector can export a 406 error.\nIn this case, it may be difficult to determine each change, but it is recommended to use the List pull requests connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-detail","name":"pull_requests_get_detail_readPullRequestDetail","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["closed","open"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"head":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"head branch info","additionalProperties":false},"base":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"base branch info","additionalProperties":false},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"draft":{"type":"boolean","title":"draft\n\nIndicates whether or not the pull request is a draft."},"requested_reviewers":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"title":"requested_reviewers"},"requested_teams":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"slug":{"type":"string","title":"slug"},"description":{"type":"string","title":"description"},"privacy":{"type":"string","enum":["closed","open"]},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"}},"required":[],"description":"Make all properties in T optional\n\n------------------------------\n\nDescription of the current {@link PartialIGithub.Team} type:\n\n> Make all properties in T optional","additionalProperties":false},"title":"requested_teams"},"auto_merge":{"title":"auto_merge"},"merged":{"type":"boolean","title":"merged"},"mergeable":{"type":"boolean","nullable":true},"rebaseable":{"type":"boolean","nullable":true},"mergeable_state":{"type":"string","title":"mergeable_state"},"merged_by":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false,"nullable":true},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify"},"comments":{"type":"integer","minimum":0,"title":"comments"},"review_comments":{"type":"integer","minimum":0,"title":"review_comments"},"commits":{"type":"integer","minimum":0,"title":"commits"},"additions":{"type":"integer","minimum":0,"title":"additions"},"deletions":{"type":"integer","minimum":0,"title":"deletions"},"changed_files":{"type":"integer","minimum":0,"title":"changed_files"},"locked":{"type":"boolean","title":"locked"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","nullable":true},"merged_at":{"type":"string","format":"date-time","nullable":true},"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["number","milestone","head","base","author_association","requested_reviewers","requested_teams","auto_merge","mergeable","rebaseable","mergeable_state","merged_by","maintainer_can_modify","comments","review_comments","commits","additions","deletions","changed_files","locked","created_at","updated_at","closed_at","merged_at","id","html_url","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Get a pull request.\n\nGet a deatiled pull-request info\n\nYou can view detailed PR information using the PR number.\nHere, you can see the branch to be merged and the information on the branch it points to, and you can see information such as the status of the PR, the time of each state, and the person who created the PR.\nHowever, it should be used with other connectors because it provides information close to the header of PR and does not provide information about each file or commit of PR.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-pull-requests","name":"repositories_get_pull_requests_getRepositoryPullRequest","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"after":{"type":"string","title":"after\ncursor of next page"},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"direction":{"type":"string","enum":["ASC","DESC"]}},"required":["sort","secretKey","owner","repo","direction"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT"]},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"after":{"type":"string","title":"after\ncursor of next page"},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"direction":{"type":"string","enum":["ASC","DESC"]}},"required":["sort","owner","repo","direction"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"pullRequests":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"issue id"},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"number":{"type":"integer","title":"number of pull request"},"title":{"type":"string","title":"Pull request title"},"comments":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of comments"}},"required":["totalCount"],"title":"comments","additionalProperties":false},"reviews":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total counr of reviews"}},"required":["totalCount"],"title":"reviews","additionalProperties":false},"reactions":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of reactions"}},"required":["totalCount"],"title":"reactions","additionalProperties":false},"labels":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","nullable":true},"name":{"type":"string","title":"label name"}},"required":["description","name"],"additionalProperties":false}}},"required":["nodes"],"title":"labels","additionalProperties":false},"assignees":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"assignees","additionalProperties":false},"author":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"createdAt":{"type":"string","format":"date-time","title":"createdAt"},"updatedAt":{"type":"string","format":"date-time","title":"updatedAt"}},"required":["id","number","title","comments","reviews","reactions","labels","assignees","author","createdAt","updatedAt"],"additionalProperties":false},"title":"Pull Requests"},"pageInfo":{"type":"object","properties":{"endCursor":{"type":"string","title":"Cursor to be used to look up the next page"},"hasNextPage":{"type":"boolean","title":"hasNextPage\n\ntrue if there is a next page"}},"required":["hasNextPage"],"title":"page info","additionalProperties":false}},"required":["pullRequests","pageInfo"],"additionalProperties":false},"description":"Get Repository' pull request.\n\nList repository pull requests\n\nQuery pool requests to specific repositories.\nHere, you can filter issues and see only pool requests, and you can sort them by creation and inquiry dates, or filter by open or closed status.\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/pull-requests/get-detail' connector must be called.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/issues/get-detail","name":"connector_github_repositories_issues_get_detail_getIssueDetail","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["issue_number","owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["issue_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["closed","open"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"reactions":{"type":"object","properties":{"total_count":{"type":"integer","title":"total_count"},"+1":{"type":"integer","title":"\"+1\""},"-1":{"type":"integer","title":"\"-1\""},"laugh":{"type":"integer","title":"laugh"},"hooray":{"type":"integer","title":"hooray"},"confused":{"type":"integer","title":"confused"},"heart":{"type":"integer","title":"heart"},"rocket":{"type":"integer","title":"rocket"},"eyes":{"type":"integer","title":"eyes"}},"required":["total_count","+1","-1","laugh","hooray","confused","heart","rocket","eyes"],"title":"reactions","additionalProperties":false},"closed_by":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false,"nullable":true},"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["milestone","reactions","id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Get a issue.\n\nGet a deatiled issue info\n\nUnlike the body omitted from the issue list inquiry, it is suitable for viewing details as it can inquire all the contents.\nHowever, this connector alone cannot see all the comments or timelines inside, and other connectors must be used.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/issues/get-comments","name":"github_repositories_issues_get_comments_getIssueComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["issue_number","owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["issue_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","id","created_at","user","updated_at"],"additionalProperties":false},"title":"issue comments"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List issue comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/issues/comments","name":"github_repositories_issues_comments_createIssueComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["body","issue_number","owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["body","issue_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","type","login","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","id","created_at","user","updated_at"],"additionalProperties":false},"description":"Create an issue comment\n\nAdd a comment. If you put an issue number, you can add a comment to the issue, where the issue number is also the number of PR.\nIn other words, both issue and PR can add a comment through this connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-issues","name":"connector_github_repositories_get_issues_getRepositoryIssues","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"after":{"type":"string","title":"after\ncursor of next page"},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"direction":{"type":"string","enum":["ASC","DESC"]},"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT","COMMENTS"]},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["direction","sort","owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"after":{"type":"string","title":"after\ncursor of next page"},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"direction":{"type":"string","enum":["ASC","DESC"]},"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT","COMMENTS"]},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["direction","sort","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"fetchedIssues":{"type":"array","items":{"type":"object","properties":{"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"title":{"type":"string","title":"issue title"},"id":{"type":"string","title":"issue id"},"comments":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of comments"}},"required":["totalCount"],"title":"comments","additionalProperties":false},"author":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","nullable":true},"name":{"type":"string","title":"label name"}},"required":["description","name"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"labels","additionalProperties":false},"stateReason":{"type":"string","nullable":true},"reactions":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of reactions"}},"required":["totalCount"],"title":"reactions","additionalProperties":false},"assignees":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"assignees","additionalProperties":false},"createdAt":{"type":"string","format":"date-time","title":"createdAt"},"updatedAt":{"type":"string","format":"date-time","title":"updatedAt"}},"required":["number","title","id","comments","author","labels","reactions","assignees","createdAt","updatedAt"],"additionalProperties":false},"title":"issues"},"pageInfo":{"type":"object","properties":{"endCursor":{"type":"string","title":"Cursor to be used to look up the next page"},"hasNextPage":{"type":"boolean","title":"hasNextPage\n\ntrue if there is a next page"}},"required":["hasNextPage"],"title":"page info","additionalProperties":false}},"required":["fetchedIssues","pageInfo"],"additionalProperties":false},{"type":"object","properties":{"error_message":{"type":"string","title":"Error Message"}},"required":["error_message"],"additionalProperties":false}]},"description":"List repository issues\n\nList issues in a repository.\nThis connector is perfect if you want to see the issue of the repository because it can be viewed without being authenticated.\nInformation on the issue comes out, but only 10 people and labels attached to the issue are provided.\nTherefore, if you want more detailed information, it's a good idea to look at it with a connector that looks at the details of the issue.\nWhen looking up an issue, you can view open and closed issues and sort them by creation time, correction time, comment count, and reaction count.\nFor more information, you should check the properties part of the request type.\n\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/issues/get-detail' connector must be called.\nYou do not know who owns the repository, so you must ask the user who owns the repository and fill the owner field of the request interface.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-users","name":"connector_github_get_users_searchUser","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"keyword","description":"The query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["q","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"keyword","description":"The query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["q"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"type":{"type":"string","enum":["User","Bot","Organization"]},"score":{"type":"number","title":"score"}},"required":["login","id","avatar_url","html_url","type","score"],"additionalProperties":false},"title":"User Search Result Item\n\nUser Search Result Item"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Search for users by keyword in github","tags":["Github"]},{"method":"patch","path":"/connector/github/get-user-profile","name":"connector_github_get_user_profile_getUserProfile","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"username"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"username"}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"name":{"type":"string","nullable":true},"company":{"type":"string","nullable":true},"blog":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"bio":{"type":"string","nullable":true},"twitter_username":{"type":"string","nullable":true},"public_repos":{"type":"integer","title":"count of public repos"},"public_gists":{"type":"integer","title":"count of public gists"},"followers":{"type":"integer","title":"count of followers"},"following":{"type":"integer","title":"count of follwing"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"profile_repository":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["private","public"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"},"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers","readme"],"additionalProperties":false,"nullable":true},"pinned_repositories":{"type":"array","items":{"type":"string"},"title":"pinned_repositories\nIt is a repository where the user puts a pin on his profile, which is usually used to display his or her proud history."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["public_repos","public_gists","followers","following","created_at","updated_at","profile_repository","pinned_repositories","id","type","login","avatar_url"],"additionalProperties":false},"description":"Look up the user's detailed profile\n\nThe property information you can find at the time of inquiry is as follows.\n\n- avatar_url, bio, blog, company, created_at, email,\n- followers, following, id, location, login, name,\n- pinned_repositories, profile_repository, public_gists,\n- public_repos, twitter_username, type, updated_at","tags":["Github"]},{"method":"patch","path":"/connector/github/get-organizations","name":"get_organizations_getAuthenticatedUserOrganizations","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organizations for the authenticated user\n\nInquire the user's repository.\nHere, the user is an authenticated user, which means a user of that token.\nIf a user does not select an organization at login or ask the organization's admin to link it,\nthe resource might not be viewed even if the token scope has permissions.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-branches","name":"connector_github_get_branches_getRepositoryBranches","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"name of Branch"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false}},"required":["name","commit"],"additionalProperties":false},"title":"branches"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the user's branch\n\nYou can look up a list of branches in a specific repository.\nBecause it says what the last commit is, and when and to whom it was made,\nyou can see which of the branches is the latest and managed.\n\nYou shouldn't call the main branch arbitrarily because there may be people who use the master branch.","tags":["Github"]},{"method":"post","path":"/connector/github/branches","name":"connector_github_branches_createBranches","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"ref\nThe name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label: commit.message}"},"title":"sha\nThe SHA1 value for this reference."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","ref","sha","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"ref\nThe name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label: commit.message}"},"title":"sha\nThe SHA1 value for this reference."}},"required":["owner","repo","ref","sha"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"ref":{"type":"string","x-wrtn-placeholder":"refs/heads/featureA","title":"ref"},"object":{"type":"object","properties":{"type":{"type":"string","enum":["commit"],"title":"type"},"sha":{"type":"string","title":"sha"}},"required":["type","sha"],"title":"object","additionalProperties":false}},"required":["ref","object"],"additionalProperties":false},"description":"Create branch\n\nCreates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.\nYou need to know the sha of the commit, so if you want to create a branch, you should first call another connector that looks up the commit list or header commitments to find out the sha value.\nIf you want to copy the branch, you should also look up the commit history of the branch and then retrieve the sha value from the branch's HEAD commit.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-pull-requests-associated-with-a-commit","name":"getPullRequestAssociatedWithACommit","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"base":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"base branch info","additionalProperties":false},"head":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"head branch info","additionalProperties":false},"id":{"type":"integer","title":"issue id"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether or not the pull request is a draft."},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["closed","open"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"requested_reviewers":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"title":"requested_reviewers"},"requested_teams":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"slug":{"type":"string","title":"slug"},"description":{"type":"string","title":"description"},"privacy":{"type":"string","enum":["closed","open"]},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"}},"required":[],"description":"Make all properties in T optional\n\n------------------------------\n\nDescription of the current {@link PartialIGithub.Team} type:\n\n> Make all properties in T optional","additionalProperties":false},"title":"requested_teams"},"auto_merge":{"title":"auto_merge"},"merged":{"type":"boolean","title":"merged"},"locked":{"type":"boolean","title":"locked"},"closed_at":{"type":"string","format":"date-time","nullable":true},"merged_at":{"type":"string","format":"date-time","nullable":true},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true}},"required":["number","title","base","head","id","created_at","user","state","labels","html_url","updated_at","milestone","author_association","requested_reviewers","requested_teams","auto_merge","locked","closed_at","merged_at","assignee"],"additionalProperties":false}},"description":"get pull requests associated with a commit.\n\nList pull requests associated with a commit\n\nFetches the pull requests (PRs) associated with a specific commit in a GitHub repository.\nThis API endpoint retrieves a list of pull requests that include the specified commit.\nThis can be useful for tracking where and how a particular change was merged into a branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-heads","name":"connector_github_get_commit_heads_getCommitHeads","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label:comment.message}"},"title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label:comment.message}"},"title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"files"}},"required":["sha","commit","files"],"additionalProperties":false},"description":"Lists all branches that contain the HEAD commit of a GitHub repository.\n\nThis function utilizes the GitHub API to retrieve a list of branches where the current\nHEAD commit (the latest commit on the checked-out branch) is included. This is useful for\ndetermining which branches contain the most recent changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit","name":"connector_github_get_commit_getCommit","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"html_url":{"type":"string","format":"iri","title":"html_url"},"parents":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"}},"required":["sha"],"additionalProperties":false},"title":"Parents of this commit"},"stats":{"type":"object","properties":{"total":{"type":"integer","title":"sum of additions and deletions"},"additions":{"type":"integer","title":"lines of additions"},"deletions":{"type":"integer","title":"lines of deletions"}},"required":["total","additions","deletions"],"title":"stats","additionalProperties":false},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"files\n\nYou can see the changes for each file."}},"required":["sha","commit","html_url","parents","stats","files"],"additionalProperties":false},"description":"Inquire the commit details of the user\nIt contains all the history of how the file changed, so you can see the details of a single commit node.\nIf you do not deliver ref, look up based on default_branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-diff","name":"connector_github_get_commit_diff_getCommitDiff","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"string"},"description":"Inquire the commit diff of the user\ndiff is Github's own content type specification that allows you to identify changes per commit on the Github homepage.\nIf you do not deliver ref, look up based on default_branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-list","name":"connector_github_get_commit_list_getCommitList","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false}},"required":["message","url","author","committer"],"additionalProperties":false}},"required":["sha","commit"],"additionalProperties":false},"title":"commit list"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Look up the list of commitments for a specific repo, a specific branch\n\nThis function can be used in general because it sees the commit list in units of branches, but if the user wants to see it in units of PR, it is better to use another connector.\nIf the user specifies to view in PR units, use other connectors because there are connectors for viewing files, commit lists, and changes in PR units elsewhere.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-followers","name":"connector_github_get_followers_getFollowers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","login","html_url","avatar_url"],"additionalProperties":false},"title":"followers"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the followers of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-followees","name":"connector_github_get_followees_getFollowees","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["id","login","html_url","avatar_url"],"additionalProperties":false},"title":"followees"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the followees of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-labels","name":"connector_github_get_labels_getLabels","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"label name"},"color":{"type":"string","title":"color"},"default":{"type":"boolean","title":"default\n\nTrue if it is not created by the user but automatically created from the beginning."},"description":{"type":"string","nullable":true}},"required":["name","color","default","description"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List labels for a repository\n\nView a list of issues created and used in that repository.\nEach issue will only have labels that are already registered in this repository.\nOf course, it doesn't necessarily mean that you have to use only the labels here when creating issues,\nbut it would be beneficial to assign them by referring to the labels here.","tags":["Github"]},{"method":"post","path":"/connector/github/issues","name":"connector_github_issues_createIssue","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"title":{"type":"string","title":"tite of this issue"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","title","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"title":{"type":"string","title":"tite of this issue"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["owner","repo","title"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Create an issue.\n\nLeave an issue in the repository\n\nCreate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\n\nIn order to create issue, you may need to refer to the issue template files that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.","tags":["Github"]},{"method":"put","path":"/connector/github/issues","name":"connector_github_issues_updateIssue","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"{label:number, value:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"result[].{label:number, value:title}"}}]},"title":{"type":"string","title":"tite of this issue"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."}},"required":["issue_number","secretKey","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"issue_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"{label:number, value:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"result[].{label:number, value:title}"}}]},"title":{"type":"string","title":"tite of this issue"},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."}},"required":["issue_number","owner","repo"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"id":{"type":"number","title":"id\n\nThis means the user's ID."},"type":{"type":"string","enum":["User","Bot","Organization"]},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["id","type","login"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Update an issue in the repository\n\nUpdate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\nIt can also be used to close or reopen issues.","tags":["Github"]},{"method":"post","path":"/connector/marp/convert-to-ppt","name":"connector_marp_convert_to_ppt_convertToPpt","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"markdown":{"type":"string","title":"Marp markdown","description":"Marp markdown input string."}},"required":["markdown"],"title":"Parameters for Marp conversion","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"markdown":{"type":"string","title":"Marp markdown","description":"Marp markdown input string."}},"required":["markdown"],"title":"Parameters for Marp conversion","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"s3Link":{"type":"string","title":"S3 link","description":"S3 link for the converted PPT."}},"required":["s3Link"],"title":"Marp conversion output","additionalProperties":false},"description":"Convert Marp markdown to PPT and store in S3\n\nWhen you write a markdown according to marp grammar, you convert it to create an html file that contains all of that content.\nBecause users won't know the markdown and marp grammar, this should be automatically generated by LLM, and users just need to provide the format, image, text, etc. they want.\nSo, instead of asking the user to provide marp or markdown grammar, ask for hints on how to organize the template and how to deploy it.\nAsking the user to write according to the Marp grammar directly can be difficult, even if the other person is the developer!\nAll tasks such as making presentation materials or organizing contents with slides, such as pptx, google slides, html, markdown (marp), and hanshow, may have to go through a connector that changes marp to this pptx.\n\nWarning: If you put too much content on a single slide, the content may be cut out and invisible. Split the content into several slides.","tags":["Marp","pptx","hanshow","ppt","powerpoint","markdown","marp"]},{"method":"patch","path":"/connector/x/get-users","name":"connector_x_get_users_getUsers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"userName":{"type":"array","items":{"type":"string"},"minItems":1,"title":"Twitter user name","description":"User name for search"},"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."}},"required":["userName","secretKey"],"title":"User Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"userName":{"type":"array","items":{"type":"string"},"minItems":1,"title":"Twitter user name","description":"User name for search"}},"required":["userName"],"title":"User Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"title":"User Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"User ID","description":"The unique id of the user"},"name":{"type":"string","title":"name","description":"The display name of the user"},"userName":{"type":"string","title":"user name","description":"The user name of user"}},"required":["id","name","userName"],"title":"User Information data","additionalProperties":false}},"description":"Get User Information by username","tags":[]},{"method":"patch","path":"/connector/x/get-influencers","name":"connector_x_get_influencers_getPreDefinedInfluencers","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"User ID","description":"The unique id of the user"},"name":{"type":"string","title":"name","description":"The display name of the user"},"userName":{"type":"string","title":"user name","description":"The user name of user"}},"required":["id","name","userName"],"title":"User Information data","additionalProperties":false}},"description":"Get information on celebrities.\n\nGet X user information of celebrities. Useful for understanding trends in various fields such as world affairs and IT.","tags":[]},{"method":"post","path":"/connector/x/prepare-summarize","name":"connector_x_prepare_summarize_prepareSummary","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."},"user":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:id, label:userName}"},"title":"user id","description":"The unique id of the user for search user tweet time line"},"name":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:name, label:name}"},"title":"user name","description":"The original user name"},"userName":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:userName, label:userName}"},"title":"twitter user name","description":"The user name of twitter"}},"required":["id","name","userName"],"additionalProperties":false},"title":"user","description":"User information for search user tweet time line"}},"required":["secretKey","user"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"user":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:id, label:userName}"},"title":"user id","description":"The unique id of the user for search user tweet time line"},"name":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:name, label:name}"},"title":"user name","description":"The original user name"},"userName":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/get-users","jmesPath":"[].{value:userName, label:userName}"},"title":"twitter user name","description":"The user name of twitter"}},"required":["id","name","userName"],"additionalProperties":false},"title":"user","description":"User information for search user tweet time line"}},"required":["user"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"x","x-wrtn-secret-scopes":["tweet.read","tweet.write","users.read","follows.read","list.read"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"chatId":{"type":"string","title":"chat id","description":"Chat id required for RAG generation results.\nReturns the chat id for the analyzed file to generate chat results for the file analyzed by RAG.\nThe same chat id is required to analyze multiple files and generate results for multiple files in the same chat."}},"required":["chatId"],"title":"Prepare Summarize tweet results","additionalProperties":false},"description":"Prepare Tweet Summary.\n\nFetches and indexes the tweets of given users requested.\n\nBefore executing fetches and indexes the tweets, you must call the /get-users or /get-influencers endpoint to get user information.\n\nYou should put as many users as you want to fetch tweets from.\n\nThis endpoint is designed to handle multiple users efficiently.\n\nIt already get information from multiple user's, you must not make multiple requests to this endpoint to fetch tweets from multiple users. you must use the results from a single request.\n\nFor example, if you are fetch tweets from multiple users and have a summary request, you must use the results from only one request to summarize the tweets for each user.\n\nYou must use the /summarize endpoint to proceed with the summary after fetching the tweet, do not allow this endpoint to be used just for summarization.","tags":[]},{"method":"post","path":"/connector/x/summarize","name":"connector_x_summarize_summarizeTweet","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"chatId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/prepare-summarize","jmesPath":"{value:chatId, label:chatId}"},"title":"chatId","description":"\"chatId\" to get tweets. Pass the \"chatId\" obtained from the \"prepare-summarize-tweet\" API as-is."},"query":{"type":"string","title":"query","description":"A query that describes what tweets you want to get. For example, it can be a keyword or a name of a person.\n\nAvoid using a query that is too broad, it may lead to irrelevant results.\n\nPut a single subject at a time. If you need multiple subjects, must make multiple requests for each subject no exceptions."}},"required":["chatId","query"],"title":"Information needed for tweet summary","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"chatId":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/x/prepare-summarize","jmesPath":"{value:chatId, label:chatId}"},"title":"chatId","description":"\"chatId\" to get tweets. Pass the \"chatId\" obtained from the \"prepare-summarize-tweet\" API as-is."},"query":{"type":"string","title":"query","description":"A query that describes what tweets you want to get. For example, it can be a keyword or a name of a person.\n\nAvoid using a query that is too broad, it may lead to irrelevant results.\n\nPut a single subject at a time. If you need multiple subjects, must make multiple requests for each subject no exceptions."}},"required":["chatId","query"],"title":"Information needed for tweet summary","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"documents":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id","description":"Chunk document id"},"text":{"type":"string","title":"text","description":"Chunk document text"},"score":{"type":"number","nullable":true},"image":{"type":"string","nullable":true},"metadata":{"title":"metadata","description":"Chunk document metadata"}},"required":["id","text","score","image","metadata"],"additionalProperties":false},"title":"Chunk Document List","description":"Chunk Document List"}},"required":["documents"],"additionalProperties":false},"description":"Tweet Summary.\n\nSummarizes the tweets of those requested them.\n\nNote that this endpoint is intended to be used for a single keyword or subject.\n\nIf you need to summarize multiple keywords or subjects, you must make multiple requests for each keyword or subject no exceptions.\n\nFor example, if you want to summarize tweets about \"Elon Musk\" and \"AI\", make two requests, one for \"Elon Musk\" and one for \"AI\".\n\nYou must assume that the results may contain irrelevant tweets against the query. You must filter the results based on the query. Do your best to cherry-pick the relevant tweets only.\n\nAny tweet that are not relevant to the query must be ignored, even if that tweet is related to the user request, not the query.","tags":[]},{"method":"patch","path":"/connector/x/general-search","name":"connector_x_general_search_generalSearch","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","title":"search query","description":"Get tweets by query.\n\nThe query should be entered in natural language.\n\nFor example, if the user asks \"Search for what books are trending on Twitter these days,\" the query should be \"trending books.\""},"lang":{"type":"string","title":"Tweet Settings Language","description":"Matches posts categorized by X in a specific language.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"maxResults":{"type":"integer","default":10,"title":"Maximum number of search results.","description":"Sets the maximum number of results to be searched."},"sort_order":{"type":"string","enum":["recency","relevancy"]},"start_time":{"type":"string","format":"date-time","title":"Start time for search tweet","description":"The oldest UTC timestamp from which the Tweets will be provided.\n\nBy default, a request will return Tweets from up to 30 days ago if you do not include this parameter."},"end_time":{"type":"string","format":"date-time","title":"End time for search tweet","description":"Used with start_time. The newest, most recent UTC timestamp to which the Tweets will be provided.\n\nIf used without start_time, Tweets from 30 days before end_time will be returned by default. If not specified, end_time will default to [now - 30 seconds]."},"isExcludeRetweet":{"type":"boolean","title":"Whether to remove retweets","description":"Sets whether to remove retweeted tweets from search results."},"isExcludeReply":{"type":"boolean","title":"Whether to remove replies","description":"Sets whether to remove replied tweets from search results."},"isExcludeQuote":{"type":"boolean","title":"Whether to remove quotes","description":"Sets whether to remove quoted tweets from search results."}},"required":["query","lang","maxResults","sort_order"],"title":"Tweet Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","title":"search query","description":"Get tweets by query.\n\nThe query should be entered in natural language.\n\nFor example, if the user asks \"Search for what books are trending on Twitter these days,\" the query should be \"trending books.\""},"lang":{"type":"string","title":"Tweet Settings Language","description":"Matches posts categorized by X in a specific language.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"maxResults":{"type":"integer","default":10,"title":"Maximum number of search results.","description":"Sets the maximum number of results to be searched."},"sort_order":{"type":"string","enum":["recency","relevancy"]},"start_time":{"type":"string","format":"date-time","title":"Start time for search tweet","description":"The oldest UTC timestamp from which the Tweets will be provided.\n\nBy default, a request will return Tweets from up to 30 days ago if you do not include this parameter."},"end_time":{"type":"string","format":"date-time","title":"End time for search tweet","description":"Used with start_time. The newest, most recent UTC timestamp to which the Tweets will be provided.\n\nIf used without start_time, Tweets from 30 days before end_time will be returned by default. If not specified, end_time will default to [now - 30 seconds]."},"isExcludeRetweet":{"type":"boolean","title":"Whether to remove retweets","description":"Sets whether to remove retweeted tweets from search results."},"isExcludeReply":{"type":"boolean","title":"Whether to remove replies","description":"Sets whether to remove replied tweets from search results."},"isExcludeQuote":{"type":"boolean","title":"Whether to remove quotes","description":"Sets whether to remove quoted tweets from search results."}},"required":["query","lang","maxResults","sort_order"],"title":"Tweet Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"tweet ID","description":"The unique id of the tweet"},"userName":{"type":"string","title":"user name","description":"The user name of the tweet"},"text":{"type":"string","title":"tweet content","description":"The content text of the tweet"},"tweet_link":{"type":"string","format":"iri","title":"tweet link","description":"The link of the tweet"},"metric":{"type":"object","properties":{"retweet_count":{"type":"integer","title":"Retweet Count"},"reply_count":{"type":"integer","title":"Reply Count","description":"Indicates how many replies a tweet has."},"like_count":{"type":"integer","title":"Like Count","description":"Indicates how many likes a tweet has received."},"quote_count":{"type":"integer","title":"Quote Count","description":"Indicates how many times a tweet has been quoted."},"bookmark_count":{"type":"integer","title":"Bookmark Count","description":"Indicates how many times a tweet has been bookmarked."},"impression_count":{"type":"integer","title":"Impression Count","description":"Indicates how many times a tweet has been viewed."}},"required":["retweet_count","reply_count","like_count","quote_count","bookmark_count","impression_count"],"title":"Metric for tweet","additionalProperties":false},"thumbnail":{"type":"string","format":"iri","nullable":true}},"required":["id","userName","text","tweet_link","metric","thumbnail"],"title":"Tweet Search Result","additionalProperties":false}},"description":"General Search Tweets.\n\nSearch for tweets based on search query requested by the user.\n\nYou need to analyze the user's request and retrieve tweets through natural language queries (search terms).\n\nFor example, when a user requests \"Search for books that are trending on Twitter these days,\" the query (search term) should be natural language, not a keyword, such as \"trending books.\"","tags":[]},{"method":"patch","path":"/connector/reddit/get-hot-posts","name":"connector_reddit_get_hot_posts_getHotPosts","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"g":{"type":"string","title":"Optional parameter","description":"one of (GLOBAL, US, AR, AU, BG, CA, CL, CO, HR, CZ, FI, FR, DE, GR, HU, IS, IN, IE, IT, JP, MY, MX, NZ, PH, PL, PT, PR, RO, RS, SG, ES, SE, TW, TH, TR, GB, US_WA, US_DE, US_DC, US_WI, US_WV, US_HI, US_FL, US_WY, US_NH, US_NJ, US_NM, US_TX, US_LA, US_NC, US_ND, US_NE, US_TN, US_NY, US_PA, US_CA, US_NV, US_VA, US_CO, US_AK, US_AL, US_AR, US_VT, US_IL, US_GA, US_IN, US_IA, US_OK, US_AZ, US_ID, US_CT, US_ME, US_MD, US_MA, US_OH, US_UT, US_MO, US_MN, US_MI, US_RI, US_KS, US_MT, US_MS, US_SC, US_KY, US_OR, US_SD)"},"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"g":{"type":"string","title":"Optional parameter","description":"one of (GLOBAL, US, AR, AU, BG, CA, CL, CO, HR, CZ, FI, FR, DE, GR, HU, IS, IN, IE, IT, JP, MY, MX, NZ, PH, PL, PT, PR, RO, RS, SG, ES, SE, TW, TH, TR, GB, US_WA, US_DE, US_DC, US_WI, US_WV, US_HI, US_FL, US_WY, US_NH, US_NJ, US_NM, US_TX, US_LA, US_NC, US_ND, US_NE, US_TN, US_NY, US_PA, US_CA, US_NV, US_VA, US_CO, US_AK, US_AL, US_AR, US_VT, US_IL, US_GA, US_IN, US_IA, US_OK, US_AZ, US_ID, US_CT, US_ME, US_MD, US_MA, US_OH, US_UT, US_MO, US_MN, US_MI, US_RI, US_KS, US_MT, US_MS, US_SC, US_KY, US_OR, US_SD)"},"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get hot posts from Reddit.\n\nRetrieves hot posts from Reddit.\n\nThis API fetches the most popular posts currently trending on Reddit.\nThe input requires a subreddit name and optional parameters for filtering.\nThe output provides a list of hot posts with details such as title, author, and score.","tags":[]},{"method":"patch","path":"/connector/reddit/get-new-posts","name":"connector_reddit_get_new_posts_getNewPosts","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get new posts from Reddit.\n\nRetrieves new posts from Reddit.\n\nThis API fetches the latest posts from a specified subreddit.\nThe input requires a subreddit name and optional parameters for pagination.\nThe output provides a list of new posts with details such as title, author, and timestamp.","tags":[]},{"method":"patch","path":"/connector/reddit/get-top-posts","name":"connector_reddit_get_top_posts_getTopPosts","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"time_filter":{"type":"string","enum":["all","day","week","month","year","hour"]},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch posts from"},"time_filter":{"type":"string","enum":["all","day","week","month","year","hour"]},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get top posts from Reddit.\n\nRetrieves top posts from Reddit.\n\nThis API fetches the highest-rated posts from a specified subreddit over a given time period.\nThe input requires a subreddit name and a time filter (e.g., day, week, month).\nThe output provides a list of top posts with details such as title, author, and score.","tags":[]},{"method":"patch","path":"/connector/reddit/get-comments","name":"connector_reddit_get_comments_getComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"comment":{"type":"string","title":"Comment ID","description":"(optional) ID36 of a comment"},"depth":{"type":"number","title":"depth","description":"depth is the maximum depth of subtrees in the thread."},"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit of the post"},"article":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-hot-posts","jmesPath":"children[].data.{label: title, id: id}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-new-posts","jmesPath":"children[].data.{label: title, id: id}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-top-posts","jmesPath":"children[].data.{label: title, id: id}"}}]},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["article","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"comment":{"type":"string","title":"Comment ID","description":"(optional) ID36 of a comment"},"depth":{"type":"number","title":"depth","description":"depth is the maximum depth of subtrees in the thread."},"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit of the post"},"article":{"oneOf":[{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-hot-posts","jmesPath":"children[].data.{label: title, id: id}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-new-posts","jmesPath":"children[].data.{label: title, id: id}"}},{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/reddit/get-top-posts","jmesPath":"children[].data.{label: title, id: id}"}}]},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"}},"required":["article"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"articles":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"more":{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false,"nullable":true},"flatComments":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}}},"required":["articles","more","flatComments"],"additionalProperties":false},"description":"Get comments from a Reddit post.\n\nRetrieves comments from a Reddit post.\n\nThis API fetches comments for a specific Reddit post.\nThe input requires the post ID and subreddit name.\nThe output provides a list of comments with details such as author, content, and score.","tags":[]},{"method":"patch","path":"/connector/reddit/get-user-about","name":"connector_reddit_get_user_about_getUserAbout","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch information for"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch information for"}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"kind":{"type":"string","enum":["t2"],"title":"kind"},"data":{"type":"object","properties":{"is_employee":{"type":"boolean","title":"is_employee"},"has_visited_new_profile":{"type":"boolean","title":"has_visited_new_profile"},"is_friend":{"type":"boolean","title":"is_friend"},"pref_no_profanity":{"type":"boolean","title":"pref_no_profanity"},"has_external_account":{"type":"boolean","title":"has_external_account"},"pref_geopopular":{"type":"string","title":"pref_geopopular"},"pref_show_trending":{"type":"boolean","title":"pref_show_trending"},"subreddit":{"type":"object","properties":{"default_set":{"type":"boolean","title":"default_set"},"user_is_contributor":{"type":"boolean","title":"user_is_contributor"},"banner_img":{"type":"string","title":"banner_img"},"allowed_media_in_comments":{"type":"array","items":{},"title":"allowed_media_in_comments"},"user_is_banned":{"type":"boolean","title":"user_is_banned"},"free_form_reports":{"type":"boolean","title":"free_form_reports"},"community_icon":{"type":"string","format":"iri","nullable":true},"show_media":{"type":"boolean","title":"show_media"},"icon_color":{"type":"string","title":"icon_color"},"user_is_muted":{"type":"null","title":"user_is_muted"},"display_name":{"type":"string","title":"display_name"},"header_img":{"type":"string","format":"iri","nullable":true},"title":{"type":"string","title":"title"},"coins":{"type":"integer","title":"coins"},"previous_names":{"type":"array","items":{},"title":"previous_names"},"over_18":{"type":"boolean","title":"over_18"},"icon_size":{"type":"array","items":{"type":"integer"},"minItems":2,"maxItems":2,"title":"icon_size"},"primary_color":{"type":"string","title":"primary_color"},"icon_img":{"type":"string","format":"iri","title":"icon_img"},"description":{"type":"string","title":"description"},"submit_link_label":{"type":"string","title":"submit_link_label"},"header_size":{"type":"null","title":"header_size"},"restrict_posting":{"type":"boolean","title":"restrict_posting"},"restrict_commenting":{"type":"boolean","title":"restrict_commenting"},"subscribers":{"type":"integer","title":"subscribers"},"submit_text_label":{"type":"string","title":"submit_text_label"},"is_default_icon":{"type":"boolean","title":"is_default_icon"},"link_flair_position":{"type":"string","title":"link_flair_position"},"display_name_prefixed":{"type":"string","pattern":"^(u\\/(.*))","title":"display_name_prefixed"},"key_color":{"type":"string","title":"key_color"},"name":{"type":"string","pattern":"^(t5_(.*))","title":"name"},"is_default_banner":{"type":"boolean","title":"is_default_banner"},"url":{"type":"string","pattern":"^(\\/user\\/(.*)\\/)$","title":"url"},"quarantine":{"type":"boolean","title":"quarantine"},"banner_size":{"type":"array","items":{"type":"integer"},"minItems":2,"maxItems":2,"nullable":true},"user_is_moderator":{"type":"boolean","title":"user_is_moderator"},"accept_followers":{"type":"boolean","title":"accept_followers"},"public_description":{"type":"string","title":"public_description"},"link_flair_enabled":{"type":"boolean","title":"link_flair_enabled"},"disable_contributor_requests":{"type":"boolean","title":"disable_contributor_requests"},"subreddit_type":{"type":"string","enum":["user"],"title":"subreddit_type"},"user_is_subscriber":{"type":"boolean","title":"user_is_subscriber"}},"required":[],"title":"subreddit","additionalProperties":false},"pref_show_presence":{"type":"boolean","title":"pref_show_presence"},"snoovatar_img":{"type":"string","title":"snoovatar_img"},"snoovatar_size":{"type":"array","items":{"type":"integer"},"minItems":2,"maxItems":2,"nullable":true},"gold_expiration":{"type":"integer","nullable":true},"has_gold_subscription":{"type":"boolean","title":"has_gold_subscription"},"is_sponsor":{"type":"boolean","title":"is_sponsor"},"num_friends":{"type":"integer","title":"num_friends"},"features":{"type":"object","properties":{"modmail_harassment_filter":{"type":"boolean","title":"modmail_harassment_filter"},"mod_service_mute_writes":{"type":"boolean","title":"mod_service_mute_writes"},"promoted_trend_blanks":{"type":"boolean","title":"promoted_trend_blanks"},"show_amp_link":{"type":"boolean","title":"show_amp_link"},"is_email_permission_required":{"type":"boolean","title":"is_email_permission_required"},"mod_awards":{"type":"boolean","title":"mod_awards"},"awards_on_streams":{"type":"boolean","title":"awards_on_streams"},"mweb_xpromo_modal_listing_click_daily_dismissible_ios":{"type":"boolean","title":"mweb_xpromo_modal_listing_click_daily_dismissible_ios"},"chat_subreddit":{"type":"boolean","title":"chat_subreddit"},"cookie_consent_banner":{"type":"boolean","title":"cookie_consent_banner"},"modlog_copyright_removal":{"type":"boolean","title":"modlog_copyright_removal"},"do_not_track":{"type":"boolean","title":"do_not_track"},"images_in_comments":{"type":"boolean","title":"images_in_comments"},"mod_service_mute_reads":{"type":"boolean","title":"mod_service_mute_reads"},"chat_user_settings":{"type":"boolean","title":"chat_user_settings"},"use_pref_account_deployment":{"type":"boolean","title":"use_pref_account_deployment"},"mweb_xpromo_interstitial_comments_ios":{"type":"boolean","title":"mweb_xpromo_interstitial_comments_ios"},"mweb_xpromo_modal_listing_click_daily_dismissible_android":{"type":"boolean","title":"mweb_xpromo_modal_listing_click_daily_dismissible_android"},"premium_subscriptions_table":{"type":"boolean","title":"premium_subscriptions_table"},"mweb_xpromo_interstitial_comments_android":{"type":"boolean","title":"mweb_xpromo_interstitial_comments_android"},"crowd_control_for_post":{"type":"boolean","title":"crowd_control_for_post"},"chat_group_rollout":{"type":"boolean","title":"chat_group_rollout"},"resized_styles_images":{"type":"boolean","title":"resized_styles_images"},"noreferrer_to_noopener":{"type":"boolean","title":"noreferrer_to_noopener"},"expensive_coins_package":{"type":"boolean","title":"expensive_coins_package"}},"required":[],"title":"features","additionalProperties":false},"can_edit_name":{"type":"boolean","title":"can_edit_name"},"is_blocked":{"type":"boolean","title":"is_blocked"},"verified":{"type":"boolean","title":"verified"},"pref_autoplay":{"type":"boolean","title":"pref_autoplay"},"coins":{"type":"integer","title":"coins"},"has_paypal_subscription":{"type":"boolean","title":"has_paypal_subscription"},"has_subscribed_to_premium":{"type":"boolean","title":"has_subscribed_to_premium"},"id":{"type":"string","title":"id"},"can_create_subreddit":{"type":"boolean","title":"can_create_subreddit"},"over_18":{"type":"boolean","title":"over_18"},"is_gold":{"type":"boolean","title":"is_gold"},"is_mod":{"type":"boolean","title":"is_mod"},"awarder_karma":{"type":"integer","title":"awarder_karma"},"suspension_expiration_utc":{"type":"integer","nullable":true},"has_stripe_subscription":{"type":"boolean","title":"has_stripe_subscription"},"is_suspended":{"type":"boolean","title":"is_suspended"},"pref_video_autoplay":{"type":"boolean","title":"pref_video_autoplay"},"has_android_subscription":{"type":"boolean","title":"has_android_subscription"},"in_redesign_beta":{"type":"boolean","title":"in_redesign_beta"},"icon_img":{"type":"string","format":"iri","title":"icon_img"},"pref_nightmode":{"type":"boolean","title":"pref_nightmode"},"awardee_karma":{"type":"integer","title":"awardee_karma"},"hide_from_robots":{"type":"boolean","title":"hide_from_robots"},"password_set":{"type":"boolean","title":"password_set"},"modhash":{"type":"null","title":"modhash"},"link_karma":{"type":"integer","title":"link_karma"},"force_password_reset":{"type":"boolean","title":"force_password_reset"},"total_karma":{"type":"integer","title":"total_karma"},"inbox_count":{"type":"integer","title":"inbox_count"},"pref_top_karma_subreddits":{"type":"boolean","title":"pref_top_karma_subreddits"},"pref_show_snoovatar":{"type":"boolean","title":"pref_show_snoovatar"},"name":{"type":"string","title":"name"},"pref_clickgadget":{"type":"integer","title":"pref_clickgadget"},"created":{"type":"integer","title":"created"},"has_verified_email":{"type":"boolean","title":"has_verified_email"},"gold_creddits":{"type":"integer","title":"gold_creddits"},"created_utc":{"type":"integer","title":"created_utc"},"has_ios_subscription":{"type":"boolean","title":"has_ios_subscription"},"pref_show_twitter":{"type":"boolean","title":"pref_show_twitter"},"in_beta":{"type":"boolean","title":"in_beta"},"comment_karma":{"type":"integer","title":"comment_karma"},"accept_followers":{"type":"boolean","title":"accept_followers"},"has_subscribed":{"type":"boolean","title":"has_subscribed"}},"required":[],"title":"data","additionalProperties":false}},"required":["kind"],"additionalProperties":false},"description":"Get information about a Reddit user.\n\nRetrieves information about a Reddit user.\n\nThis API fetches profile information for a specified Reddit user.\nThe input requires the username.\nThe output provides user details such as karma, account age, and recent activity.","tags":[]},{"method":"patch","path":"/connector/reddit/get-user-submitted","name":"connector_reddit_get_user_submitted_getUserSubmitted","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch posts for"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch posts for"},"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get posts submitted by a Reddit user.\n\nRetrieves posts submitted by a Reddit user.\n\nThis API fetches posts submitted by a specified Reddit user.\nThe input requires the username.\nThe output provides a list of submitted posts with details such as title, subreddit, and score.","tags":[]},{"method":"patch","path":"/connector/reddit/get-user-comments","name":"connector_reddit_get_user_comments_getUserComments","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch comments for"},"limit":{"type":"integer","minimum":1,"title":"The number of comments to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"username":{"type":"string","title":"The username to fetch comments for"},"limit":{"type":"integer","minimum":1,"title":"The number of comments to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":["username"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"more":{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false,"nullable":true},"flatComments":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["t1"],"title":"kind"},"data":{"type":"object","properties":{"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"link_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"link_id"},"comment_type":{"type":"null","title":"comment_type"},"depth":{"type":"integer","title":"depth"},"replies":{"oneOf":[{"type":"object","properties":{"kind":{"type":"string","enum":["Listing"]},"data":{"type":"object","properties":{"after":{"type":"null"},"dist":{"type":"null"},"modhash":{"type":"null"},"geo_filter":{"type":"string"},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"object","properties":{"kind":{"type":"string","enum":["more"],"title":"kind"},"data":{"type":"object","properties":{"count":{"type":"integer","title":"count"},"name":{"type":"string","pattern":"^(t1_(.*))","title":"name"},"id":{"type":"string","title":"id"},"parent_id":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"parent_id"},"depth":{"type":"integer","title":"depth"},"children":{"type":"array","items":{"type":"string"},"title":"children"}},"required":["count","name","id","parent_id","depth","children"],"title":"data","additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}]}},"before":{"type":"null"}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},{"type":"string","enum":[""]}]},"collapsed_reason_code":{"type":"string","nullable":true},"collapsed":{"type":"boolean","title":"collapsed"},"body":{"type":"string","title":"body"},"body_html":{"type":"string","title":"body_html"},"is_submitter":{"type":"boolean","title":"is_submitter"},"collapsed_reason":{"type":"string","nullable":true},"associated_award":{"type":"null","title":"associated_award"},"unrepliable_reason":{"type":"string","nullable":true},"controversiality":{"type":"integer","title":"controversiality"},"score_hidden":{"type":"boolean","title":"score_hidden"},"collapsed_because_crowd_control":{"type":"null","title":"collapsed_because_crowd_control"},"name":{"type":"string","title":"The name of the post"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"score":{"type":"number","title":"Score of the post"},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true}},"required":["id","parent_id","name"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false}}},"required":["more","flatComments"],"additionalProperties":false},"description":"Get comments made by a Reddit user.\n\nRetrieves comments made by a Reddit user.\n\nThis API fetches comments made by a specified Reddit user.\nThe input requires the username.\nThe output provides a list of comments with details such as content, subreddit, and score.","tags":[]},{"method":"patch","path":"/connector/reddit/search-subreddits","name":"connector_reddit_search_subreddits_searchSubreddits","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"The search query"},"count":{"type":"integer","minimum":0,"title":"The count of items"},"limit":{"type":"integer","minimum":1,"title":"The number of subreddits to fetch"},"sort":{"type":"string","enum":["relevance","activity"]},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["q","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"q":{"type":"string","title":"The search query"},"count":{"type":"integer","minimum":0,"title":"The count of items"},"limit":{"type":"integer","minimum":1,"title":"The number of subreddits to fetch"},"sort":{"type":"string","enum":["relevance","activity"]},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":["q"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["t5"],"title":"kind"},"data":{"type":"object","properties":{"restrict_posting":{"type":"boolean","title":"restrict_posting"},"user_is_banned":{"type":"boolean","title":"user_is_banned"},"free_form_reports":{"type":"boolean","title":"free_form_reports"},"user_is_muted":{"type":"boolean","title":"user_is_muted"},"display_name":{"type":"string","title":"display_name"},"title":{"type":"string","title":"title"},"allow_galleries":{"type":"boolean","title":"allow_galleries"},"primary_color":{"type":"string","title":"primary_color"},"icon_img":{"type":"string","title":"icon_img"},"display_name_prefixed":{"type":"string","title":"display_name_prefixed"},"public_traffic":{"type":"boolean","title":"public_traffic"},"subscribers":{"type":"number","title":"subscribers"},"user_flair_richtext":{"type":"array","items":{},"title":"user_flair_richtext"},"videostream_links_count":{"type":"number","title":"videostream_links_count"},"name":{"type":"string","title":"name"},"quarantine":{"type":"boolean","title":"quarantine"},"hide_ads":{"type":"boolean","title":"hide_ads"},"prediction_leaderboard_entry_type":{"type":"number","title":"prediction_leaderboard_entry_type"},"emojis_enabled":{"type":"boolean","title":"emojis_enabled"},"advertiser_category":{"type":"string","title":"advertiser_category"},"public_description":{"type":"string","title":"public_description"},"comment_score_hide_mins":{"type":"number","title":"comment_score_hide_mins"},"allow_predictions":{"type":"boolean","title":"allow_predictions"},"user_has_favorited":{"type":"boolean","title":"user_has_favorited"},"community_icon":{"type":"string","title":"community_icon"},"banner_background_image":{"type":"string","title":"banner_background_image"},"original_content_tag_enabled":{"type":"boolean","title":"original_content_tag_enabled"},"community_reviewed":{"type":"boolean","title":"community_reviewed"},"submit_text":{"type":"string","title":"submit_text"},"description_html":{"type":"string","title":"description_html"},"spoilers_enabled":{"type":"boolean","title":"spoilers_enabled"},"comment_contribution_settings":{"title":"comment_contribution_settings"},"allow_talks":{"type":"boolean","title":"allow_talks"},"user_flair_position":{"type":"string","title":"user_flair_position"},"all_original_content":{"type":"boolean","title":"all_original_content"},"has_menu_widget":{"type":"boolean","title":"has_menu_widget"},"key_color":{"type":"string","title":"key_color"},"can_assign_user_flair":{"type":"boolean","title":"can_assign_user_flair"},"created":{"type":"number","title":"created"},"wls":{"type":"number","title":"wls"},"show_media_preview":{"type":"boolean","title":"show_media_preview"},"submission_type":{"type":"string","title":"submission_type"},"user_is_subscriber":{"type":"boolean","title":"user_is_subscriber"},"allowed_media_in_comments":{"type":"array","items":{},"title":"allowed_media_in_comments"},"allow_videogifs":{"type":"boolean","title":"allow_videogifs"},"should_archive_posts":{"type":"boolean","title":"should_archive_posts"},"user_flair_type":{"type":"string","title":"user_flair_type"},"allow_polls":{"type":"boolean","title":"allow_polls"},"collapse_deleted_comments":{"type":"boolean","title":"collapse_deleted_comments"},"public_description_html":{"type":"string","nullable":true},"allow_videos":{"type":"boolean","title":"allow_videos"},"is_crosspostable_subreddit":{"type":"boolean","nullable":true},"should_show_media_in_comments_setting":{"type":"boolean","title":"should_show_media_in_comments_setting"},"can_assign_link_flair":{"type":"boolean","title":"can_assign_link_flair"},"accounts_active_is_fuzzed":{"type":"boolean","title":"accounts_active_is_fuzzed"},"allow_prediction_contributors":{"type":"boolean","title":"allow_prediction_contributors"},"submit_text_label":{"type":"string","title":"submit_text_label"},"link_flair_position":{"type":"string","title":"link_flair_position"},"user_flair_enabled_in_sr":{"type":"boolean","title":"user_flair_enabled_in_sr"},"allow_discovery":{"type":"boolean","title":"allow_discovery"},"accept_followers":{"type":"boolean","title":"accept_followers"},"user_sr_theme_enabled":{"type":"boolean","title":"user_sr_theme_enabled"},"link_flair_enabled":{"type":"boolean","title":"link_flair_enabled"},"disable_contributor_requests":{"type":"boolean","title":"disable_contributor_requests"},"subreddit_type":{"type":"string","title":"subreddit_type"},"banner_img":{"type":"string","title":"banner_img"},"banner_background_color":{"type":"string","title":"banner_background_color"},"show_media":{"type":"boolean","title":"show_media"},"id":{"type":"string","title":"id"},"user_is_contributor":{"type":"boolean","title":"user_is_contributor"},"over18":{"type":"boolean","title":"over18"},"header_title":{"type":"string","title":"header_title"},"description":{"type":"string","title":"description"},"submit_link_label":{"type":"string","title":"submit_link_label"},"restrict_commenting":{"type":"boolean","title":"restrict_commenting"},"allow_images":{"type":"boolean","title":"allow_images"},"lang":{"type":"string","title":"lang"},"url":{"type":"string","title":"url"},"created_utc":{"type":"number","title":"created_utc"},"mobile_banner_image":{"type":"string","title":"mobile_banner_image"},"user_is_moderator":{"type":"boolean","title":"user_is_moderator"},"allow_predictions_tournament":{"type":"boolean","title":"allow_predictions_tournament"}},"required":[],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children sub-reddits"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Search for subreddits on Reddit.\n\nSearches for subreddits on Reddit.\n\nThis API allows searching for subreddits based on a query string.\nThe input requires a search query.\nThe output provides a list of subreddits matching the query with details such as name and subscriber count.","tags":[]},{"method":"patch","path":"/connector/reddit/get-subreddit-about","name":"connector_reddit_get_subreddit_about_getSubredditAbout","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch information for"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["subreddit","secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"subreddit":{"type":"string","pattern":"^(r\\/(.*))","title":"The subreddit to fetch information for"}},"required":["subreddit"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"header_img":{"type":"string","format":"iri","nullable":true},"name":{"type":"string","title":"The name of the subreddit"},"description":{"type":"string","title":"The description of the subreddit"},"subscribers":{"type":"number","title":"The number of subscribers"},"restrict_posting":{"type":"boolean","title":"restrict_posting"},"user_is_banned":{"type":"boolean","title":"user_is_banned"},"free_form_reports":{"type":"boolean","title":"free_form_reports"},"user_is_muted":{"type":"boolean","title":"user_is_muted"},"display_name":{"type":"string","title":"display_name"},"title":{"type":"string","title":"title"},"allow_galleries":{"type":"boolean","title":"allow_galleries"},"primary_color":{"type":"string","title":"primary_color"},"icon_img":{"type":"string","title":"icon_img"},"display_name_prefixed":{"type":"string","title":"display_name_prefixed"},"public_traffic":{"type":"boolean","title":"public_traffic"},"user_flair_richtext":{"type":"array","items":{},"title":"user_flair_richtext"},"videostream_links_count":{"type":"number","title":"videostream_links_count"},"quarantine":{"type":"boolean","title":"quarantine"},"hide_ads":{"type":"boolean","title":"hide_ads"},"prediction_leaderboard_entry_type":{"type":"number","title":"prediction_leaderboard_entry_type"},"emojis_enabled":{"type":"boolean","title":"emojis_enabled"},"advertiser_category":{"type":"string","title":"advertiser_category"},"public_description":{"type":"string","title":"public_description"},"comment_score_hide_mins":{"type":"number","title":"comment_score_hide_mins"},"allow_predictions":{"type":"boolean","title":"allow_predictions"},"user_has_favorited":{"type":"boolean","title":"user_has_favorited"},"community_icon":{"type":"string","title":"community_icon"},"banner_background_image":{"type":"string","title":"banner_background_image"},"original_content_tag_enabled":{"type":"boolean","title":"original_content_tag_enabled"},"community_reviewed":{"type":"boolean","title":"community_reviewed"},"submit_text":{"type":"string","title":"submit_text"},"description_html":{"type":"string","title":"description_html"},"spoilers_enabled":{"type":"boolean","title":"spoilers_enabled"},"comment_contribution_settings":{"title":"comment_contribution_settings"},"allow_talks":{"type":"boolean","title":"allow_talks"},"user_flair_position":{"type":"string","title":"user_flair_position"},"all_original_content":{"type":"boolean","title":"all_original_content"},"has_menu_widget":{"type":"boolean","title":"has_menu_widget"},"key_color":{"type":"string","title":"key_color"},"can_assign_user_flair":{"type":"boolean","title":"can_assign_user_flair"},"created":{"type":"number","title":"created"},"wls":{"type":"number","title":"wls"},"show_media_preview":{"type":"boolean","title":"show_media_preview"},"submission_type":{"type":"string","title":"submission_type"},"user_is_subscriber":{"type":"boolean","title":"user_is_subscriber"},"allowed_media_in_comments":{"type":"array","items":{},"title":"allowed_media_in_comments"},"allow_videogifs":{"type":"boolean","title":"allow_videogifs"},"should_archive_posts":{"type":"boolean","title":"should_archive_posts"},"user_flair_type":{"type":"string","title":"user_flair_type"},"allow_polls":{"type":"boolean","title":"allow_polls"},"collapse_deleted_comments":{"type":"boolean","title":"collapse_deleted_comments"},"public_description_html":{"type":"string","nullable":true},"allow_videos":{"type":"boolean","title":"allow_videos"},"is_crosspostable_subreddit":{"type":"boolean","nullable":true},"should_show_media_in_comments_setting":{"type":"boolean","title":"should_show_media_in_comments_setting"},"can_assign_link_flair":{"type":"boolean","title":"can_assign_link_flair"},"accounts_active_is_fuzzed":{"type":"boolean","title":"accounts_active_is_fuzzed"},"allow_prediction_contributors":{"type":"boolean","title":"allow_prediction_contributors"},"submit_text_label":{"type":"string","title":"submit_text_label"},"link_flair_position":{"type":"string","title":"link_flair_position"},"user_flair_enabled_in_sr":{"type":"boolean","title":"user_flair_enabled_in_sr"},"allow_discovery":{"type":"boolean","title":"allow_discovery"},"accept_followers":{"type":"boolean","title":"accept_followers"},"user_sr_theme_enabled":{"type":"boolean","title":"user_sr_theme_enabled"},"link_flair_enabled":{"type":"boolean","title":"link_flair_enabled"},"disable_contributor_requests":{"type":"boolean","title":"disable_contributor_requests"},"subreddit_type":{"type":"string","title":"subreddit_type"},"banner_img":{"type":"string","title":"banner_img"},"banner_background_color":{"type":"string","title":"banner_background_color"},"show_media":{"type":"boolean","title":"show_media"},"id":{"type":"string","title":"id"},"user_is_contributor":{"type":"boolean","title":"user_is_contributor"},"over18":{"type":"boolean","title":"over18"},"header_title":{"type":"string","title":"header_title"},"submit_link_label":{"type":"string","title":"submit_link_label"},"restrict_commenting":{"type":"boolean","title":"restrict_commenting"},"allow_images":{"type":"boolean","title":"allow_images"},"lang":{"type":"string","title":"lang"},"url":{"type":"string","title":"url"},"created_utc":{"type":"number","title":"created_utc"},"mobile_banner_image":{"type":"string","title":"mobile_banner_image"},"user_is_moderator":{"type":"boolean","title":"user_is_moderator"},"allow_predictions_tournament":{"type":"boolean","title":"allow_predictions_tournament"}},"required":["name","description","subscribers"],"additionalProperties":false},"description":"Get information about a subreddit.\n\nRetrieves information about a subreddit.\n\nThis API fetches detailed information about a specified subreddit.\nThe input requires the subreddit name.\nThe output provides details such as description, subscriber count, and rules.","tags":[]},{"method":"patch","path":"/connector/reddit/get-popular-subreddits","name":"connector_reddit_get_popular_subreddits_getPopularSubreddits","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The number of posts to fetch"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","enum":["t5"],"title":"kind"},"data":{"type":"object","properties":{"restrict_posting":{"type":"boolean","title":"restrict_posting"},"user_is_banned":{"type":"boolean","title":"user_is_banned"},"free_form_reports":{"type":"boolean","title":"free_form_reports"},"user_is_muted":{"type":"boolean","title":"user_is_muted"},"display_name":{"type":"string","title":"display_name"},"title":{"type":"string","title":"title"},"allow_galleries":{"type":"boolean","title":"allow_galleries"},"primary_color":{"type":"string","title":"primary_color"},"icon_img":{"type":"string","title":"icon_img"},"display_name_prefixed":{"type":"string","title":"display_name_prefixed"},"public_traffic":{"type":"boolean","title":"public_traffic"},"subscribers":{"type":"number","title":"subscribers"},"user_flair_richtext":{"type":"array","items":{},"title":"user_flair_richtext"},"videostream_links_count":{"type":"number","title":"videostream_links_count"},"name":{"type":"string","title":"name"},"quarantine":{"type":"boolean","title":"quarantine"},"hide_ads":{"type":"boolean","title":"hide_ads"},"prediction_leaderboard_entry_type":{"type":"number","title":"prediction_leaderboard_entry_type"},"emojis_enabled":{"type":"boolean","title":"emojis_enabled"},"advertiser_category":{"type":"string","title":"advertiser_category"},"public_description":{"type":"string","title":"public_description"},"comment_score_hide_mins":{"type":"number","title":"comment_score_hide_mins"},"allow_predictions":{"type":"boolean","title":"allow_predictions"},"user_has_favorited":{"type":"boolean","title":"user_has_favorited"},"community_icon":{"type":"string","title":"community_icon"},"banner_background_image":{"type":"string","title":"banner_background_image"},"original_content_tag_enabled":{"type":"boolean","title":"original_content_tag_enabled"},"community_reviewed":{"type":"boolean","title":"community_reviewed"},"submit_text":{"type":"string","title":"submit_text"},"description_html":{"type":"string","title":"description_html"},"spoilers_enabled":{"type":"boolean","title":"spoilers_enabled"},"comment_contribution_settings":{"title":"comment_contribution_settings"},"allow_talks":{"type":"boolean","title":"allow_talks"},"user_flair_position":{"type":"string","title":"user_flair_position"},"all_original_content":{"type":"boolean","title":"all_original_content"},"has_menu_widget":{"type":"boolean","title":"has_menu_widget"},"key_color":{"type":"string","title":"key_color"},"can_assign_user_flair":{"type":"boolean","title":"can_assign_user_flair"},"created":{"type":"number","title":"created"},"wls":{"type":"number","title":"wls"},"show_media_preview":{"type":"boolean","title":"show_media_preview"},"submission_type":{"type":"string","title":"submission_type"},"user_is_subscriber":{"type":"boolean","title":"user_is_subscriber"},"allowed_media_in_comments":{"type":"array","items":{},"title":"allowed_media_in_comments"},"allow_videogifs":{"type":"boolean","title":"allow_videogifs"},"should_archive_posts":{"type":"boolean","title":"should_archive_posts"},"user_flair_type":{"type":"string","title":"user_flair_type"},"allow_polls":{"type":"boolean","title":"allow_polls"},"collapse_deleted_comments":{"type":"boolean","title":"collapse_deleted_comments"},"public_description_html":{"type":"string","nullable":true},"allow_videos":{"type":"boolean","title":"allow_videos"},"is_crosspostable_subreddit":{"type":"boolean","nullable":true},"should_show_media_in_comments_setting":{"type":"boolean","title":"should_show_media_in_comments_setting"},"can_assign_link_flair":{"type":"boolean","title":"can_assign_link_flair"},"accounts_active_is_fuzzed":{"type":"boolean","title":"accounts_active_is_fuzzed"},"allow_prediction_contributors":{"type":"boolean","title":"allow_prediction_contributors"},"submit_text_label":{"type":"string","title":"submit_text_label"},"link_flair_position":{"type":"string","title":"link_flair_position"},"user_flair_enabled_in_sr":{"type":"boolean","title":"user_flair_enabled_in_sr"},"allow_discovery":{"type":"boolean","title":"allow_discovery"},"accept_followers":{"type":"boolean","title":"accept_followers"},"user_sr_theme_enabled":{"type":"boolean","title":"user_sr_theme_enabled"},"link_flair_enabled":{"type":"boolean","title":"link_flair_enabled"},"disable_contributor_requests":{"type":"boolean","title":"disable_contributor_requests"},"subreddit_type":{"type":"string","title":"subreddit_type"},"banner_img":{"type":"string","title":"banner_img"},"banner_background_color":{"type":"string","title":"banner_background_color"},"show_media":{"type":"boolean","title":"show_media"},"id":{"type":"string","title":"id"},"user_is_contributor":{"type":"boolean","title":"user_is_contributor"},"over18":{"type":"boolean","title":"over18"},"header_title":{"type":"string","title":"header_title"},"description":{"type":"string","title":"description"},"submit_link_label":{"type":"string","title":"submit_link_label"},"restrict_commenting":{"type":"boolean","title":"restrict_commenting"},"allow_images":{"type":"boolean","title":"allow_images"},"lang":{"type":"string","title":"lang"},"url":{"type":"string","title":"url"},"created_utc":{"type":"number","title":"created_utc"},"mobile_banner_image":{"type":"string","title":"mobile_banner_image"},"user_is_moderator":{"type":"boolean","title":"user_is_moderator"},"allow_predictions_tournament":{"type":"boolean","title":"allow_predictions_tournament"}},"required":[],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children sub-reddits"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get popular subreddits.\n\nRetrieves popular subreddits.\n\nThis API fetches a list of currently popular subreddits.\nThe output provides details such as subreddit name and subscriber count.","tags":[]},{"method":"patch","path":"/connector/reddit/get-best-content","name":"connector_reddit_get_best_content_getBestContent","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The max number of items"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"limit":{"type":"integer","minimum":1,"maximum":100,"default":25,"title":"The max number of items"},"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"after","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","title":"before","description":"When the value of the 'after' parameter that came in response to the previous request is substituted,\nit is a parameter for page selection that inquires before and after the value.\nIf omitted, the first page will be viewed unconditionally.\n\nThe prefix t1_, t2_, t3_, t4_, t5_, t6_ attached to the beginning of the value has the following meaning.\n- t1_ : Comment\n- t2_ : Account\n- t3_ : Link\n- t4_ : Message\n- t5_ : Subreddit\n- t6_ : Award"}},"required":[],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"reddit","x-wrtn-secret-scopes":["account","history","identity","mysubreddits","read","report","save"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}]},"output":{"type":"object","properties":{"after":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true},"dist":{"type":"number","nullable":true},"modhash":{"type":"string","nullable":true},"geo_filter":{"type":"string","nullable":true},"children":{"type":"array","items":{"type":"object","properties":{"kind":{"type":"string","title":"The kind of the child"},"data":{"type":"object","properties":{"approved_at_utc":{"type":"string","nullable":true},"subreddit":{"type":"string","title":"The subreddit name"},"selftext":{"type":"string","title":"The text of the post"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"saved":{"type":"boolean","title":"Whether the post is saved"},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"clicked":{"type":"boolean","title":"Whether the post is clicked"},"title":{"type":"string","title":"The title of the post"},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"thumbnail_height":{"type":"number","nullable":true},"top_awarded_type":{"type":"string","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"name":{"type":"string","title":"The name of the post"},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"author_flair_background_color":{"type":"string","nullable":true},"ups":{"type":"integer","nullable":true},"total_awards_received":{"type":"number","title":"Total awards received"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"category":{"type":"string","nullable":true},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"link_flair_text":{"type":"string","nullable":true},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"score":{"type":"number","title":"Score of the post"},"approved_by":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"author_flair_css_class":{"type":"string","nullable":true},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"gildings":{"title":"Gildings information"},"post_hint":{"type":"string","nullable":true},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"created":{"type":"number","title":"Creation time"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"domain":{"type":"string","title":"Domain of the post"},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"likes":{"type":"integer","nullable":true},"suggested_sort":{"type":"string","nullable":true},"banned_at_utc":{"type":"integer","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"view_count":{"type":"string","nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"media_only":{"type":"boolean","title":"Whether it's media only"},"link_flair_template_id":{"type":"string","nullable":true},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"locked":{"type":"boolean","title":"Whether the post is locked"},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"author_is_blocked":{"type":"boolean","nullable":true},"mod_reason_by":{"type":"string","nullable":true},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"removal_reason":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"id":{"type":"string","title":"ID of the post"},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"report_reasons":{"type":"string","nullable":true},"author":{"type":"string","title":"Author of the post"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"url":{"type":"string","title":"URL of the post"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_video":{"type":"boolean","title":"Whether the post is a video"},"is_gallery":{"type":"boolean","nullable":true},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"crosspost_parent_list":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"The title of the post"},"name":{"type":"string","title":"The name of the post"},"url":{"type":"string","title":"URL of the post"},"id":{"type":"string","title":"ID of the post"},"view_count":{"type":"string","nullable":true},"hidden":{"type":"boolean","title":"Whether the post is hidden"},"thumbnail":{"type":"string","title":"Thumbnail URL"},"author":{"type":"string","title":"Author of the post"},"locked":{"type":"boolean","title":"Whether the post is locked"},"created":{"type":"number","title":"Creation time"},"domain":{"type":"string","title":"Domain of the post"},"score":{"type":"number","title":"Score of the post"},"category":{"type":"string","nullable":true},"media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"archived":{"type":"boolean","title":"Whether the post is archived"},"subreddit":{"type":"string","title":"The subreddit name"},"approved_at_utc":{"type":"string","nullable":true},"author_is_blocked":{"type":"boolean","nullable":true},"subreddit_id":{"type":"string","title":"ID of the subreddit"},"awarders":{"type":"array","items":{"type":"string"},"title":"Awarders of the post"},"mod_reason_by":{"type":"string","nullable":true},"banned_by":{"type":"string","nullable":true},"author_flair_type":{"type":"string","title":"Type of author flair"},"total_awards_received":{"type":"number","title":"Total awards received"},"author_flair_template_id":{"type":"string","format":"uuid","nullable":true},"likes":{"type":"integer","nullable":true},"user_reports":{"type":"array","items":{"type":"string"},"title":"User reports"},"saved":{"type":"boolean","title":"Whether the post is saved"},"banned_at_utc":{"type":"integer","nullable":true},"mod_reason_title":{"type":"string","nullable":true},"gilded":{"type":"integer","title":"Number of times gilded"},"no_follow":{"type":"boolean","title":"Whether no-follow is enabled"},"can_mod_post":{"type":"boolean","title":"Whether the post can be moderated"},"created_utc":{"type":"integer","title":"Creation time in UTC"},"send_replies":{"type":"boolean","title":"Whether to send replies"},"author_fullname":{"type":"string","pattern":"^(t2_(.*))","title":"The full name of the author"},"approved_by":{"type":"string","nullable":true},"mod_note":{"type":"string","nullable":true},"all_awardings":{"type":"array","items":{"type":"string"},"title":"All awardings"},"top_awarded_type":{"type":"string","nullable":true},"author_flair_css_class":{"type":"string","nullable":true},"downs":{"type":"integer","title":"Number of downvotes"},"author_flair_richtext":{"type":"array","items":{"type":"object","properties":{"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for author flair"},"author_patreon_flair":{"type":"boolean","title":"Whether the author has Patreon flair"},"removal_reason":{"type":"string","nullable":true},"distinguished":{"type":"string","nullable":true},"stickied":{"type":"boolean","title":"Whether the post is stickied"},"author_premium":{"type":"boolean","title":"Whether the author is premium"},"can_gild":{"type":"boolean","title":"Whether the post can be gilded"},"gildings":{"title":"Gildings information"},"author_flair_text_color":{"type":"string","nullable":true},"permalink":{"type":"string","title":"Permalink to the post"},"subreddit_type":{"type":"string","title":"Type of subreddit"},"report_reasons":{"type":"string","nullable":true},"author_flair_text":{"type":"string","nullable":true},"treatment_tags":{"type":"array","items":{"type":"string"},"title":"Treatment tags"},"subreddit_name_prefixed":{"type":"string","title":"Prefixed subreddit name"},"author_flair_background_color":{"type":"string","nullable":true},"mod_reports":{"type":"array","items":{"type":"string"},"title":"Moderator reports"},"num_reports":{"oneOf":[{"type":"string","nullable":true},{"type":"integer","nullable":true}]},"ups":{"type":"integer","nullable":true},"selftext":{"type":"string","title":"The text of the post"},"is_gallery":{"type":"boolean","nullable":true},"link_flair_richtext":{"type":"array","items":{"type":"object","properties":{"a":{"type":"string","title":"The type of the element"},"u":{"type":"string","title":"The type of the element"},"e":{"type":"string","title":"The type of the element"},"t":{"type":"string","title":"The text of the element"}},"required":[],"additionalProperties":false},"title":"Rich text for link flair"},"pwls":{"type":"number","nullable":true},"link_flair_css_class":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"hide_score":{"type":"boolean","title":"Whether the score is hidden"},"media_metadata":{"type":"object","properties":{},"required":[],"additionalProperties":{"type":"object","properties":{"status":{"type":"string","title":"The status of the metadata"},"e":{"type":"string","title":"The type of the element"},"m":{"type":"string","title":"The media type"},"p":{"type":"array","items":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"title":"The positions"},"s":{"type":"object","properties":{"y":{"type":"number","title":"The y-coordinate"},"x":{"type":"number","title":"The x-coordinate"},"u":{"type":"string","format":"iri","title":"The URL"}},"required":["y","x","u"],"additionalProperties":false},"id":{"type":"string","title":"The ID of the metadata"}},"required":[],"additionalProperties":false},"nullable":true},"quarantine":{"type":"boolean","title":"Whether the post is quarantined"},"link_flair_text_color":{"type":"string","nullable":true},"upvote_ratio":{"type":"number","title":"Ratio of upvotes"},"media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"thumbnail_width":{"type":"number","nullable":true},"is_original_content":{"type":"boolean","title":"Whether the content is original"},"secure_media":{"type":"object","properties":{"type":{"type":"string","title":"The type of the media"},"oembed":{"type":"object","properties":{"provider_url":{"type":"string","nullable":true},"version":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"type":{"type":"string","nullable":true},"thumbnail_width":{"type":"number","nullable":true},"height":{"type":"number","nullable":true},"width":{"type":"number","nullable":true},"html":{"type":"string","nullable":true},"author_name":{"type":"string","nullable":true},"provider_name":{"type":"string","nullable":true},"thumbnail_url":{"type":"string","nullable":true},"thumbnail_height":{"type":"number","nullable":true},"author_url":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}},"required":[],"additionalProperties":false}},"required":[],"additionalProperties":false,"nullable":true},"is_reddit_media_domain":{"type":"boolean","title":"Whether it's a Reddit media domain"},"is_meta":{"type":"boolean","title":"Whether it's meta content"},"secure_media_embed":{"type":"object","properties":{"content":{"type":"string","title":"The content of the media"},"width":{"type":"number","title":"The width of the media"},"scrolling":{"type":"boolean","title":"Whether scrolling is enabled"},"media_domain_url":{"type":"string","title":"The media domain URL"},"height":{"type":"number","title":"The height of the media"}},"required":[],"additionalProperties":false},"gallery_data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"media_id":{"type":"string","title":"The media ID"},"id":{"type":"number","title":"The ID of the item"},"caption":{"type":"string","title":"The caption of the item"}},"required":["media_id","id"],"additionalProperties":false},"title":"The items in the gallery"}},"required":["items"],"additionalProperties":false,"nullable":true},"link_flair_text":{"type":"string","nullable":true},"is_created_from_ads_ui":{"type":"boolean","title":"Whether created from ads UI"},"edited":{"oneOf":[{"type":"integer","nullable":true},{"type":"boolean","nullable":true}]},"content_categories":{"type":"array","items":{"type":"string"},"nullable":true},"is_self":{"type":"boolean","title":"Whether it's a self post"},"link_flair_type":{"type":"string","title":"Type of link flair"},"wls":{"type":"number","nullable":true},"removed_by_category":{"type":"string","nullable":true},"allow_live_comments":{"type":"boolean","title":"Whether live comments are allowed"},"selftext_html":{"type":"string","nullable":true},"suggested_sort":{"type":"string","nullable":true},"url_overridden_by_dest":{"type":"string","nullable":true},"is_crosspostable":{"type":"boolean","title":"Whether the post is crosspostable"},"pinned":{"type":"boolean","title":"Whether the post is pinned"},"over_18":{"type":"boolean","title":"Whether the post is NSFW"},"media_only":{"type":"boolean","title":"Whether it's media only"},"spoiler":{"type":"boolean","title":"Whether the post is a spoiler"},"visited":{"type":"boolean","title":"Whether the post is visited"},"removed_by":{"type":"string","nullable":true},"link_flair_background_color":{"type":"string","nullable":true},"is_robot_indexable":{"type":"boolean","title":"Whether the post is robot indexable"},"discussion_type":{"type":"string","nullable":true},"num_comments":{"type":"number","title":"Number of comments"},"contest_mode":{"type":"boolean","title":"Whether contest mode is enabled"},"subreddit_subscribers":{"type":"number","title":"Number of subreddit subscribers"},"num_crossposts":{"type":"number","title":"Number of crossposts"},"is_video":{"type":"boolean","title":"Whether the post is a video"},"post_hint":{"type":"string","nullable":true},"preview":{"type":"object","properties":{"images":{"type":"array","items":{"type":"object","properties":{"source":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the source"},"width":{"type":"number","title":"The width of the source"},"height":{"type":"number","title":"The height of the source"}},"required":["url","width","height"],"additionalProperties":false},"resolutions":{"type":"array","items":{"type":"object","properties":{"url":{"type":"string","title":"The URL of the resolution"},"width":{"type":"number","title":"The width of the resolution"},"height":{"type":"number","title":"The height of the resolution"}},"required":["url","width","height"],"additionalProperties":false},"title":"The resolutions of the image"},"variants":{"title":"The variants of the image"},"id":{"type":"string","title":"The ID of the image"}},"required":["source","resolutions","variants","id"],"additionalProperties":false},"title":"The images in the preview"},"enabled":{"type":"boolean","title":"Whether the preview is enabled"}},"required":["images","enabled"],"additionalProperties":false,"nullable":true},"link_flair_template_id":{"type":"string","nullable":true}},"required":["title","name","url","id"],"additionalProperties":false},"nullable":true},"crosspost_parent":{"type":"string","nullable":true},"author_cakeday":{"type":"boolean","nullable":true}},"required":["title","name","id","url"],"additionalProperties":false}},"required":["kind","data"],"additionalProperties":false},"title":"The list of children posts"},"before":{"type":"string","pattern":"^((t2_(.*))|(t1_(.*))|(t6_(.*))|(t3_(.*))|(t5_(.*))|(t4_(.*)))","nullable":true}},"required":["after","dist","modhash","geo_filter","children","before"],"additionalProperties":false},"description":"Get the best content from Reddit.\n\nRetrieves the best content from Reddit.\n\nThis API fetches the best-rated content from Reddit.\nThe output provides a list of top-rated posts with details such as title, author, and score.","tags":[]},{"method":"patch","path":"/connector/crawler/get-web-content","name":"connector_crawler_get_web_content_getWebContent","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"Target URL to crawl"},"wait_for":{"type":"string","title":"Wait for a CSS selector to appear before returning content. (not required)"}},"required":["url"],"title":"Request to crawl a web page","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"url":{"type":"string","title":"Target URL to crawl"},"wait_for":{"type":"string","title":"Wait for a CSS selector to appear before returning content. (not required)"}},"required":["url"],"title":"Request to crawl a web page","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"object","properties":{"url":{"type":"string","format":"iri","title":"Crawled url"},"content":{"type":"string","title":"Crawled content"}},"required":["url","content"],"title":"Response from crawled web page","additionalProperties":false},"description":"Get HTML content from the URL\n\nThis API accepts a URL as input and returns the HTML content of the body of the corresponding web page.\nIt fetches only the <body> element, excluding the head and other parts of the HTML structure, providing developers\nwith a streamlined way to access the main content of a web page for further processing or analysis.\n\nThe API includes a \"Wait For Selector\" option, allowing it to wait for a specific CSS selector\nto be present in the DOM before returning the content.\nThis is useful for ensuring that dynamic elements or data are fully loaded.","tags":["Web Crawler"]},{"method":"patch","path":"/connector/google-image","name":"connector_google_image_search","parameters":[{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","title":"Search Query","description":"Set a search query to get images."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"ratio":{"type":"string","enum":["s","t","w","xw"]}},"required":["query","lang","ratio"],"title":"Google Image Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"object","properties":{"query":{"type":"string","title":"Search Query","description":"Set a search query to get images."},"lang":{"type":"string","title":"Language Setting","description":"Choose which language you want to use as your search term.\n\nYou can only pass a single BCP 47 language identifier.\n\nex) You want to setting korean language, you can pass \"ko\"."},"ratio":{"type":"string","enum":["s","t","w","xw"]}},"required":["query","lang","ratio"],"title":"Google Image Search Condition","additionalProperties":false}},"additionalProperties":false,"required":["body"]},"index":0}],"human":[]},"output":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","title":"title","description":"Image title"},"imageUrl":{"type":"string","format":"iri","title":"url","description":"Image url"},"thumbnail":{"type":"string","format":"iri","title":"thumbnail","description":"Image Thumbnail"}},"required":["title","imageUrl","thumbnail"],"title":"Google Image Search Result","additionalProperties":false}},"description":"Search Google Image.\n\nSearch Google for images based on the search terms you enter","tags":["Google Image"]}],"errors":[],"openapi":"3.0.3"}