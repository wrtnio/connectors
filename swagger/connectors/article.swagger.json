{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://studio-connector-api.wrtn.ai",
      "description": "Production Server"
    },
    {
      "url": "https://studio-connector-poc.dev.wrtn.club",
      "description": "Develop Server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "article",
    "version": "0.1.446",
    "description": "wrtn-ecosystem connectors and sdk",
    "license": {
      "name": "AGPL-3.0-only"
    }
  },
  "paths": {
    "/connector/swal/articles/{id}/sync/dev-to": {
      "post": {
        "summary": "Syncronize article version",
        "description": "upgrade or downgrade version of exported dev.to\n\nSynchronize on a snapshot basis,\nsuch as upgrading or downgrading the version of a document exported to DevTo.\nIf user specify the id of the snapshot in the names from and to among the internal properties,\nfind the exported text from `from` and start synchronizing to the version of `to`.\nIf user want to revert to the past version of the snapshot,\nuser can put the current version in 'from' and the past version in 'to'.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "DevTo Secret and snapshot information to sync",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ISync.ToDevToInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Response of Synchronization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.ISync.ToDevToOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "sync",
          "dev_to",
          "syncToDevTo"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "dev.to에 동기화해줘"
        ]
      }
    },
    "/connector/swal/articles/{id}/sync/google-docs": {
      "post": {
        "summary": "Syncronize article version",
        "description": "upgrade or downgrade version of exported google docs file\n\nSynchronize on a snapshot basis,\nsuch as upgrading or downgrading the version of a document exported to GoogleDocs.\nIf user specify the id of the snapshot in the names from and to among the internal properties,\nfind the exported text from `from` and start synchronizing to the version of `to`.\nIf user want to revert to the past version of the snapshot,\nuser can put the current version in 'from' and the past version in 'to'.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "GoogleDocs Secret and snapshot information to sync",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ISync.ToGoogleDocsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Response of Synchronization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.ISync.ToGoogleDocsOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "sync",
          "google_docs",
          "syncToGoogleDocs"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "google docs에 동기화해줘"
        ]
      }
    },
    "/connector/swal/articles/{id}/sync/notion": {
      "post": {
        "summary": "Syncronize article version",
        "description": "upgrade or downgrade version of exported notion page\n\nSynchronize on a snapshot basis,\nsuch as upgrading or downgrading the version of a document exported to Notion.\nIf user specify the id of the snapshot in the names from and to among the internal properties,\nfind the exported text from `from` and start synchronizing to the version of `to`.\nIf user want to revert to the past version of the snapshot,\nuser can put the current version in 'from' and the past version in 'to'.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "Notion Secret and snapshot information to sync",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ISync.ToNotionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Response of Synchronization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.ISync.ToNotionOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "sync",
          "notion",
          "syncToNotion"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "노션에 동기화해줘"
        ]
      }
    },
    "/connector/swal/articles/{id}/exports/dev-to": {
      "post": {
        "summary": "Exports specified article to dev_to",
        "description": "Export the text to Dev.to\n\nThe exported text is recorded by creating a\n{@link IArticleExport bbs_article_exports} object based on the snapshot.\nYou can upgrade and downgrade the version using\nthe 'POST /connector/swal/articles/:id/exports/sync/dev_to' connector in the future.\nAlso, it doesn't matter if you export the same version of the text multiple times.\n\nBecause each export generates a new text,\nyou must use the `sync` connector if you want to change the version of an already exported text.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "DevTo Secret and snapshot information to export",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.IExport.ToDevToInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Article Infomation and dev_to secretKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.IExport.ToDevToOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "exports",
          "dev_to",
          "exportsToDevTo"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "dev.to로 내보내줘"
        ]
      }
    },
    "/connector/swal/articles/{id}/exports/google-docs": {
      "post": {
        "summary": "Exports specified article to google_docs",
        "description": "Export the text to GoogleDocs\n\nThe exported text is recorded by creating a\n{@link IArticleExport bbs_article_exports} object based on the snapshot.\nYou can upgrade and downgrade the version using\nthe 'POST /connector/swal/articles/:id/exports/sync/google_docs' connector in the future.\nAlso, it doesn't matter if you export the same version of the text multiple times.\n\nBecause each export generates a new text,\nyou must use the `sync` connector if you want to change the version of an already exported text.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "GoogleDocs Secret and snapshot information to export",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.IExport.ToGoogleDocsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Article Infomation and google_docs secretKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.IExport.ToGoogleDocsOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "exports",
          "google_docs",
          "exportsToGoogleDocs"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "google docs로 내보내줘"
        ]
      }
    },
    "/connector/swal/articles/{id}/exports/notion": {
      "post": {
        "summary": "Exports specified article to notion",
        "description": "Export the text to Notion\n\nThe exported text is recorded by creating a\n{@link IArticleExport bbs_article_exports} object based on the snapshot.\nYou can upgrade and downgrade the version using\nthe 'POST /connector/swal/articles/:id/exports/sync/notion' connector in the future.\nAlso, it doesn't matter if you export the same version of the text multiple times.\n\nBecause each export generates a new text,\nyou must use the `sync` connector if you want to change the version of an already exported text.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "Notion Secret and snapshot information to export",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.IExport.ToNotionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Article Infomation and notion secretKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.IExport.ToNotionOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "exports",
          "notion",
          "exportsToNotion"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "notion으로 내보내줘"
        ]
      }
    },
    "/connector/swal/articles/{id}": {
      "patch": {
        "description": "Read an entire contents of article with its every snapshots\n\nAll text content that is not omitted is shown here, so you can also see how the text has been modified at once.\nThis connector reads an article with its every snapshots {@link IArticle.ISnapshot snapshots}\nThis detail contains the entire content created for each version of the document,\nas well as the connection information to the external services from which it was exported.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Article Infomation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrictOmitIArticleIArticle.ISnapshotpassword"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "at"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "글 내용 보여줘"
        ]
      },
      "delete": {
        "summary": "Remove an specified article",
        "description": "Erase an article\n\nPerforms soft deletion to the article.\nThis makes the article no longer available, regardless of the number of snapshots.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target article's {@link IArticle.id }, Not snapshot ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "remove"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "내 글 삭제해줘"
        ]
      },
      "put": {
        "summary": "Updates the specified article with new data",
        "description": "Update an existing article in the User Database\n\nThis function takes the updated article data as input and updates the corresponding\narticle record in the User Database. It uses the DocumentProvider to apply the changes.\nThe input must adhere to the structure defined by `IArticle.IUpdate`.\nReturns the updated document or the result of the update operation.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/articles",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "- The new data to update the article. It must match the `IArticle.IUpdate` type.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The result of the update operation from the DocumentProvider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "update"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "내 글 수정해줘"
        ]
      }
    },
    "/connector/swal/articles": {
      "patch": {
        "summary": "List up all summarized articles",
        "description": "List up all summarized articles with pagination and searching options\n\nUsers can only view their own writings.\nAs this retrieves text from the connector server's database, confirm the service name if unspecified.\nUse this connector for requests mentioning Swal, Wrtn Technologies, Wrtn, user own DB, etc.\nDisplays paginated articles with abbreviated content (up to 100 characters).\nTo view full content, export history (e.g., Notion), or detailed snapshots, use the detailed lookup connector: PATCH connector/swal/articles/:id.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Request info of pagination and searching options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Paginated summarized articles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIArticle.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "index"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "내 글 조회해줘"
        ]
      },
      "post": {
        "description": "Write Article to User Database\n\nPosts use a snapshot-based structure for rollback anytime.\nCreating a post automatically generates the first snapshot, and the latest snapshot reflects the current state.\nEdits and exports track versions through snapshots, allowing synchronization via foreign keys.\nThis system handles post-like documents (e.g., Google Docs, Notion, Reddit) efficiently.\nMarkdown is the standard format, with changes identified using a diff algorithm.\nCompare versions, track edits, and synchronize updates across services.\nAll data is stored exclusively in the Wrtn Technologies database, independent of external APIs.\nThis setup ensures efficient document management with robust version control.\nEditing is managed by a separate connector. Use it for updates.\nFor writing without service names, confirm with the user.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Article Information to Create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrictOmitIArticleIArticle.ISnapshotpassword"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "articles",
          "write"
        ],
        "x-samchon-controller": "ArticleController",
        "x-wrtn-function-select-benchmarks": [
          "내 개인 DB에 글 좀 써줘"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "IArticle.ISync.ToDevToOutput": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "title": "response",
            "description": "Indicates whether synchronization is successful or not"
          },
          "article": {
            "$ref": "#/components/schemas/StrictOmitIArticleIArticle.ISnapshotpassword",
            "title": "article information"
          }
        },
        "required": [
          "isSuccess",
          "article"
        ]
      },
      "StrictOmitIArticleIArticle.ISnapshotpassword": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "The most recent snapshot made is the higher version,\nand in fact, this time value can serve as the version."
          },
          "external_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "External User ID"
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "It is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "Deletion time of article"
          }
        },
        "required": [
          "id",
          "created_at",
          "external_user_id",
          "snapshots",
          "deleted_at"
        ]
      },
      "IArticle.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "In other words, creation time or update time or article"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "List of attachment files"
          },
          "bbs_article_exports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticleExport"
            },
            "title": "History of this snapshot being exported",
            "description": "If it has been exported,\nthe location of the export will be recorded in the properties."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "format": {
            "const": "md",
            "title": "format",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          }
        },
        "required": [
          "id",
          "created_at",
          "files",
          "bbs_article_exports",
          "title",
          "format",
          "body"
        ]
      },
      "IAttachmentFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "date time for creation of this file"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "File name",
            "description": "File name, except extension.\n\nPossible to make empty string like `.gitignore` case."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "File extension",
            "description": "Extension.\n\nPossible to omit like `README` case.\nExtensions must exclude dot characters."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "File url",
            "description": "URL path of the real file.\n\nIn addition to the case of attaching a file,\nit is recommended to attach the URL address of the file when linking within the markdown document."
          }
        },
        "required": [
          "id",
          "created_at",
          "name",
          "extension",
          "url"
        ],
        "title": "Attachment File"
      },
      "IArticleExport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "bbs_article_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID"
          },
          "provider": {
            "type": "string",
            "title": "provider name",
            "description": "It means the name of the service from which the article was exported,\nand if the service name is motion,\nit means that the same article is posted in the corresponding url of the provider service."
          },
          "uid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Unique Document ID in external service"
          },
          "url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "iri"
              }
            ],
            "title": "URL",
            "description": "This is a redirect link that allows you to locate the exported document,\nwhich is stored at export time."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of {@link IArticleExport}"
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "Deletion time ot {@link IArticleExport}"
          }
        },
        "required": [
          "id",
          "bbs_article_snapshot_id",
          "provider",
          "uid",
          "url",
          "created_at",
          "deleted_at"
        ]
      },
      "IArticle.ISync.ToDevToInput": {
        "type": "object",
        "properties": {
          "dev_to": {
            "type": "object",
            "properties": {
              "secretKey": {
                "type": "string",
                "x-wrtn-secret-key": "dev_to",
                "x-wrtn-secret-scopes": [],
                "title": "Dev.to API Key for synchronization"
              }
            },
            "required": [
              "secretKey"
            ],
            "title": "Dev.to API Key for synchronization"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "ID of the snapshot to be previously synchronized",
                "description": "The user synchronizes the text associated with that snapshot.\n\nFor example, when you have v1 and v2,\nif you pass v1 by ID,\nyou replace the exported document in snapshot v1 with the exported document\nin v2 and update the properties,\nincluding the title and content of the exported document.\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots."
              },
              "to": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "The ID of the snapshot that will be after synchronization"
              },
              "article_snapshot_exports": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1,
                    "title": "IDs of IArticleExport",
                    "description": "IDs of {@link IArticleExport bbs_article_exports}\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots.\n\nIf it is to be specified, it must be an array of at least one size."
                  }
                },
                "required": [],
                "title": "Exported Document's information"
              }
            },
            "required": [
              "from",
              "to"
            ],
            "title": "snapshot information for synchronization"
          }
        },
        "required": [
          "dev_to",
          "snapshot"
        ]
      },
      "IArticle.ISync.ToGoogleDocsOutput": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "title": "response",
            "description": "Indicates whether synchronization is successful or not"
          },
          "article": {
            "$ref": "#/components/schemas/StrictOmitIArticleIArticle.ISnapshotpassword",
            "title": "article information"
          }
        },
        "required": [
          "isSuccess",
          "article"
        ]
      },
      "IArticle.ISync.ToGoogleDocsInput": {
        "type": "object",
        "properties": {
          "google_docs": {
            "type": "object",
            "properties": {
              "secretKey": {
                "type": "string",
                "x-wrtn-secret-key": "google",
                "x-wrtn-secret-scopes": [
                  "https://www.googleapis.com/auth/drive.file"
                ],
                "title": "Google Docs Secret Key for synchronization"
              }
            },
            "required": [
              "secretKey"
            ],
            "title": "Google Docs SecretKey for synchronization"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "ID of the snapshot to be previously synchronized",
                "description": "The user synchronizes the text associated with that snapshot.\n\nFor example, when you have v1 and v2,\nif you pass v1 by ID,\nyou replace the exported document in snapshot v1 with the exported document\nin v2 and update the properties,\nincluding the title and content of the exported document.\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots."
              },
              "to": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "The ID of the snapshot that will be after synchronization"
              },
              "article_snapshot_exports": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1,
                    "title": "IDs of IArticleExport",
                    "description": "IDs of {@link IArticleExport bbs_article_exports}\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots.\n\nIf it is to be specified, it must be an array of at least one size."
                  }
                },
                "required": [],
                "title": "Exported Document's information"
              }
            },
            "required": [
              "from",
              "to"
            ],
            "title": "snapshot information for synchronization"
          }
        },
        "required": [
          "google_docs",
          "snapshot"
        ]
      },
      "IArticle.ISync.ToNotionOutput": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "title": "response",
            "description": "Indicates whether synchronization is successful or not"
          },
          "article": {
            "$ref": "#/components/schemas/StrictOmitIArticleIArticle.ISnapshotpassword",
            "title": "article information"
          }
        },
        "required": [
          "isSuccess",
          "article"
        ]
      },
      "IArticle.ISync.ToNotionInput": {
        "type": "object",
        "properties": {
          "notion": {
            "type": "object",
            "properties": {
              "secretKey": {
                "type": "string",
                "x-wrtn-secret-key": "notion",
                "title": "Notion Secret Key for synchronization"
              }
            },
            "required": [
              "secretKey"
            ],
            "title": "Notion SecretKey for synchronization"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "ID of the snapshot to be previously synchronized",
                "description": "The user synchronizes the text associated with that snapshot.\n\nFor example, when you have v1 and v2,\nif you pass v1 by ID,\nyou replace the exported document in snapshot v1 with the exported document\nin v2 and update the properties,\nincluding the title and content of the exported document.\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots."
              },
              "to": {
                "type": "string",
                "format": "uuid",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "The ID of the snapshot that will be after synchronization"
              },
              "article_snapshot_exports": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1,
                    "title": "IDs of IArticleExport",
                    "description": "IDs of {@link IArticleExport bbs_article_exports}\n\nIf you want to synchronize the notion documents linked to the snapshot at once,\nplease only forward the snapshot's ID (=`from` property).\nIf you want to synchronize only some of the documents exported from that snapshot, pass only the ID of bbs_article_exports.\nbbs_article_exports is the point of connection between snapshots and documents exported from those snapshots.\n\nIf it is to be specified, it must be an array of at least one size."
                  }
                },
                "required": [],
                "title": "Exported Document's information"
              }
            },
            "required": [
              "from",
              "to"
            ],
            "title": "snapshot information for synchronization"
          }
        },
        "required": [
          "notion",
          "snapshot"
        ]
      },
      "IArticle.IExport.ToDevToOutput": {
        "type": "object",
        "properties": {
          "dev_to": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "Created dev.to Article ID"
              },
              "title": {
                "type": "string",
                "title": "Title of Created dev.to Article"
              },
              "link": {
                "type": "string",
                "title": "File URL"
              }
            },
            "required": [
              "id",
              "title",
              "link"
            ],
            "title": "About the google doc that was successfully exported"
          },
          "article_snapshot_exports": {
            "$ref": "#/components/schemas/StrictOmitIArticleExportdeleted_at",
            "title": "Exporting infomation"
          }
        },
        "required": [
          "dev_to",
          "article_snapshot_exports"
        ]
      },
      "StrictOmitIArticleExportdeleted_at": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "title": "provider name",
            "description": "It means the name of the service from which the article was exported,\nand if the service name is motion,\nit means that the same article is posted in the corresponding url of the provider service."
          },
          "url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "iri"
              }
            ],
            "title": "URL",
            "description": "This is a redirect link that allows you to locate the exported document,\nwhich is stored at export time."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of {@link IArticleExport}"
          },
          "bbs_article_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID"
          },
          "uid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Unique Document ID in external service"
          }
        },
        "required": [
          "provider",
          "url",
          "id",
          "created_at",
          "bbs_article_snapshot_id",
          "uid"
        ]
      },
      "IArticle.IExport.ToDevToInput": {
        "type": "object",
        "properties": {
          "dev_to": {
            "$ref": "#/components/schemas/StrictOmitIDevTo.ICreateInputarticle",
            "title": "dev.to Secret Key and information to create file"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "Snapshot ID of the article you want to export to another service"
              }
            },
            "required": [
              "id"
            ],
            "title": "snapshot information to export"
          }
        },
        "required": [
          "dev_to",
          "snapshot"
        ],
        "title": "Conditions and secret keys for exporting to dev.to"
      },
      "StrictOmitIDevTo.ICreateInputarticle": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "dev_to",
            "x-wrtn-secret-scopes": [],
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IArticle.IExport.ToGoogleDocsOutput": {
        "type": "object",
        "properties": {
          "google_docs": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "Created Google Docs File ID"
              },
              "title": {
                "type": "string",
                "title": "Title of Created Google Docs File"
              },
              "link": {
                "type": "string",
                "title": "File URL"
              }
            },
            "required": [
              "id",
              "title",
              "link"
            ],
            "title": "About the google doc that was successfully exported"
          },
          "article_snapshot_exports": {
            "$ref": "#/components/schemas/StrictOmitIArticleExportdeleted_at",
            "title": "Exporting infomation"
          }
        },
        "required": [
          "google_docs",
          "article_snapshot_exports"
        ]
      },
      "IArticle.IExport.ToGoogleDocsInput": {
        "type": "object",
        "properties": {
          "google_docs": {
            "$ref": "#/components/schemas/StrictOmitIGoogleDocs.IRequestnamemarkdown",
            "title": "Google Docs Secret Key and information to create file"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "Snapshot ID of the article you want to export to another service"
              }
            },
            "required": [
              "id"
            ],
            "title": "snapshot information to export"
          }
        },
        "required": [
          "google_docs",
          "snapshot"
        ],
        "title": "Conditions and secret keys for exporting to Google Docs"
      },
      "StrictOmitIGoogleDocs.IRequestnamemarkdown": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "google",
            "x-wrtn-secret-scopes": [
              "https://www.googleapis.com/auth/drive.file"
            ],
            "title": "Select authentication information",
            "description": "secret key."
          },
          "folderId": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/google-drive/get/folders",
              "jmesPath": "data[].{value:id, label:name}"
            },
            "title": "Google Drive Folder ID",
            "description": "Folder id that will contain the file to be created in the drive"
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IArticle.IExport.ToNotionOutput": {
        "type": "object",
        "properties": {
          "notion": {
            "$ref": "#/components/schemas/INotion.ICreatePageOutput",
            "title": "About the notion page that was successfully exported"
          },
          "article_snapshot_exports": {
            "$ref": "#/components/schemas/StrictOmitIArticleExportdeleted_at",
            "title": "Exporting infomation"
          }
        },
        "required": [
          "notion",
          "article_snapshot_exports"
        ],
        "title": "Conditions and secret keys for exporting to Notion"
      },
      "INotion.ICreatePageOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "page id",
            "description": "Unique id of the generated page"
          },
          "title": {
            "type": "string",
            "title": "tilte\n\nTitle of the document you just created"
          },
          "link": {
            "type": "string",
            "format": "iri",
            "title": "page link"
          }
        },
        "required": [
          "id",
          "title",
          "link"
        ],
        "title": "Page creation result"
      },
      "IArticle.IExport.ToNotionInput": {
        "type": "object",
        "properties": {
          "notion": {
            "type": "object",
            "properties": {
              "secretKey": {
                "type": "string",
                "x-wrtn-secret-key": "notion",
                "title": "Notion Secret Key for exporting"
              },
              "parentPageId": {
                "oneOf": [
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/notion/get/page",
                      "jmesPath": "[].{value:pageId, label:title}"
                    },
                    "x-wrtn-placeholder": "부모 페이지를 선택하세요."
                  },
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/notion/page",
                      "jmesPath": "[].{value:id, label:id}"
                    },
                    "x-wrtn-placeholder": "부모 페이지를 선택하세요."
                  }
                ],
                "title": "Parent Page ID for exporting"
              }
            },
            "required": [
              "secretKey",
              "parentPageId"
            ],
            "title": "Notion SecretKey and Parent Page ID to export"
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/articles/:id",
                  "jmesPath": "snapshot[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "Snapshot ID of the article you want to export to another service"
              }
            },
            "required": [
              "id"
            ],
            "title": "snapshot information to export"
          }
        },
        "required": [
          "notion",
          "snapshot"
        ]
      },
      "IArticle.IUpdate": {
        "type": "object",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/IArticle.ICreate",
            "title": "props"
          }
        },
        "required": [
          "props"
        ],
        "title": "Article to update"
      },
      "IArticle.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "const": "md",
            "title": "format",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "body"
        ],
        "title": "Article to write"
      },
      "IAttachmentFile.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "File name",
            "description": "File name, except extension.\n\nPossible to make empty string like `.gitignore` case."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "File extension",
            "description": "Extension.\n\nPossible to omit like `README` case.\nExtensions must exclude dot characters."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "File url",
            "description": "URL path of the real file.\n\nIn addition to the case of attaching a file,\nit is recommended to attach the URL address of the file when linking within the markdown document."
          }
        },
        "required": [
          "name",
          "extension",
          "url"
        ]
      },
      "IPageIArticle.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "description": "Page information"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticle.ISummary"
            },
            "description": "List of records"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page\n\nCollection of records with pagination indformation"
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Limitation of records per a page"
          },
          "records": {
            "type": "integer",
            "description": "Count of total records in database"
          },
          "pages": {
            "type": "integer",
            "description": "Number of total pages\n\nEqual to {@link records} / {@link limit} with ceiling."
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "Page information"
      },
      "IArticle.ISummary": {
        "type": "object",
        "properties": {
          "snapshot": {
            "$ref": "#/components/schemas/StrictOmitISnapshotbodybodystringMaxLength100",
            "title": "Last Snapshot"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "The most recent snapshot made is the higher version,\nand in fact, this time value can serve as the version."
          }
        },
        "required": [
          "snapshot",
          "id",
          "created_at"
        ]
      },
      "StrictOmitISnapshotbodybodystringMaxLength100": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "bbs_article_exports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticleExport"
            },
            "title": "History of this snapshot being exported",
            "description": "If it has been exported,\nthe location of the export will be recorded in the properties."
          },
          "format": {
            "const": "md",
            "title": "format",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "In other words, creation time or update time or article"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "List of attachment files"
          },
          "body": {
            "type": "string",
            "maxLength": 100,
            "title": "Summarized Body",
            "description": "Summarized Body Content\n\nThis is the content of the text that has been omitted so that only 100 characters appear.\nIf you want to see the whole thing, use the detailed lookup connector."
          }
        },
        "required": [
          "title",
          "bbs_article_exports",
          "format",
          "id",
          "created_at",
          "files",
          "body"
        ]
      },
      "IArticle.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IArticle.IRequest.ISearch",
            "title": "search"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "-snapshot.created_at"
                },
                {
                  "const": "-snapshot.title"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+snapshot.created_at"
                },
                {
                  "const": "+snapshot.title"
                }
              ]
            },
            "title": "sort"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "required": [],
        "title": "Query Condition"
      },
      "IArticle.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "Article IDs",
            "description": "Article IDs, not Article Snapshot ID\n\nIt is Article's ID, Not Article Snapshot ID and {@link IArticleExport bbs_article_exports} ID."
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "format": {
                "const": "md",
                "title": "Format of article"
              },
              "title": {
                "type": "string",
                "title": "Title of article",
                "description": "This property is not a complete match, but a feature\nthat allows user to search for a title that contains that character.\nThis property should be undefined unless the user wants to see his or her writing\nand only wants to find a title that contains a particular text.\n\nIf user want to search for something that contains a specific title,\nuser can put the keyword user want in it.\nYou must put keywords that must be included.\nIf user don't have anything to search for,\nuser can put in or not empty characters."
              }
            },
            "required": [],
            "title": "Last Snapshot"
          }
        },
        "required": [],
        "title": "Search Conditions",
        "description": "If an attribute exists,\nit returns only the result of 'AND' calculations of all the attributes.\nFor example, if the format is 'md' and 'title' is 'swal',\nit will only look up the case where it is marked down and 'swal' is included in the title."
      }
    }
  },
  "tags": [],
  "x-samchon-emended": true
}