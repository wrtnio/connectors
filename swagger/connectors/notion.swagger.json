{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://studio-connector-api.wrtn.ai",
      "description": "Production Server"
    },
    {
      "url": "https://studio-connector-poc.dev.wrtn.club",
      "description": "Develop Server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "노션 워크스페이스 관리",
    "summary": "노션 으로 작업 공간을 효율적으로 관리해요.",
    "description": "노션 에서 페이지를 만들고, 내용을 추가하고, 데이터베이스를 관리할 수 있어요. 페이지 검색, 데이터베이스 아이템 관리 등 다양한 기능을 활용할 수 있어요. 프로젝트 관리, 노트 작성, 팀 협업, 지식 베이스 구축 등 다양한 목적으로 사용할 수 있어요. 텍스트, 이미지, 표, 리스트 등 다양한 형식의 콘텐츠를 조합하여 풍부한 문서를 만들 수 있고, 팀원들과 실시간으로 공유하고 협업할 수 있어요.",
    "version": "0.1.198",
    "license": {
      "name": "AGPL-3.0-only"
    }
  },
  "paths": {
    "/connector/notion/page/markdown": {
      "post": {
        "summary": "Append block by markdown format",
        "description": "Append block by markdown format\n\nYou can add blocks to the page immediately with only the markdown grammar.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.IAppendPageByMarkdownInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/file": {
      "post": {
        "summary": "Append an file type child node",
        "description": "Append an file type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `file`.\n\nUploading a file exposes it to the Notion page as an icon in the file format, but there is no Preview.\nIf you want the internal elements to be seen as soon as you enter the page, it is better to create the image, pdf format for each format, and consider embed for other formats.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeFileInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/embed": {
      "post": {
        "summary": "Append an embed type child node",
        "description": "Append an embed type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `embed`.\n\nThis is suitable when you want an internal element to be rendered immediately, such as an imprame within a page.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeEmbedInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/bookmark": {
      "post": {
        "summary": "Append an bookmark type child node",
        "description": "Append an bookmark type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `bookmark`.\n\nBookmarks are visually better and more organized because they have previews, images, and explanations than just saving url as text.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeBookmarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/image": {
      "post": {
        "summary": "Append an image type child node",
        "description": "Append an image type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `image`.\n\nimage file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeImageInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/video": {
      "post": {
        "summary": "Append an video type child node",
        "description": "Append an video type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `video`.\n\nvideo file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeVideoInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/pdf": {
      "post": {
        "summary": "Append an pdf type child node",
        "description": "Append an pdf type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `pdf`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypePdfInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/code": {
      "post": {
        "summary": "Append an code type child node",
        "description": "Append an code type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `code`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeCodeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/equation": {
      "post": {
        "summary": "Append an equation type child node",
        "description": "Append an equation type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `equation`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeEquationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/divider": {
      "post": {
        "summary": "Append an divider type child node",
        "description": "Append an divider type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `divider`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeDividerInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/breadcrumb": {
      "post": {
        "summary": "Append an breadcrumb type child node",
        "description": "Append an breadcrumb type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `breadcrumb`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeBreadcrumbInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/table_of_contents": {
      "post": {
        "summary": "Append an table_of_contents type child node",
        "description": "Append an table_of_contents type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `table_of_contents`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeTableOfContentsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/link_to_page": {
      "post": {
        "summary": "Append an link_to_page type child node",
        "description": "Append an link_to_page type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `link_to_page`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeLinkToPageInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/heading_1": {
      "post": {
        "summary": "Append an heading_1 type child node",
        "description": "Append an heading_1 type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `heading_1`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeHeading_1Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/heading_2": {
      "post": {
        "summary": "Append an heading_2 type child node",
        "description": "Append an heading_2 type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `heading_2`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeHeading_2Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/heading_3": {
      "post": {
        "summary": "Append an heading_3 type child node",
        "description": "Append an heading_3 type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `heading_3`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeHeading_3Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/paragraph": {
      "post": {
        "summary": "Append an paragraph type child node",
        "description": "Append an paragraph type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `paragraph`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeParagraphInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/bulleted_list_item": {
      "post": {
        "summary": "Append an bulleted_list_item type child node",
        "description": "Append an bulleted_list_item type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `bulleted_list_item`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeBulletedListItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/numbered_list_item": {
      "post": {
        "summary": "Append an numbered_list_item type child node",
        "description": "Append an numbered_list_item type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `numbered_list_item`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeNumberedListItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/quote": {
      "post": {
        "summary": "Append an quote type child node",
        "description": "Append an quote type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `quote`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeQuoteInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/to_do": {
      "post": {
        "summary": "Append an to_do type child node",
        "description": "Append an to_do type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `to_do`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "deprecated": true,
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeToDoInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page/toggle": {
      "post": {
        "summary": "Append an toggle type child node",
        "description": "Append an toggle type child node\n\nNotion is a very complex type, so you have to create a page in a block coding manner.\nTherefore, this connector is designed to create a page by taking only the page ID and one block of the corresponding block and continuously adding it to the bottom.\nThe type of block you can put in here is `toggle`.\n\nCalling this connector requires the correct page ID, so it should only be called if you have previously created a page to obtain that ID, viewed the page, or obtained a link or page ID from the user in advance.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateChildContentTypeToggleInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/page": {
      "post": {
        "summary": "페이지 생성",
        "description": "노션 페이지를 생성합니다.\n\nSince a parent ID is required, when a user gives you a link to the page,\nyou should take out the ID from it and use it, or first look up the list of pages accessible to the user.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "페이지 생성에 필요한 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreatePageInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 페이지 고유 id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.ICreatePageOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/get/page": {
      "post": {
        "summary": "페이지 목록 조회",
        "description": "노션 워크스페이스에 존재하는 모든 페이지 목록을 조회합니다.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ISecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "페이지 정보들",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/INotion.IReadPageOutput"
                  }
                }
              }
            }
          }
        },
        "x-wrtn-standalone": true,
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/get/users": {
      "post": {
        "summary": "유저 목록 조회",
        "description": "워크스페이스에 있는 유저 목록을 조회합니다.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ISecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "유저 정보들",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/INotion.IUserOutput"
                  }
                }
              }
            }
          }
        },
        "x-wrtn-standalone": true,
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/get/database-info": {
      "post": {
        "summary": "데이터베이스 목록 조회",
        "description": "데이터베이스에 아이템을 생성하기 위해 데이터베이스 목록을 조회합니다.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ISecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "데이터베이스 정보 목록",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/INotion.IDatabaseInfo"
                  }
                }
              }
            }
          }
        },
        "x-wrtn-standalone": true,
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/get/database-info/{databaseId}": {
      "post": {
        "summary": "데이터베이스 정보 조회",
        "description": "데이터베이스에 아이템을 생성하기 위한 데이터베이스 정보를 조회합니다.",
        "tags": [],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/notion/get/database-info",
                "jmesPath": "[].{value:id, label:title || ''}"
              }
            },
            "required": true,
            "description": " 데이터베이스 고유 id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ISecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "데이터베이스 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.IDatabaseInfo"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/database-item/{databaseId}": {
      "post": {
        "summary": "데이터베이스 아이템 생성",
        "description": "노션 테이블 데이터베이스에 아이템을 생성합니다.",
        "tags": [],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/notion/get/database-info",
                "jmesPath": "[].{value:id, label:title || ''}"
              }
            },
            "required": true,
            "description": " 아이템을 생성할 데이터베이스 고유 id"
          }
        ],
        "requestBody": {
          "description": "데이터베이스 아이템 생성에 필요한 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreateDatabaseItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 데이터베이스 아이템 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.IDatabaseItemOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      },
      "patch": {
        "summary": "데이터베이스 아이템 수정",
        "description": "데이터베이스에 있는 아이템 정보를 수정합니다.",
        "tags": [],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/notion/get/database-info",
                "jmesPath": "[].{value:id, label:title || ''}"
              }
            },
            "required": true,
            "description": " 수정할 데이터베이스 고유 id"
          }
        ],
        "requestBody": {
          "description": "수정할 데이터베이스 아이템 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.IUpdateDatabaseItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 데이터베이스 아이템 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.IDatabaseItemOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/get-page-by-title": {
      "post": {
        "summary": "제목으로 페이지 검색",
        "description": "제목으로 페이지를 검색합니다.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "페이지 제목",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.IFindPageOrDatabaseItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "검색된 페이지 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.IFindPageByTitleOutput"
                }
              }
            }
          }
        },
        "x-wrtn-standalone": true,
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/find-item-list/{databaseId}": {
      "post": {
        "summary": "데이터베이스 아이템 목록 조회",
        "description": "테이블 데이터베이스에 존재하는 아이템 목록을 조회합니다.",
        "tags": [],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/notion/get/database-info",
                "jmesPath": "[].{value:id, label:title || ''}"
              }
            },
            "required": true,
            "description": " 데이터베이스 고유 id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ISecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "조회된 데이터베이스 아이템 목록 정보",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/INotion.IDatabaseItemOutput"
                  }
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/find-item/{databaseId}": {
      "post": {
        "summary": "데이터베이스 아이템 조회",
        "description": "테이블 데이터베이스에 존재하는 아이템을 조회합니다.",
        "tags": [],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/notion/get/database-info",
                "jmesPath": "[].{value:id, label:title || ''}"
              }
            },
            "required": true,
            "description": " 데이터베이스 고유 id"
          }
        ],
        "requestBody": {
          "description": "데이터베이스 아이템 조회에 필요한 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.IFindDatabaseItemInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "조회된 데이터베이스 아이템 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.IDatabaseItemOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    },
    "/connector/notion/markdown": {
      "post": {
        "summary": "Create page by markdown format",
        "description": "Create page by markdown format\n\nReceive the markdown text and immediately create it as a notation page.\nYou can create pages more effectively than other connectors, so you can prioritize this.\nIf there are unique blocks of the note that cannot be created with the grammar of the markdown, it must be associated with other block generation connectors.\n\nSince users may not know the markdown grammar, it is more desirable to use the markdown grammar instead of guiding them.\nMarkdown supports text and heading 1, 2, 3, and various grammar such as table or bull list, number list, image attachment, boldface, italics, etc.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INotion.ICreatePageByMarkdownInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/INotion.ICreatePageOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Notion_full.svg"
      }
    }
  },
  "components": {
    "schemas": {
      "INotion.IAppendPageByMarkdownInput": {
        "type": "object",
        "properties": {
          "markdown": {
            "type": "string",
            "title": "markdown"
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "markdown",
          "pageId",
          "secretKey"
        ]
      },
      "INotion.ICreateChildContentTypeFileInput": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "title": "url\n\nYou can enter the path of the file you want to upload."
                  }
                },
                "required": [
                  "url"
                ],
                "title": "external"
              },
              "name": {
                "type": "string",
                "title": "filename"
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption for this file"
              }
            },
            "required": [
              "external"
            ],
            "title": "file"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "file",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeEmbedInput": {
        "type": "object",
        "properties": {
          "embed": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "title": "url\n\nYou can enter the path of the file you want to embed."
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption of this embed"
              }
            },
            "required": [
              "url"
            ],
            "title": "embed"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "embed",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeBookmarkInput": {
        "type": "object",
        "properties": {
          "bookmark": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "title": "url\n\nYou can enter the path of the file you want to bookmark."
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption of this bookmark"
              }
            },
            "required": [
              "url"
            ],
            "title": "bookmark"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "bookmark",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeImageInput": {
        "type": "object",
        "properties": {
          "image": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "pattern": ".*\\.(bmp|gif|heic|jpe?g|png|svg|tiff?)(\\?.*)?",
                    "title": "url\n\nimage file's extension is one of: 'bmp', 'gif', 'heic', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff'."
                  }
                },
                "required": [
                  "url"
                ],
                "title": "external"
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption of this image"
              }
            },
            "required": [
              "external"
            ],
            "title": "image"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "image",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeVideoInput": {
        "type": "object",
        "properties": {
          "video": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "title": "url\n\nvideo file must be one of: 'amv' ,'asf' ,'avi' ,'f4v' ,'flv' ,'gifv' ,'mkv' ,'mov' ,'mpg' ,'mpeg' ,'mpv' ,'mp4' ,'m4v' ,'qt' ,'wmv'\nOR\nYouTube video links that include embed or watch.\nE.g. https://www.youtube.com/watch?v=[id], https://www.youtube.com/embed/[id]"
                  }
                },
                "required": [
                  "url"
                ]
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption of this embed"
              }
            },
            "required": [
              "external"
            ]
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "video",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypePdfInput": {
        "type": "object",
        "properties": {
          "pdf": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "pattern": ".*\\.(pdf)(\\?.*)?",
                    "title": "url"
                  }
                },
                "required": [
                  "url"
                ],
                "title": "external"
              },
              "caption": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "minItems": 1,
                "maxItems": 1,
                "title": "caption of this pdf"
              }
            },
            "required": [
              "external"
            ],
            "title": "pdf"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "pdf",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeCodeInput": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object",
            "properties": {
              "language": {
                "oneOf": [
                  {
                    "const": "c"
                  },
                  {
                    "const": "json"
                  },
                  {
                    "const": "r"
                  },
                  {
                    "const": "html"
                  },
                  {
                    "const": "markdown"
                  },
                  {
                    "const": "abap"
                  },
                  {
                    "const": "agda"
                  },
                  {
                    "const": "arduino"
                  },
                  {
                    "const": "assembly"
                  },
                  {
                    "const": "bash"
                  },
                  {
                    "const": "basic"
                  },
                  {
                    "const": "bnf"
                  },
                  {
                    "const": "c#"
                  },
                  {
                    "const": "c++"
                  },
                  {
                    "const": "clojure"
                  },
                  {
                    "const": "coffeescript"
                  },
                  {
                    "const": "coq"
                  },
                  {
                    "const": "css"
                  },
                  {
                    "const": "dart"
                  },
                  {
                    "const": "dhall"
                  },
                  {
                    "const": "diff"
                  },
                  {
                    "const": "docker"
                  },
                  {
                    "const": "ebnf"
                  },
                  {
                    "const": "elixir"
                  },
                  {
                    "const": "elm"
                  },
                  {
                    "const": "erlang"
                  },
                  {
                    "const": "f#"
                  },
                  {
                    "const": "flow"
                  },
                  {
                    "const": "fortran"
                  },
                  {
                    "const": "gherkin"
                  },
                  {
                    "const": "glsl"
                  },
                  {
                    "const": "go"
                  },
                  {
                    "const": "graphql"
                  },
                  {
                    "const": "groovy"
                  },
                  {
                    "const": "haskell"
                  },
                  {
                    "const": "idris"
                  },
                  {
                    "const": "java"
                  },
                  {
                    "const": "javascript"
                  },
                  {
                    "const": "julia"
                  },
                  {
                    "const": "kotlin"
                  },
                  {
                    "const": "latex"
                  },
                  {
                    "const": "less"
                  },
                  {
                    "const": "lisp"
                  },
                  {
                    "const": "livescript"
                  },
                  {
                    "const": "llvm ir"
                  },
                  {
                    "const": "lua"
                  },
                  {
                    "const": "makefile"
                  },
                  {
                    "const": "markup"
                  },
                  {
                    "const": "matlab"
                  },
                  {
                    "const": "mathematica"
                  },
                  {
                    "const": "mermaid"
                  },
                  {
                    "const": "nix"
                  },
                  {
                    "const": "notion formula"
                  },
                  {
                    "const": "objective-c"
                  },
                  {
                    "const": "ocaml"
                  },
                  {
                    "const": "pascal"
                  },
                  {
                    "const": "perl"
                  },
                  {
                    "const": "php"
                  },
                  {
                    "const": "plain text"
                  },
                  {
                    "const": "powershell"
                  },
                  {
                    "const": "prolog"
                  },
                  {
                    "const": "protobuf"
                  },
                  {
                    "const": "purescript"
                  },
                  {
                    "const": "python"
                  },
                  {
                    "const": "racket"
                  },
                  {
                    "const": "reason"
                  },
                  {
                    "const": "ruby"
                  },
                  {
                    "const": "rust"
                  },
                  {
                    "const": "sass"
                  },
                  {
                    "const": "scala"
                  },
                  {
                    "const": "scheme"
                  },
                  {
                    "const": "scss"
                  },
                  {
                    "const": "shell"
                  },
                  {
                    "const": "solidity"
                  },
                  {
                    "const": "sql"
                  },
                  {
                    "const": "swift"
                  },
                  {
                    "const": "toml"
                  },
                  {
                    "const": "typescript"
                  },
                  {
                    "const": "vb.net"
                  },
                  {
                    "const": "verilog"
                  },
                  {
                    "const": "vhdl"
                  },
                  {
                    "const": "visual basic"
                  },
                  {
                    "const": "webassembly"
                  },
                  {
                    "const": "xml"
                  },
                  {
                    "const": "yaml"
                  },
                  {
                    "const": "java/c/c++/c#"
                  }
                ],
                "title": "programming language name"
              },
              "rich_text": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "maxItems": 1,
                "title": "rich text for this codebox"
              }
            },
            "required": [
              "language",
              "rich_text"
            ]
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "code",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeEquationInput": {
        "type": "object",
        "properties": {
          "equation": {
            "type": "object",
            "properties": {
              "expression": {
                "const": "y = 2x",
                "title": "expression\n\nan equation in mathematics"
              }
            },
            "required": [
              "expression"
            ],
            "title": "equation"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "equation",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeDividerInput": {
        "type": "object",
        "properties": {
          "divider": {
            "$ref": "#/components/schemas/Recordstringnever",
            "title": "divider"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "divider",
          "secretKey",
          "pageId"
        ]
      },
      "Recordstringnever": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T"
      },
      "INotion.ICreateChildContentTypeBreadcrumbInput": {
        "type": "object",
        "properties": {
          "breadcrumb": {
            "$ref": "#/components/schemas/Recordstringnever",
            "title": "breadcrumb\n\nYou only need to match the key name correctly, so you just need to pass on an empty object."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "breadcrumb",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeTableOfContentsInput": {
        "type": "object",
        "properties": {
          "table_of_contents": {
            "type": "object",
            "properties": {
              "color": {
                "oneOf": [
                  {
                    "const": "default"
                  },
                  {
                    "const": "gray"
                  },
                  {
                    "const": "brown"
                  },
                  {
                    "const": "orange"
                  },
                  {
                    "const": "yellow"
                  },
                  {
                    "const": "green"
                  },
                  {
                    "const": "blue"
                  },
                  {
                    "const": "purple"
                  },
                  {
                    "const": "pink"
                  },
                  {
                    "const": "red"
                  },
                  {
                    "const": "gray_background"
                  },
                  {
                    "const": "brown_background"
                  },
                  {
                    "const": "orange_background"
                  },
                  {
                    "const": "yellow_background"
                  },
                  {
                    "const": "green_background"
                  },
                  {
                    "const": "blue_background"
                  },
                  {
                    "const": "purple_background"
                  },
                  {
                    "const": "pink_background"
                  },
                  {
                    "const": "red_background"
                  }
                ],
                "title": "color\n\nIt must be one of :\n\"default\", \"gray\", \"brown\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\", \"red\", \"gray_background\", \"brown_background\", \"orange_background\", \"yellow_background\", \"green_background\", \"blue_background\", \"purple_background\", \"pink_background\", \"red_background\""
              }
            },
            "required": [
              "color"
            ],
            "title": "table_of_contents"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "table_of_contents",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeLinkToPageInput": {
        "type": "object",
        "properties": {
          "link_to_page": {
            "type": "object",
            "properties": {
              "page_id": {
                "oneOf": [
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/notion/get/page",
                      "jmesPath": "[].{value:pageId, label:title}"
                    },
                    "x-wrtn-placeholder": "부모 페이지를 선택하세요."
                  },
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/notion/page",
                      "jmesPath": "[].{value:id, label:id}"
                    },
                    "x-wrtn-placeholder": "부모 페이지를 선택하세요."
                  }
                ],
                "title": "page_id\n\nYou can look up the page by passing the page ID as a parameter at the end of the notion link.\nFor example, in the format 'https://www.notion.so/ :pageId'."
              }
            },
            "required": [
              "page_id"
            ],
            "title": "link_to_page"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "link_to_page",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeHeading_1Input": {
        "type": "object",
        "properties": {
          "heading_1": {
            "type": "object",
            "properties": {
              "rich_text": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "maxItems": 1,
                "title": "rich_text"
              }
            },
            "required": [
              "rich_text"
            ],
            "title": "heading_1"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "heading_1",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeHeading_2Input": {
        "type": "object",
        "properties": {
          "heading_2": {
            "type": "object",
            "properties": {
              "rich_text": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "maxItems": 1,
                "title": "rich_text"
              }
            },
            "required": [
              "rich_text"
            ],
            "title": "heading_2"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "heading_2",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeHeading_3Input": {
        "type": "object",
        "properties": {
          "heading_3": {
            "type": "object",
            "properties": {
              "rich_text": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "maxItems": 1,
                "title": "rich_text"
              }
            },
            "required": [
              "rich_text"
            ],
            "title": "heading_3"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          }
        },
        "required": [
          "heading_3",
          "secretKey",
          "pageId"
        ]
      },
      "INotion.ICreateChildContentTypeParagraphInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "paragraph": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecordchildren(paragraph...Record...))",
            "title": "paragraph"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "paragraph"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecordchildren(paragraph...Record...))": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paragraphrich_textMultipleTextLineRecordparagraphRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecord...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "paragraphrich_textMultipleTextLineRecordparagraphRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecord...)": {
        "type": "object",
        "properties": {
          "paragraph": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecordchildrenparagraph...)",
            "title": "paragraph"
          }
        },
        "required": [
          "paragraph"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(paragraphrich_textMultipleTextLineRecordparagraphRecordchildrenparagraph...)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paragraphrich_textMultipleTextLineRecordparagraphRecordchildrenparagraphrich_textMultipleTextLine"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "paragraphrich_textMultipleTextLineRecordparagraphRecordchildrenparagraphrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "paragraph": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildrenparagraphrich_textMultipleTextLine",
            "title": "paragraph"
          }
        },
        "required": [
          "paragraph"
        ]
      },
      "rich_textMultipleTextLineRecordchildrenparagraphrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "paragraph": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "paragraph"
                }
              },
              "required": [
                "paragraph"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreateChildContentTypeBulletedListItemInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "bulleted_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren(...Record...))",
            "title": "bulleted_list_item"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "bulleted_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren(...Record...))": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecord...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecord...)": {
        "type": "object",
        "properties": {
          "bulleted_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren...)",
            "title": "bulleted_list_item"
          }
        },
        "required": [
          "bulleted_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildren...)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildrenbulleted_list_itemrich_textMultipleTextLine"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "bulleted_list_itemrich_textMultipleTextLineRecordbulleted_list_itemRecordchildrenbulleted_list_itemrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "bulleted_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildrenbulleted_list_itemrich_textMultipleTextLine",
            "title": "bulleted_list_item"
          }
        },
        "required": [
          "bulleted_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildrenbulleted_list_itemrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bulleted_list_item": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "bulleted_list_item"
                }
              },
              "required": [
                "bulleted_list_item"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreateChildContentTypeNumberedListItemInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "numbered_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren(...Record...))",
            "title": "numbered_list_item"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "numbered_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren(...Record...))": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren(numbered_list_itemrich_textMultipleTextLineRecord...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren(numbered_list_itemrich_textMultipleTextLineRecord...)": {
        "type": "object",
        "properties": {
          "numbered_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren...)",
            "title": "numbered_list_item"
          }
        },
        "required": [
          "numbered_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildren...)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildrennumbered_list_itemrich_textMultipleTextLine"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "numbered_list_itemrich_textMultipleTextLineRecordnumbered_list_itemRecordchildrennumbered_list_itemrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "numbered_list_item": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildrennumbered_list_itemrich_textMultipleTextLine",
            "title": "numbered_list_item"
          }
        },
        "required": [
          "numbered_list_item"
        ]
      },
      "rich_textMultipleTextLineRecordchildrennumbered_list_itemrich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "numbered_list_item": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "numbered_list_item"
                }
              },
              "required": [
                "numbered_list_item"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreateChildContentTypeQuoteInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "quote": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildren(quoterich_textMultipleTextLineRecord...))",
            "title": "quote"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "quote"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildren(quoterich_textMultipleTextLineRecord...))": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quoterich_textMultipleTextLineRecordquoteRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildren...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "quoterich_textMultipleTextLineRecordquoteRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildren...)": {
        "type": "object",
        "properties": {
          "quote": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildrenquoterich_textMultipleTextLine)",
            "title": "quote"
          }
        },
        "required": [
          "quote"
        ]
      },
      "rich_textMultipleTextLineRecordchildren(quoterich_textMultipleTextLineRecordquoteRecordchildrenquoterich_textMultipleTextLine)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quoterich_textMultipleTextLineRecordquoteRecordchildrenquoterich_textMultipleTextLine"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "quoterich_textMultipleTextLineRecordquoteRecordchildrenquoterich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "quote": {
            "$ref": "#/components/schemas/rich_textMultipleTextLineRecordchildrenquoterich_textMultipleTextLine",
            "title": "quote"
          }
        },
        "required": [
          "quote"
        ]
      },
      "rich_textMultipleTextLineRecordchildrenquoterich_textMultipleTextLine": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quote": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "quote"
                }
              },
              "required": [
                "quote"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreateChildContentTypeToDoInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "to_do": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...)",
            "title": "to_do"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "to_do"
        ]
      },
      "rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "checked": {
            "type": "boolean",
            "title": "checked"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordto_doRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordto_doRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...)": {
        "type": "object",
        "properties": {
          "to_do": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...).o1",
            "title": "to_do"
          }
        },
        "required": [
          "to_do"
        ]
      },
      "rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildren(to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecord...).o1": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "checked": {
            "type": "boolean",
            "title": "checked"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordto_doRecordchildrento_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefined"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "to_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordto_doRecordchildrento_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefined": {
        "type": "object",
        "properties": {
          "to_do": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildrento_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefined",
            "title": "to_do"
          }
        },
        "required": [
          "to_do"
        ]
      },
      "rich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefinedRecordchildrento_dorich_textMultipleTextLinecheckedbooleanundefinedcolorApiColorundefined": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "checked": {
            "type": "boolean",
            "title": "checked"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "to_do": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    },
                    "checked": {
                      "type": "boolean",
                      "title": "checked"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        },
                        {
                          "const": "gray_background"
                        },
                        {
                          "const": "brown_background"
                        },
                        {
                          "const": "orange_background"
                        },
                        {
                          "const": "yellow_background"
                        },
                        {
                          "const": "green_background"
                        },
                        {
                          "const": "blue_background"
                        },
                        {
                          "const": "purple_background"
                        },
                        {
                          "const": "pink_background"
                        },
                        {
                          "const": "red_background"
                        }
                      ],
                      "title": "color"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "to_do"
                }
              },
              "required": [
                "to_do"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreateChildContentTypeToggleInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "pageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "pageId\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.\nCalling this connector requires the correct page ID,\nso it should only be called if you have previously created a page to obtain that ID, viewed the page,\nor obtained a link or page ID from the user in advance."
          },
          "toggle": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)",
            "title": "toggle"
          }
        },
        "required": [
          "secretKey",
          "pageId",
          "toggle"
        ]
      },
      "rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...)": {
        "type": "object",
        "properties": {
          "toggle": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...).o1",
            "title": "toggle"
          }
        },
        "required": [
          "toggle"
        ]
      },
      "rich_textMultipleTextLinecolorApiColorundefinedRecordchildren(togglerich_textMultipleTextLinecolorApiColorundefinedRecord...).o1": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined"
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "togglerich_textMultipleTextLinecolorApiColorundefinedRecordtoggleRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined": {
        "type": "object",
        "properties": {
          "toggle": {
            "$ref": "#/components/schemas/rich_textMultipleTextLinecolorApiColorundefinedRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined",
            "title": "toggle"
          }
        },
        "required": [
          "toggle"
        ]
      },
      "rich_textMultipleTextLinecolorApiColorundefinedRecordchildrentogglerich_textMultipleTextLinecolorApiColorundefined": {
        "type": "object",
        "properties": {
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "link": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "text"
              ]
            },
            "maxItems": 1,
            "title": "rich_text"
          },
          "color": {
            "oneOf": [
              {
                "const": "default"
              },
              {
                "const": "gray"
              },
              {
                "const": "brown"
              },
              {
                "const": "orange"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "purple"
              },
              {
                "const": "pink"
              },
              {
                "const": "red"
              },
              {
                "const": "gray_background"
              },
              {
                "const": "brown_background"
              },
              {
                "const": "orange_background"
              },
              {
                "const": "yellow_background"
              },
              {
                "const": "green_background"
              },
              {
                "const": "blue_background"
              },
              {
                "const": "purple_background"
              },
              {
                "const": "pink_background"
              },
              {
                "const": "red_background"
              }
            ],
            "title": "color"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "toggle": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ]
                      },
                      "maxItems": 1,
                      "title": "rich_text"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        },
                        {
                          "const": "gray_background"
                        },
                        {
                          "const": "brown_background"
                        },
                        {
                          "const": "orange_background"
                        },
                        {
                          "const": "yellow_background"
                        },
                        {
                          "const": "green_background"
                        },
                        {
                          "const": "blue_background"
                        },
                        {
                          "const": "purple_background"
                        },
                        {
                          "const": "pink_background"
                        },
                        {
                          "const": "red_background"
                        }
                      ],
                      "title": "color"
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "title": "toggle"
                }
              },
              "required": [
                "toggle"
              ]
            }
          }
        },
        "required": [
          "rich_text",
          "children"
        ]
      },
      "INotion.ICreatePageOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "페이지 id",
            "description": "생성된 페이지의 고유 id"
          },
          "title": {
            "type": "string",
            "title": "tilte\n\n방금 생성한 문서의 제목"
          }
        },
        "required": [
          "id",
          "title"
        ],
        "title": "페이지 생성 결과"
      },
      "INotion.ICreatePageInput": {
        "type": "object",
        "properties": {
          "parentPageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "부모 페이지",
            "description": "새로 생성할 페이지의 부모 페이지"
          },
          "title": {
            "type": "string",
            "x-wrtn-placeholder": "테스트 페이지.",
            "title": "페이지 제목",
            "description": "새로 생성할 페이지 제목"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "parentPageId",
          "title",
          "secretKey"
        ],
        "title": "페이지 생성에 필요한 조건"
      },
      "INotion.IReadPageOutput": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/notion/get/page",
              "jmesPath": "[].{value:pageId, label:title}"
            },
            "title": "id\n\nIndicates the page on which you want to add a block.\nAt the bottom of this page, a block is added to match the requested object here.",
            "description": "페이지 고유 id"
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "페이지 제목"
          }
        },
        "required": [
          "pageId",
          "title"
        ],
        "title": "페이지 목록 조회 결과"
      },
      "INotion.ISecret": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "INotion.IUserOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "유저 고유 id"
          },
          "name": {
            "type": "string",
            "title": "이름",
            "description": "유저 이름"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "유저 목록 조회 결과"
      },
      "INotion.IDatabaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "데이터베이스 고유 id"
          },
          "title": {
            "type": "string",
            "title": "제목P",
            "description": "데이터베이스 제목"
          },
          "properties": {
            "$ref": "#/components/schemas/RecordstringINotion.DatabaseProperty",
            "title": "속성",
            "description": "데이터베이스 속성 정보"
          }
        },
        "required": [
          "id",
          "title",
          "properties"
        ],
        "title": "데이터베이스 정보"
      },
      "RecordstringINotion.DatabaseProperty": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/INotion.NumberDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.FormulaDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.SelectDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.MultiSelectDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.StatusDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.RelationDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.RollupDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.TitleDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.RichTextDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.UrlDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.PeopleDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.FilesDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.EmailDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.PhoneNumberDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.DateDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.CheckboxDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.CreatedByDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.CreatedTimeDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.LastEditedByDatabaseProperty"
            },
            {
              "$ref": "#/components/schemas/INotion.LastEditedTimeDatabaseProperty"
            }
          ],
          "discriminator": {
            "propertyName": "type",
            "mapping": {
              "number": "#/components/schemas/INotion.NumberDatabaseProperty",
              "formula": "#/components/schemas/INotion.FormulaDatabaseProperty",
              "select": "#/components/schemas/INotion.SelectDatabaseProperty",
              "multi_select": "#/components/schemas/INotion.MultiSelectDatabaseProperty",
              "status": "#/components/schemas/INotion.StatusDatabaseProperty",
              "relation": "#/components/schemas/INotion.RelationDatabaseProperty",
              "rollup": "#/components/schemas/INotion.RollupDatabaseProperty",
              "title": "#/components/schemas/INotion.TitleDatabaseProperty",
              "rich_text": "#/components/schemas/INotion.RichTextDatabaseProperty",
              "url": "#/components/schemas/INotion.UrlDatabaseProperty",
              "people": "#/components/schemas/INotion.PeopleDatabaseProperty",
              "files": "#/components/schemas/INotion.FilesDatabaseProperty",
              "email": "#/components/schemas/INotion.EmailDatabaseProperty",
              "phone_number": "#/components/schemas/INotion.PhoneNumberDatabaseProperty",
              "date": "#/components/schemas/INotion.DateDatabaseProperty",
              "checkbox": "#/components/schemas/INotion.CheckboxDatabaseProperty",
              "created_by": "#/components/schemas/INotion.CreatedByDatabaseProperty",
              "created_time": "#/components/schemas/INotion.CreatedTimeDatabaseProperty",
              "last_edited_by": "#/components/schemas/INotion.LastEditedByDatabaseProperty",
              "last_edited_time": "#/components/schemas/INotion.LastEditedTimeDatabaseProperty"
            }
          }
        }
      },
      "INotion.NumberDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "number"
          },
          "number": {
            "type": "object",
            "properties": {
              "format": {
                "oneOf": [
                  {
                    "const": "number"
                  },
                  {
                    "const": "percent"
                  },
                  {
                    "const": "number_with_commas"
                  },
                  {
                    "const": "dollar"
                  },
                  {
                    "const": "canadian_dollar"
                  },
                  {
                    "const": "singapore_dollar"
                  },
                  {
                    "const": "euro"
                  },
                  {
                    "const": "pound"
                  },
                  {
                    "const": "yen"
                  },
                  {
                    "const": "ruble"
                  },
                  {
                    "const": "rupee"
                  },
                  {
                    "const": "won"
                  },
                  {
                    "const": "yuan"
                  },
                  {
                    "const": "real"
                  },
                  {
                    "const": "lira"
                  },
                  {
                    "const": "rupiah"
                  },
                  {
                    "const": "franc"
                  },
                  {
                    "const": "hong_kong_dollar"
                  },
                  {
                    "const": "new_zealand_dollar"
                  },
                  {
                    "const": "krona"
                  },
                  {
                    "const": "norwegian_krone"
                  },
                  {
                    "const": "mexican_peso"
                  },
                  {
                    "const": "rand"
                  },
                  {
                    "const": "new_taiwan_dollar"
                  },
                  {
                    "const": "danish_krone"
                  },
                  {
                    "const": "zloty"
                  },
                  {
                    "const": "baht"
                  },
                  {
                    "const": "forint"
                  },
                  {
                    "const": "koruna"
                  },
                  {
                    "const": "shekel"
                  },
                  {
                    "const": "chilean_peso"
                  },
                  {
                    "const": "philippine_peso"
                  },
                  {
                    "const": "dirham"
                  },
                  {
                    "const": "colombian_peso"
                  },
                  {
                    "const": "riyal"
                  },
                  {
                    "const": "ringgit"
                  },
                  {
                    "const": "leu"
                  },
                  {
                    "const": "argentine_peso"
                  },
                  {
                    "const": "uruguayan_peso"
                  },
                  {
                    "const": "peruvian_sol"
                  }
                ]
              }
            },
            "required": [
              "format"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "number"
        ],
        "title": "데이터베이스 숫자 속성"
      },
      "INotion.FormulaDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "formula"
          },
          "formula": {
            "type": "object",
            "properties": {
              "expression": {
                "type": "string"
              }
            },
            "required": [
              "expression"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "formula"
        ],
        "title": "데이터베이스 공식 속성"
      },
      "INotion.SelectDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "select"
          },
          "select": {
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color"
                  ]
                }
              }
            },
            "required": [
              "options"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "select"
        ],
        "title": "데이터베이스 선택 속성"
      },
      "INotion.MultiSelectDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "multi_select"
          },
          "multi_select": {
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color"
                  ]
                }
              }
            },
            "required": [
              "options"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "multi_select"
        ],
        "title": "데이터베이스 다중 선택 속성"
      },
      "INotion.StatusDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "status"
          },
          "status": {
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color"
                  ]
                }
              },
              "groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "oneOf": [
                        {
                          "const": "default"
                        },
                        {
                          "const": "gray"
                        },
                        {
                          "const": "brown"
                        },
                        {
                          "const": "orange"
                        },
                        {
                          "const": "yellow"
                        },
                        {
                          "const": "green"
                        },
                        {
                          "const": "blue"
                        },
                        {
                          "const": "purple"
                        },
                        {
                          "const": "pink"
                        },
                        {
                          "const": "red"
                        }
                      ]
                    },
                    "option_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color",
                    "option_ids"
                  ]
                }
              }
            },
            "required": [
              "options",
              "groups"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "status"
        ],
        "title": "데이터베이스 상태 속성"
      },
      "INotion.RelationDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "relation"
          },
          "relation": {
            "type": "object",
            "properties": {
              "database_id": {
                "type": "string"
              },
              "synced_property_id": {
                "type": "string"
              },
              "synced_property_name": {
                "type": "string"
              }
            },
            "required": [
              "database_id",
              "synced_property_id",
              "synced_property_name"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "relation"
        ],
        "title": "데이터베이스 관계 속성"
      },
      "INotion.RollupDatabaseProperty": {
        "type": "object",
        "properties": {
          "type": {
            "const": "rollup"
          },
          "rollup": {
            "type": "object",
            "properties": {
              "rollup_property_name": {
                "type": "string"
              },
              "relation_property_name": {
                "type": "string"
              },
              "rollup_property_id": {
                "type": "string"
              },
              "relation_property_id": {
                "type": "string"
              },
              "function": {
                "oneOf": [
                  {
                    "const": "range"
                  },
                  {
                    "const": "average"
                  },
                  {
                    "const": "unique"
                  },
                  {
                    "const": "count"
                  },
                  {
                    "const": "count_values"
                  },
                  {
                    "const": "empty"
                  },
                  {
                    "const": "not_empty"
                  },
                  {
                    "const": "show_unique"
                  },
                  {
                    "const": "percent_empty"
                  },
                  {
                    "const": "percent_not_empty"
                  },
                  {
                    "const": "sum"
                  },
                  {
                    "const": "median"
                  },
                  {
                    "const": "min"
                  },
                  {
                    "const": "max"
                  },
                  {
                    "const": "earliest_date"
                  },
                  {
                    "const": "latest_date"
                  },
                  {
                    "const": "date_range"
                  },
                  {
                    "const": "checked"
                  },
                  {
                    "const": "unchecked"
                  },
                  {
                    "const": "percent_checked"
                  },
                  {
                    "const": "percent_unchecked"
                  },
                  {
                    "const": "count_per_group"
                  },
                  {
                    "const": "percent_per_group"
                  },
                  {
                    "const": "show_original"
                  }
                ]
              }
            },
            "required": [
              "rollup_property_name",
              "relation_property_name",
              "rollup_property_id",
              "relation_property_id",
              "function"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "rollup",
          "id",
          "name"
        ],
        "title": "데이터베이스 집계 속성"
      },
      "INotion.TitleDatabaseProperty": {
        "type": "object",
        "properties": {
          "type": {
            "const": "title"
          },
          "title": {
            "$ref": "#/components/schemas/Recordstringnever"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "title",
          "id",
          "name"
        ],
        "title": "데이터베이스 제목 속성"
      },
      "INotion.RichTextDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "rich_text"
          },
          "rich_text": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "rich_text"
        ],
        "title": "데이터베이스 텍스트 속성"
      },
      "INotion.UrlDatabaseProperty": {
        "type": "object",
        "properties": {
          "type": {
            "const": "url"
          },
          "url": {
            "$ref": "#/components/schemas/Recordstringnever"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "url",
          "id",
          "name"
        ],
        "title": "데이터베이스 Url 속성"
      },
      "INotion.PeopleDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "people"
          },
          "people": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "people"
        ],
        "title": "데이터베이스 사람 속성"
      },
      "INotion.FilesDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "files"
          },
          "files": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "files"
        ],
        "title": "데이터베이스 파일 속성"
      },
      "INotion.EmailDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "email"
          },
          "email": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "email"
        ],
        "title": "데이터베이스 이메일 속성"
      },
      "INotion.PhoneNumberDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "phone_number"
          },
          "phone_number": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "phone_number"
        ],
        "title": "데이터베이스 전화번호 속성"
      },
      "INotion.DateDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "date"
          },
          "date": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "date"
        ],
        "title": "데이터베이스 날짜 속성"
      },
      "INotion.CheckboxDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "checkbox"
          },
          "checkbox": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "checkbox"
        ],
        "title": "데이터베이스 체크박스 속성"
      },
      "INotion.CreatedByDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "created_by"
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ],
        "title": "데이터베이스 작성자 속성"
      },
      "INotion.CreatedTimeDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "created_time"
          },
          "created_time": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "created_time"
        ],
        "title": "데이터베이스 작성 시간 속성"
      },
      "INotion.LastEditedByDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "last_edited_by"
          },
          "last_edited_by": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "last_edited_by"
        ],
        "title": "데이터베이스 마지막 수정자 속성"
      },
      "INotion.LastEditedTimeDatabaseProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "const": "last_edited_time"
          },
          "last_edited_time": {
            "$ref": "#/components/schemas/Recordstringnever"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "last_edited_time"
        ],
        "title": "데이터베이스 수정 시간 속성"
      },
      "INotion.IDatabaseItemOutput": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "title": "유형",
                "description": "부모 데이터베이스 아이템 객체 유형"
              },
              "database_id": {
                "type": "string",
                "title": "데이터베이스 id",
                "description": "데이터 베이스 아이템 부모 id"
              }
            },
            "required": [
              "type",
              "database_id"
            ],
            "title": "부모 데이터베이스 아이템",
            "description": "부모 데이터베이스 아이템 정보"
          },
          "properties": {
            "title": "속성",
            "description": "데이터베이스 아이템 속성"
          },
          "object": {
            "oneOf": [
              {
                "const": "user"
              },
              {
                "const": "page"
              },
              {
                "const": "list"
              },
              {
                "const": "database"
              },
              {
                "const": "block"
              },
              {
                "const": "property_item"
              },
              {
                "const": "comment"
              }
            ],
            "title": "개체 유형",
            "description": "페이지 객체의 유형"
          },
          "created_time": {
            "type": "string",
            "title": "생성 일자",
            "description": "페이지가 생성된 일자"
          },
          "last_edited_time": {
            "type": "string",
            "title": "마지막 수정 일자",
            "description": "페이지가 마지막으로 수정된 일자"
          },
          "created_by": {
            "type": "object",
            "properties": {
              "object": {
                "oneOf": [
                  {
                    "const": "user"
                  },
                  {
                    "const": "page"
                  },
                  {
                    "const": "list"
                  },
                  {
                    "const": "database"
                  },
                  {
                    "const": "block"
                  },
                  {
                    "const": "property_item"
                  },
                  {
                    "const": "comment"
                  }
                ],
                "title": "개체 유형",
                "description": "페이지를 생성한 사람 객체의 유형"
              },
              "id": {
                "type": "string",
                "title": "id",
                "description": "페이지를 생성한 사람의 고유 id"
              }
            },
            "required": [
              "object",
              "id"
            ],
            "title": "생성한 사람",
            "description": "페이지를 생성한 사람에 대한 정보"
          },
          "last_edited_by": {
            "type": "object",
            "properties": {
              "object": {
                "oneOf": [
                  {
                    "const": "user"
                  },
                  {
                    "const": "page"
                  },
                  {
                    "const": "list"
                  },
                  {
                    "const": "database"
                  },
                  {
                    "const": "block"
                  },
                  {
                    "const": "property_item"
                  },
                  {
                    "const": "comment"
                  }
                ],
                "title": "개체 유형",
                "description": "페이지를 마지막으로 수정한 사람 객체의 유형"
              },
              "id": {
                "type": "string",
                "title": "id",
                "description": "페이지를 마지막으로 수정한 사람의 고유 id"
              }
            },
            "required": [
              "object",
              "id"
            ],
            "title": "마지막으로 수정한 사람",
            "description": "페이지를 마지막으로 수정한 사람에 대한 정보"
          },
          "cover": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/INotion.IPageCover"
              }
            ],
            "title": "배경 이미지",
            "description": "페이지 배경 이미지 정보"
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/INotion.IPageIcon"
              }
            ],
            "title": "아이콘",
            "description": "페이지 아이콘 정보"
          },
          "archived": {
            "type": "boolean",
            "title": "임시 보관 여부",
            "description": "페이지 임시 보관 여부"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "url",
            "description": "페이지 url"
          },
          "public_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "공개 url",
            "description": "페이지 공개 url"
          },
          "id": {
            "type": "string",
            "title": "페이지 id",
            "description": "생성된 페이지의 고유 id"
          },
          "title": {
            "type": "string",
            "title": "tilte\n\n방금 생성한 문서의 제목"
          }
        },
        "required": [
          "parent",
          "properties",
          "object",
          "created_time",
          "last_edited_time",
          "created_by",
          "last_edited_by",
          "cover",
          "icon",
          "archived",
          "url",
          "public_url",
          "id",
          "title"
        ],
        "title": "데이터베이스 아이템 생성 결과"
      },
      "INotion.IPageCover": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "title": "유형",
            "description": "이미지 유형"
          },
          "external": {
            "$ref": "#/components/schemas/INotion.IExternalImage",
            "title": "이미지",
            "description": "이미지 정보"
          }
        },
        "required": [
          "type",
          "external"
        ],
        "title": "페이지 배경 이미지 정보"
      },
      "INotion.IExternalImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "title": "url",
            "description": "이미지 url"
          }
        },
        "required": [
          "url"
        ],
        "title": "외부 이미지 정보"
      },
      "INotion.IPageIcon": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "file"
              },
              {
                "const": "emoji"
              },
              {
                "const": "external"
              }
            ],
            "title": "유형",
            "description": "아이콘 유형"
          },
          "emoji": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "이모지 아이콘",
            "description": "아이콘 유형이 emoji 일 때의 아이콘 정보"
          },
          "external": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/INotion.IExternalImage"
              }
            ],
            "title": "아이콘",
            "description": "아이콘 유형이 icon 일 때의 아이콘 정보"
          },
          "file": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "title": "url",
                "description": "파일 url"
              },
              "expiry_time": {
                "type": "string",
                "title": "만료시간",
                "description": "이미지 파일 만료시간"
              }
            },
            "required": [
              "url",
              "expiry_time"
            ],
            "title": "아이콘 파일",
            "description": "아이콘 유형이 file 일 때의 아이콘 정보"
          }
        },
        "required": [
          "type"
        ],
        "title": "페이지 아이콘 정보"
      },
      "INotion.ICreateDatabaseItemInput": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "title": "속성 값",
            "description": "데이터베이스 속성에 추가할 값"
          },
          "content": {
            "type": "string",
            "title": "페이지에 넣을 내용",
            "description": "생성할 데이터베이스 아이템 페이지에 넣을 내용"
          },
          "contentType": {
            "oneOf": [
              {
                "const": "markdown"
              },
              {
                "const": "plainText"
              }
            ],
            "title": "페이지 내용의 유형",
            "description": "생성할 데이터베이스 아이템 페이지 내용 유형"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ],
        "title": "데이터베이스에 아이템을 추가할 때 필요한 정보",
        "additionalProperties": {}
      },
      "INotion.IUpdateDatabaseItemInput": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/notion/get/page",
              "jmesPath": "[].{value:pageId, label:title}"
            },
            "title": "페이지",
            "description": "업데이트 할 페이지"
          },
          "content": {
            "type": "string",
            "title": "내용",
            "description": "업데이트 할 데이터베이스 페이지 내용"
          },
          "value": {
            "type": "string",
            "title": "속성 값",
            "description": "업데이트 할 데이터베이스 속성 값"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "pageId",
          "secretKey"
        ],
        "title": "데이터베이스에 존재하는 아이템을 수정할 때 필요한 정보",
        "additionalProperties": {}
      },
      "INotion.IFindPageByTitleOutput": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "title": "유형",
                "description": "부모 페이지 객체 유형"
              },
              "workspace": {
                "type": "boolean",
                "title": "워크스페이스 여부",
                "description": "부모 페이지가 워크스페이스 인지 여부"
              }
            },
            "required": [
              "type",
              "workspace"
            ],
            "title": "부모 페이지",
            "description": "부모 페이지 정보"
          },
          "properties": {
            "$ref": "#/components/schemas/INotion.IFindPageProperty",
            "title": "속성",
            "description": "페이지 속성 정보"
          },
          "object": {
            "oneOf": [
              {
                "const": "user"
              },
              {
                "const": "page"
              },
              {
                "const": "list"
              },
              {
                "const": "database"
              },
              {
                "const": "block"
              },
              {
                "const": "property_item"
              },
              {
                "const": "comment"
              }
            ],
            "title": "개체 유형",
            "description": "페이지 객체의 유형"
          },
          "created_time": {
            "type": "string",
            "title": "생성 일자",
            "description": "페이지가 생성된 일자"
          },
          "last_edited_time": {
            "type": "string",
            "title": "마지막 수정 일자",
            "description": "페이지가 마지막으로 수정된 일자"
          },
          "created_by": {
            "type": "object",
            "properties": {
              "object": {
                "oneOf": [
                  {
                    "const": "user"
                  },
                  {
                    "const": "page"
                  },
                  {
                    "const": "list"
                  },
                  {
                    "const": "database"
                  },
                  {
                    "const": "block"
                  },
                  {
                    "const": "property_item"
                  },
                  {
                    "const": "comment"
                  }
                ],
                "title": "개체 유형",
                "description": "페이지를 생성한 사람 객체의 유형"
              },
              "id": {
                "type": "string",
                "title": "id",
                "description": "페이지를 생성한 사람의 고유 id"
              }
            },
            "required": [
              "object",
              "id"
            ],
            "title": "생성한 사람",
            "description": "페이지를 생성한 사람에 대한 정보"
          },
          "last_edited_by": {
            "type": "object",
            "properties": {
              "object": {
                "oneOf": [
                  {
                    "const": "user"
                  },
                  {
                    "const": "page"
                  },
                  {
                    "const": "list"
                  },
                  {
                    "const": "database"
                  },
                  {
                    "const": "block"
                  },
                  {
                    "const": "property_item"
                  },
                  {
                    "const": "comment"
                  }
                ],
                "title": "개체 유형",
                "description": "페이지를 마지막으로 수정한 사람 객체의 유형"
              },
              "id": {
                "type": "string",
                "title": "id",
                "description": "페이지를 마지막으로 수정한 사람의 고유 id"
              }
            },
            "required": [
              "object",
              "id"
            ],
            "title": "마지막으로 수정한 사람",
            "description": "페이지를 마지막으로 수정한 사람에 대한 정보"
          },
          "cover": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/INotion.IPageCover"
              }
            ],
            "title": "배경 이미지",
            "description": "페이지 배경 이미지 정보"
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/INotion.IPageIcon"
              }
            ],
            "title": "아이콘",
            "description": "페이지 아이콘 정보"
          },
          "archived": {
            "type": "boolean",
            "title": "임시 보관 여부",
            "description": "페이지 임시 보관 여부"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "url",
            "description": "페이지 url"
          },
          "public_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "공개 url",
            "description": "페이지 공개 url"
          },
          "id": {
            "type": "string",
            "title": "페이지 id",
            "description": "생성된 페이지의 고유 id"
          },
          "title": {
            "type": "string",
            "title": "tilte\n\n방금 생성한 문서의 제목"
          }
        },
        "required": [
          "parent",
          "properties",
          "object",
          "created_time",
          "last_edited_time",
          "created_by",
          "last_edited_by",
          "cover",
          "icon",
          "archived",
          "url",
          "public_url",
          "id",
          "title"
        ]
      },
      "INotion.IFindPageProperty": {
        "type": "object",
        "properties": {
          "title": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "id",
                "description": "페이지 속성 id"
              },
              "type": {
                "type": "string",
                "title": "속성 유형",
                "description": "페이지 속성 유형"
              },
              "title": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/INotion.IFindPageTitleProperty"
                },
                "title": "제목 속성",
                "description": "페이지 제목 속성 정보"
              }
            },
            "required": [
              "id",
              "type",
              "title"
            ],
            "title": "제목 속성",
            "description": "제목 속성의 정보"
          }
        },
        "required": [
          "title"
        ],
        "title": "페이지 속성 정보"
      },
      "INotion.IFindPageTitleProperty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "title": "유형",
            "description": "제목 속성 유형"
          },
          "text": {
            "$ref": "#/components/schemas/INotion.IPageTitleText",
            "title": "텍스트 정보",
            "description": "페이지 제목 텍스트 정보"
          },
          "annotations": {
            "$ref": "#/components/schemas/INotion.IPageTitleAnnotation",
            "title": "부가 정보",
            "description": "페이지 제목 부가 정보"
          },
          "plain_text": {
            "type": "string",
            "title": "원본",
            "description": "페이지 제목 원본 텍스트"
          },
          "href": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "링크",
            "description": "페이지 링크"
          }
        },
        "required": [
          "type",
          "text",
          "annotations",
          "plain_text",
          "href"
        ],
        "title": "페이지 제목 속성"
      },
      "INotion.IPageTitleText": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "title": "내용",
            "description": "제목 텍스트 내용"
          },
          "link": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "링크",
            "description": "페이지 제목 링크"
          }
        },
        "required": [
          "content",
          "link"
        ],
        "title": "페이지 제목 텍스트 정보"
      },
      "INotion.IPageTitleAnnotation": {
        "type": "object",
        "properties": {
          "bold": {
            "type": "boolean",
            "title": "볼드체 여부",
            "description": "제목 텍스트 볼드체 여부"
          },
          "italic": {
            "type": "boolean",
            "title": "이탤릭체 여부",
            "description": "제목 텍스트 이탤릭체 여부"
          },
          "strikethrough": {
            "type": "boolean",
            "title": "취소선 여부",
            "description": "제목 텍스트 취소선 여부"
          },
          "underline": {
            "type": "boolean",
            "title": "밑줄 여부",
            "description": "제목 텍스트 밑줄 여부"
          },
          "code": {
            "type": "boolean",
            "title": "코드로 감싸져 있는지 여부",
            "description": "제목 텍스트가 코드로 감싸져 있는지 여부"
          },
          "color": {
            "type": "string",
            "title": "색깔",
            "description": "제목 텍스트 색상"
          }
        },
        "required": [
          "bold",
          "italic",
          "strikethrough",
          "underline",
          "code",
          "color"
        ],
        "title": "페이지 제목 부가 정보"
      },
      "INotion.IFindPageOrDatabaseItemInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "제목",
            "description": "페이지 제목"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "title",
          "secretKey"
        ],
        "title": "페이지 검색에 필요한 정보"
      },
      "INotion.IFindDatabaseItemInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "제목",
            "description": "데이터베이스 아이템에 있는 아이템의 제목"
          },
          "number": {
            "type": "integer",
            "title": "숫자",
            "description": "데이터베이스 아이템에 있는 숫자"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "url",
            "description": "데이터베이스 아이템에 있는 url"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "이메일 주소",
            "description": "데이터베이스 아이템에 있는 이메일 주소"
          },
          "rich_text": {
            "type": "string",
            "title": "텍스트",
            "description": "데이터베이스 아이템에 있는 텍스트"
          },
          "phone_number": {
            "type": "string",
            "title": "전화번호",
            "description": "데이터베이스 아이템에 있는 전화번호"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ],
        "title": "데이터베이스에 있는 아이템을 찾을 때 필요한 정보",
        "additionalProperties": {}
      },
      "INotion.ICreatePageByMarkdownInput": {
        "type": "object",
        "properties": {
          "markdown": {
            "type": "string",
            "title": "markdown"
          },
          "parentPageId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/get/page",
                  "jmesPath": "[].{value:pageId, label:title}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/notion/page",
                  "jmesPath": "[].{value:id, label:id}"
                },
                "x-wrtn-placeholder": "부모 페이지를 선택하세요."
              }
            ],
            "title": "부모 페이지",
            "description": "새로 생성할 페이지의 부모 페이지"
          },
          "title": {
            "type": "string",
            "x-wrtn-placeholder": "테스트 페이지.",
            "title": "페이지 제목",
            "description": "새로 생성할 페이지 제목"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "notion",
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "markdown",
          "parentPageId",
          "title",
          "secretKey"
        ]
      }
    }
  },
  "tags": [],
  "x-samchon-emended": true
}