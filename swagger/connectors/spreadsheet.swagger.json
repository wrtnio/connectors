{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://studio-connector-api.wrtn.ai",
      "description": "Production Server"
    },
    {
      "url": "https://studio-connector-poc.dev.wrtn.club",
      "description": "Develop Server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "spreadsheet",
    "version": "0.1.446",
    "description": "wrtn-ecosystem connectors and sdk",
    "license": {
      "name": "AGPL-3.0-only"
    }
  },
  "paths": {
    "/connector/swal/spreadsheets/{id}/exports/google-sheets": {
      "post": {
        "summary": "Exports specified spreadsheet to GoogleSheets",
        "description": "Export the spreadsheet to GoogleSheets\n\nThe exported spreadsheet is recorded by creating a\n{@link ISpreadsheetExport bbs_spreadsheet_exports} object based on the snapshot.\nYou can upgrade and downgrade the version using\nthe 'POST /connector/swal/spreadsheets/:id/exports/sync/google-sheets' connector in the future.\nAlso, it doesn't matter if you export the same version of the spreadsheet multiple times.\n\nBecause each export generates a new file,\nyou must use the `sync` connector if you want to change the version of an already exported file.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/spreadsheets",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target spreadsheet's {@link ISpreadsheet.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "GoogleSheets export configuration and snapshot information to export",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpreadsheet.IExport.ToGoogleSheetsToInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Spreadsheet Information and GoogleSheets export details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpreadsheet.IExport.ToGoogleSheetsToOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "exports",
          "google_sheets",
          "exportsToGoogleSheets"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      }
    },
    "/connector/swal/spreadsheets/{id}/exports/excel": {
      "post": {
        "summary": "Exports specified spreadsheet to Excel",
        "description": "Export the spreadsheet to Excel\n\nThe exported spreadsheet is recorded by creating a\n{@link ISpreadsheetExport bbs_spreadsheet_exports} object based on the snapshot.\nYou can upgrade and downgrade the version using\nthe 'POST /connector/swal/spreadsheets/:id/exports/sync/excel' connector in the future.\nAlso, it doesn't matter if you export the same version of the spreadsheet multiple times.\n\nBecause each export generates a new file,\nyou must use the `sync` connector if you want to change the version of an already exported file.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-wrtn-prerequisite": {
                "method": "patch",
                "path": "/connector/swal/spreadsheets",
                "jmesPath": "data[].{ value: id, label: snapshot.title }"
              }
            },
            "required": true,
            "description": " Target spreadsheet's {@link ISpreadsheet.id }, Not snapshot ID"
          }
        ],
        "requestBody": {
          "description": "Excel export configuration and snapshot information to export",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpreadsheet.IExport.SnapshotInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Spreadsheet Information and Excel export details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpreadsheet.IExport.ToExcelToOutput"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "exports",
          "excel",
          "exportsToExcel"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      }
    },
    "/connector/swal/spreadsheets/{id}": {
      "patch": {
        "summary": "Read individual detailed spreadsheet including full data",
        "description": "Read an entire contents of spreadsheet with its every snapshot\n\nAll data content that is not omitted is shown here, so you can also see how the spreadsheet has been modified over time.\nThis connector reads a spreadsheet with its every snapshot {@link ISpreadsheet.ISnapshot snapshots}.\nThis detailed view contains the full data created for each version of the spreadsheet,\nas well as the connection information to the external services to which it was exported.\n\nBy examining the snapshots, you can track changes made to the spreadsheet, compare versions, and understand its history.\nIf the user is interested in a specific version of the spreadsheet or wants to check its export history to external services like Google Sheets or Excel,\nthis connector is the correct choice.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " Target spreadsheet's {@link ISpreadsheet.id }, Not snapshot ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Spreadsheet Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpreadsheetISpreadsheet.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "at"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      }
    },
    "/connector/swal/spreadsheets/{id}/cells": {
      "post": {
        "summary": "Insert or update cells in a spreadsheet (snapshot-based structure)",
        "description": "Insert or update cells in a spreadsheet\n\nThis connector allows adding or updating cells in an existing spreadsheet.\nThe spreadsheet is identified by its {@link ISpreadsheet.id}, and the input should include\nthe cell data to be inserted or updated.\n\nSpreadsheets in the system are managed as snapshots, meaning each update creates a new snapshot\nto preserve version history. Cells, like other spreadsheet components, are part of this snapshot\nstructure. This allows tracking changes to the spreadsheet over time and facilitates rollbacks or\ncomparisons between versions.\n\nWhen updating the spreadsheet, it modifies only the provided cells, leaving other\ncells unchanged. This is particularly useful for partial updates without altering the\nexisting structure or data in the spreadsheet.\n\nIf you want to create a new spreadsheet entirely, please use the `POST /connector/swal/spreadsheets` connector instead.",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " Target spreadsheet's {@link ISpreadsheet.id }"
          }
        ],
        "requestBody": {
          "description": "Contains the cells to be inserted or updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequiredPickISpreadsheet.ICreatecells"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Updated spreadsheet data after modifying the cells",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpreadsheetISpreadsheet.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "cells",
          "insertCells"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      }
    },
    "/connector/swal/spreadsheets": {
      "patch": {
        "summary": "List up all summarized spreadsheets",
        "description": "List up all summarized spreadsheets with pagination and searching options\n\nBecause it is looking at the user's individual spreadsheets, the user cannot inquire about spreadsheets other than their own.\nBecause it is a call to data stored in the connector server's own DB,\nit may be appropriate to call this connector if the user asks to call the data without saying the service name.\nIt is recommended that you first ask the user for the service name.\nIf you are asked to look up the spreadsheets under the names of `Swal`, `Wrtn Technologies`, `Wrtn`, `user own DB`, `user DB`, etc., you should call this connector.\n\nA list of paged spreadsheets will appear.\nThe spreadsheet contains abbreviated data previews, so you can infer its contents from the title and preview.\n\nIf you want to see the full data instead of the abbreviated preview,\nor if you want to see the history of this spreadsheet being exported to Google Sheets or other services,\nplease look up the details.\nHere, we only show a preview of the data up to 100 cells, so if you want to see the latter, you need to look up the details.\nYou can view all the snapshots of this spreadsheet if you want to look at them in detail.\nThe detailed lookup connector is 'PATCH connector/swal/spreadsheets/:id'.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Request info of pagination and searching options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpreadsheet.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Paginated summarized spreadsheets.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageISpreadsheet.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "index"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      },
      "post": {
        "summary": "Create Spreadsheet",
        "description": "Create Spreadsheet in User Database\n\nSpreadsheets are managed in a snapshot-based structure, enabling rollback at any time.\nWhen a spreadsheet is created, the system automatically generates the first snapshot.\nThe most recent snapshot reflects the current state of the spreadsheet.\nBy editing the spreadsheet or exporting it to external services, you can track which version—i.e., which snapshot—was exported and synchronize it using foreign keys.\nThis system is designed to efficiently handle any spreadsheet-like documents, such as those from Google Sheets, Excel, or Airtable.\nUsing a structured data format as the standard for writing and versioning, it identifies changes through a diff algorithm whenever edits are made.\nThis allows you to compare previous and current versions, track changes, and synchronize updates across services.\nAs these APIs store data exclusively in the Wrtn Technologies Ecosystem Team's database without relying on external APIs,\nthis setup serves as an ideal starting point for creating and managing spreadsheets efficiently with robust version control.\n\nIf the user asked to edit the spreadsheet, it would most likely not be this connector.\nThere is a separate connector for the update, so please use it.\n\nIf the user asks you to create a spreadsheet without any service names,\nyou may be referring to this connector.\nAsk the user to confirm.\n\nPlease insert the correct data without omitting the data or adding the phrase that you have omitted it.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Spreadsheet Information to Create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpreadsheet.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpreadsheetISpreadsheet.ISnapshot"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "x-samchon-accessor": [
          "connector",
          "swal",
          "spreadsheets",
          "create"
        ],
        "x-samchon-controller": "SpreadsheetController",
        "x-samchon-human": true
      }
    }
  },
  "components": {
    "schemas": {
      "ISpreadsheet.IExport.ToGoogleSheetsToOutput": {
        "type": "object",
        "properties": {
          "google_sheets": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "Created google sheets spreadsheet ID"
              },
              "title": {
                "type": "string",
                "title": "Title of Created google sheets spreadsheet"
              },
              "link": {
                "type": "string",
                "title": "File URL"
              }
            },
            "required": [
              "id",
              "title",
              "link"
            ]
          },
          "spreadsheet_exports": {
            "$ref": "#/components/schemas/StrictOmitISpreadsheetExportdeleted_at",
            "title": "Exporting infomation"
          }
        },
        "required": [
          "google_sheets",
          "spreadsheet_exports"
        ]
      },
      "StrictOmitISpreadsheetExportdeleted_at": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "title": "provider name",
            "description": "It means the name of the service from which the post was exported,\nand if the service name is motion,\nit means that the same post is posted in the corresponding url of the provider service."
          },
          "url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "iri"
              }
            ],
            "title": "URL",
            "description": "This is a redirect link that allows you to locate the exported spreadsheet,\nwhich is stored at export time."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of {@link ISpreadsheetExport}"
          },
          "uid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Unique spreadsheet ID in external service"
          },
          "spreadsheet_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID"
          }
        },
        "required": [
          "provider",
          "url",
          "id",
          "created_at",
          "uid",
          "spreadsheet_snapshot_id"
        ]
      },
      "ISpreadsheet.IExport.ToGoogleSheetsToInput": {
        "type": "object",
        "properties": {
          "google_sheets": {
            "type": "object",
            "properties": {
              "secret": {
                "type": "string",
                "x-wrtn-secret-key": "google",
                "x-wrtn-secret-scopes": [
                  "https://www.googleapis.com/auth/spreadsheets",
                  "https://www.googleapis.com/auth/drive.file"
                ]
              }
            },
            "required": [
              "secret"
            ]
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/spreadsheets/:id",
                  "jmesPath": "data[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "Snapshot ID of the spreadsheet you want to export to another service"
              }
            },
            "required": [
              "id"
            ],
            "title": "snapshot information to export"
          }
        },
        "required": [
          "google_sheets",
          "snapshot"
        ]
      },
      "ISpreadsheet.IExport.ToExcelToOutput": {
        "type": "object",
        "properties": {
          "excel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "Created excel spreadsheet ID"
              },
              "title": {
                "type": "string",
                "title": "Title of Created excel spreadsheet"
              },
              "link": {
                "type": "string",
                "title": "File URL"
              }
            },
            "required": [
              "id",
              "title",
              "link"
            ]
          },
          "spreadsheet_exports": {
            "$ref": "#/components/schemas/StrictOmitISpreadsheetExportdeleted_at",
            "title": "Exporting infomation"
          }
        },
        "required": [
          "excel",
          "spreadsheet_exports"
        ]
      },
      "ISpreadsheet.IExport.SnapshotInput": {
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "patch",
                  "path": "/connector/swal/spreadsheets/:id",
                  "jmesPath": "data[].{ value: id, label: ['created_at ', created_at].join(':', @) }"
                },
                "title": "Snapshot ID of the spreadsheet you want to export to another service"
              }
            },
            "required": [
              "id"
            ],
            "title": "snapshot information to export"
          }
        },
        "required": [
          "snapshot"
        ]
      },
      "ISpreadsheetISpreadsheet.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "external_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "External User ID"
          },
          "spreadsheet_cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StrictOmitISpreadsheetCellspreadsheet_id"
            },
            "title": "cells"
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpreadsheet.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "It is created for the first time when an spreadsheet is created, and is\naccumulated every time the spreadsheet is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of spreadsheet",
            "description": "The most recent snapshot made is the higher version,\nand in fact, this time value can serve as the version."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "Deletion time of spreadsheet"
          },
          "total_cell_count": {
            "type": "integer",
            "title": "Total count of cells"
          }
        },
        "required": [
          "id",
          "external_user_id",
          "spreadsheet_cells",
          "snapshots",
          "created_at",
          "deleted_at",
          "total_cell_count"
        ]
      },
      "StrictOmitISpreadsheetCellspreadsheet_id": {
        "type": "object",
        "properties": {
          "spreadsheet_cell_snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPickISpreadsheetCell.ISnapshotvalueidcreated_attype"
            },
            "title": "Snapshots",
            "description": "All Snapshot of Cell"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of spreadsheet cell"
          },
          "column": {
            "type": "integer",
            "minimum": 1,
            "maximum": 26,
            "title": "Column Number",
            "description": "It counts from 1"
          },
          "row": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "title": "Row Number",
            "description": "It counts from 1"
          },
          "mv_last": {
            "type": "object",
            "properties": {
              "snapshot": {
                "$ref": "#/components/schemas/MyPickISpreadsheetCell.ISnapshotvaluecreated_attype"
              }
            },
            "required": [
              "snapshot"
            ],
            "title": "Last Snapshot"
          }
        },
        "required": [
          "spreadsheet_cell_snapshots",
          "id",
          "created_at",
          "column",
          "row",
          "mv_last"
        ]
      },
      "MyPickISpreadsheetCell.ISnapshotvalueidcreated_attype": {
        "type": "object",
        "properties": {
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "value",
            "description": "If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of spreadsheet cell snapshot"
          },
          "type": {
            "const": "text",
            "title": "Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."
          }
        },
        "required": [
          "value",
          "id",
          "created_at",
          "type"
        ]
      },
      "MyPickISpreadsheetCell.ISnapshotvaluecreated_attype": {
        "type": "object",
        "properties": {
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "value",
            "description": "If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of spreadsheet cell snapshot"
          },
          "type": {
            "const": "text",
            "title": "Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."
          }
        },
        "required": [
          "value",
          "created_at",
          "type"
        ]
      },
      "ISpreadsheet.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "In other words, creation time or update time or spreadsheet"
          },
          "spreadsheet_exports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpreadsheetExport.ISummary"
            },
            "title": "History of this snapshot being exported",
            "description": "If it has been exported,\nthe location of the export will be recorded in the properties."
          },
          "title": {
            "type": "string",
            "title": "title"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "description",
            "description": "If user want to export this sheet to an external service,\nthe description may not be exposed depending on the service user want to export.\nHowever, because it may be difficult to find out what this sheet was intended by looking at the title alone,\nan explanatory property is placed."
          }
        },
        "required": [
          "id",
          "created_at",
          "spreadsheet_exports",
          "title"
        ]
      },
      "ISpreadsheetExport.ISummary": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "title": "provider name",
            "description": "It means the name of the service from which the post was exported,\nand if the service name is motion,\nit means that the same post is posted in the corresponding url of the provider service."
          },
          "url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "iri"
              }
            ],
            "title": "URL",
            "description": "This is a redirect link that allows you to locate the exported spreadsheet,\nwhich is stored at export time."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of {@link ISpreadsheetExport}"
          },
          "uid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Unique spreadsheet ID in external service"
          }
        },
        "required": [
          "provider",
          "url",
          "id",
          "created_at",
          "uid"
        ]
      },
      "RequiredPickISpreadsheet.ICreatecells": {
        "type": "object",
        "properties": {
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpreadsheetCell.ICreate"
            },
            "title": "cells"
          }
        },
        "required": [
          "cells"
        ],
        "description": "Make all properties in T required"
      },
      "ISpreadsheetCell.ICreate": {
        "type": "object",
        "properties": {
          "column": {
            "type": "integer",
            "minimum": 1,
            "maximum": 26,
            "title": "Column Number",
            "description": "It counts from 1"
          },
          "row": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "title": "Row Number",
            "description": "It counts from 1"
          },
          "snapshot": {
            "$ref": "#/components/schemas/MyPickISpreadsheetCell.ISnapshot.ICreatevaluetype",
            "title": "Last Snapshot"
          }
        },
        "required": [
          "column",
          "row",
          "snapshot"
        ]
      },
      "MyPickISpreadsheetCell.ISnapshot.ICreatevaluetype": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "title": "value",
            "description": "If the value of the final cell is in the erased form, null.\nA null value will be stored only when the value of this cell disappears after modification, and other than that, null can never be entered.\nThis is to indicate that the value has been explicitly deleted to prevent the cell value of the previous snapshot from being exposed when a cell is soft-delete."
          },
          "type": {
            "const": "text",
            "title": "Format type of this cell\n\nFor example, date, datetime, bool, text an so on.\nIf you want add new type, please discuss within our team."
          }
        },
        "required": [
          "value",
          "type"
        ]
      },
      "IPageISpreadsheet.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "description": "Page information"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpreadsheet.ISummary"
            },
            "description": "List of records"
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page\n\nCollection of records with pagination indformation"
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Limitation of records per a page"
          },
          "records": {
            "type": "integer",
            "description": "Count of total records in database"
          },
          "pages": {
            "type": "integer",
            "description": "Number of total pages\n\nEqual to {@link records} / {@link limit} with ceiling."
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "Page information"
      },
      "ISpreadsheet.ISummary": {
        "type": "object",
        "properties": {
          "mv_last": {
            "type": "object",
            "properties": {
              "snapshot": {
                "$ref": "#/components/schemas/ISpreadsheet.ISnapshot"
              }
            },
            "required": [
              "snapshot"
            ]
          },
          "spreadsheet_cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StrictOmitISpreadsheetCellspreadsheet_id"
            },
            "minItems": 0,
            "maxItems": 100,
            "title": "Summarized Cell Contents",
            "description": "It is the summarized cell content, and only up to 100 are searched.\nYou can check the whole thing by searching in detail."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of spreadsheet",
            "description": "The most recent snapshot made is the higher version,\nand in fact, this time value can serve as the version."
          },
          "total_cell_count": {
            "type": "integer",
            "title": "Total count of cells"
          }
        },
        "required": [
          "mv_last",
          "spreadsheet_cells",
          "id",
          "created_at",
          "total_cell_count"
        ]
      },
      "ISpreadsheet.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/ISpreadsheet.IRequest.ISearch",
            "title": "Search"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "-snapshot.created_at"
                },
                {
                  "const": "-snapshot.title"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+snapshot.created_at"
                },
                {
                  "const": "+snapshot.title"
                }
              ]
            },
            "title": "Sort"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "required": [],
        "title": "Request"
      },
      "ISpreadsheet.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "Spreadsheet IDs",
            "description": "Spreadsheet IDs, not Spreadsheet Snapshot ID\nIt is Spreadsheet's ID, Not Spreadsheet Snapshot ID and {@link ISpreadsheetExport spreadsheet_exports} ID."
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "title": "Title of spreadsheet",
                "description": "This property is not a complete match, but a feature\nthat allows you to search for a title that contains that character."
              },
              "description": {
                "type": "string",
                "title": "Description of spreadsheet",
                "description": "This property is not a complete match, but a feature\nthat allows you to search for a title that contains that character."
              },
              "minimum_cell_count": {
                "type": "integer",
                "title": "minimum count of cells",
                "description": "It means the number of cells you wish to have at least.\nYou can adjust this value when you want to look up a lot of written sheets."
              }
            },
            "required": [],
            "title": "Last Snapshot"
          }
        },
        "required": [
          "snapshot"
        ],
        "title": "Search Conditions",
        "description": "If an attribute exists,\nit returns only the result of 'AND' calculations of all the attributes."
      },
      "ISpreadsheet.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "title"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "description",
            "description": "If user want to export this sheet to an external service,\nthe description may not be exposed depending on the service user want to export.\nHowever, because it may be difficult to find out what this sheet was intended by looking at the title alone,\nan explanatory property is placed."
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpreadsheetCell.ICreate"
            },
            "title": "cells"
          }
        },
        "required": [
          "title"
        ]
      }
    }
  },
  "tags": [],
  "x-samchon-emended": true
}