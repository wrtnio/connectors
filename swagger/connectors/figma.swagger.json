{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://studio-connector-api.wrtn.ai",
      "description": "Production Server"
    },
    {
      "url": "https://studio-connector-poc.dev.wrtn.club",
      "description": "Develop Server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "피그마 디자인 협업 플랫폼",
    "summary": "피그마 파일을 쉽게 관리하고 협업할 수 있어요.",
    "description": "피그마 파일에 접근하고, 댓글을 가져오거나 추가할 수 있어요. 디자인 작업과 팀 협업을 효율적으로 진행할 수 있어요. 프로젝트의 진행 상황을 확인하고, 팀원들의 피드백을 실시간으로 주고받을 수 있어요. 디자인 에셋을 관리하고, 버전 히스토리를 추적할 수 있어요. UI/UX 디자인, 프로토타이핑, 그래픽 디자인 등 다양한 디자인 작업을 수행하고 관리할 수 있어요.",
    "version": "0.1.203",
    "license": {
      "name": "AGPL-3.0-only"
    }
  },
  "paths": {
    "/connector/figma/get-files": {
      "post": {
        "summary": "피그마 파일 가져오기.",
        "description": "피그마 파일들을 가져옵니다.",
        "tags": [
          "figma"
        ],
        "parameters": [],
        "requestBody": {
          "description": "파일을 가져오기 위한 조건 값.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.IReadFileInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "피그마 파일 목록.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IFigma.IReadFileOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg"
      }
    },
    "/connector/figma/comments": {
      "post": {
        "summary": "캔버스 내 댓글 작성하기.",
        "description": "댓글을 작성합니다.",
        "tags": [
          "figma"
        ],
        "parameters": [],
        "requestBody": {
          "description": "댓글을 작성하기 위한 조건 값.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.IAddCommentInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "방금 작성된 댓글의 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg"
      }
    },
    "/connector/figma/get-comments": {
      "post": {
        "summary": "피그마 댓글 가져오기.",
        "description": "피그마 댓글들을 가져옵니다.",
        "tags": [
          "figma"
        ],
        "parameters": [],
        "requestBody": {
          "description": "댓글을 가져오기 위한 조건 값.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.IReadCommentInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "피그마 댓글 목록.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentsResponse"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg"
      }
    },
    "/connector/figma/projects/{id}/get-canvas": {
      "post": {
        "summary": "팀 내 캔버스 조회",
        "description": "특정 프로젝트의 모든 캔버스를 가져옵니다.\n캔버스는 특정 팀에서 관리하고 있는 피그마 파일들을 의미합니다.\n이 커넥터를 통해 사용자는 자신의 피그마 팀 내에 어떤 캔버스들이 관리되고 있는지 캔버스의 이름과 섬네일 링크를 받아 볼 수 있습니다.",
        "tags": [
          "figma"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "x-wrtn-prerequisite": {
                "method": "post",
                "path": "/connector/figma/get-projects",
                "jmesPath": "proejcts[].{value:id, label:name}"
              }
            },
            "required": true,
            "description": " 조회할 프로젝트의 아이디"
          }
        ],
        "requestBody": {
          "description": "프로젝트 조회 조건",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.Secret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "프로젝트의 모든 파일",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IFigma.IGetProjectFileOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg"
      }
    },
    "/connector/figma/get-statistics": {
      "post": {
        "summary": "팀 단위 피그마 통계 조회",
        "description": "팀 단위의 통계를 조회합니다.",
        "tags": [
          "figma"
        ],
        "parameters": [],
        "requestBody": {
          "description": "팀 단위 통계 조회 조건",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.IGetProjectStatisticsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "팀의 통계 조회 결과",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IFigma.IGetStatisticsOutput"
                  }
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
        "x-wrtn-standalone": true
      }
    },
    "/connector/figma/get-projects": {
      "post": {
        "summary": "팀 내 프로젝트 조회",
        "description": "팀 내의 프로젝트를 조회합니다.\n인자로는 teamId를 받아야 하는데, 이 프로퍼티는 팀 아이디를 의미하며 figma의 URL 경로를 보고 파악할 수 있습니다.\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 자동으로 숫자가 붙게 되는데 이것이 팀의 아이디입니다.\n유저는 여러가지 팀에 속할 수 있으므로, 만일 이 프로젝트들에 대한 조회를 자동화하고 싶지 않다면 다른 팀 아이디를 가져와야 합니다.",
        "tags": [
          "figma"
        ],
        "parameters": [],
        "requestBody": {
          "description": "프로젝트 조회 조건",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IFigma.IGetProjectInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "프로젝트 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IFigma.IGetProejctOutput"
                }
              }
            }
          }
        },
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/Figma_full.svg",
        "x-wrtn-standalone": true
      }
    }
  },
  "components": {
    "schemas": {
      "IFigma.IReadFileOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "에디터에서 파일의 이름.",
            "description": "에디터에서 파일의 이름입니다."
          },
          "role": {
            "oneOf": [
              {
                "const": "owner"
              },
              {
                "const": "editor"
              },
              {
                "const": "viewer"
              }
            ],
            "title": "요청을 수행하는 사용자의 역할.",
            "description": "파일과 관련된 API 요청을 수행하는 사용자의 역할입니다."
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "title": "파일이 마지막으로 수정된 시간.",
            "description": "파일이 마지막으로 수정된 UTC ISO 8601 시간입니다."
          },
          "editorType": {
            "oneOf": [
              {
                "const": "figma"
              },
              {
                "const": "figjam"
              }
            ],
            "title": "파일과 관련된 에디터의 유형.",
            "description": "이 파일과 관련된 에디터의 유형입니다."
          },
          "thumbnailUrl": {
            "type": "string",
            "title": "섬네일 이미지.",
            "description": "파일의 섬네일 이미지에 대한 URL입니다."
          },
          "version": {
            "type": "string",
            "title": "파일의 버전 번호.",
            "description": "파일의 버전 번호입니다. 파일이 수정될 때마다 이 번호가 증가하며 요청 간에 파일이 변경되었는지 확인하는 데 사용될 수 있습니다."
          },
          "components": {
            "type": "object",
            "properties": {},
            "title": "컴포넌트 ID와 컴포넌트 메타데이터 간의 매핑.",
            "description": "컴포넌트 ID와 컴포넌트 메타데이터 간의 매핑입니다.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Component"
            }
          },
          "componentSets": {
            "type": "object",
            "properties": {},
            "title": "컴포넌트 세트 ID와 컴포넌트 세트 메타데이터 간의 매핑.",
            "description": "컴포넌트 세트 ID와 컴포넌트 세트 메타데이터 간의 매핑입니다.",
            "additionalProperties": {
              "$ref": "#/components/schemas/ComponentSet"
            }
          },
          "schemaVersion": {
            "type": "number",
            "title": "이 파일이 사용하는 파일 스키마의 버전.",
            "description": "이 파일이 사용하는 파일 스키마의 버전입니다."
          },
          "styles": {
            "type": "object",
            "properties": {},
            "title": "스타일 ID와 스타일 메타데이터 간의 매핑.",
            "description": "스타일 ID와 스타일 메타데이터 간의 매핑입니다.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Style"
            }
          },
          "mainFileKey": {
            "type": "string",
            "title": "이 파일의 주 파일 키.",
            "description": "이 파일의 주 파일 키입니다. 존재하는 경우 이 파일은 컴포넌트 또는 컴포넌트 세트입니다."
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "title": "브랜치의 키입니다",
                  "description": "브랜치의 키입니다."
                },
                "name": {
                  "type": "string",
                  "title": "브랜치의 이름입니다",
                  "description": "브랜치의 이름입니다."
                },
                "thumbnail_url": {
                  "type": "string",
                  "title": "브랜치의 섬네일 이미지에 대한 URL입니다",
                  "description": "브랜치의 섬네일 이미지에 대한 URL입니다."
                },
                "last_modified": {
                  "type": "string",
                  "title": "브랜치가 마지막으로 수정된 UTC ISO 8601 시간입니다",
                  "description": "브랜치가 마지막으로 수정된 UTC ISO 8601 시간입니다."
                }
              },
              "required": [
                "key",
                "name",
                "thumbnail_url",
                "last_modified"
              ]
            },
            "title": "이 파일의 브랜치 목록입니다",
            "description": "이 파일의 브랜치 목록입니다."
          }
        },
        "required": [
          "name",
          "role",
          "lastModified",
          "editorType",
          "version",
          "components",
          "componentSets",
          "schemaVersion",
          "styles"
        ],
        "description": "읽어온 피그마 파일의 정보에 해당하는 DTO."
      },
      "Component": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the component"
          },
          "name": {
            "type": "string",
            "description": "Name of the component"
          },
          "description": {
            "type": "string",
            "description": "The description of the component as entered in the editor"
          },
          "componentSetId": {
            "type": "string",
            "description": "The ID of the component set if the component belongs to one"
          },
          "documentationLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentationLink"
            },
            "description": "An array of documentation links attached to this component"
          },
          "remote": {
            "type": "boolean",
            "description": "Whether this component is a remote component that doesn't live in this file"
          }
        },
        "required": [
          "key",
          "name",
          "description",
          "documentationLinks",
          "remote"
        ],
        "description": "A description of a main component. Helps you identify which component instances are attached to."
      },
      "DocumentationLink": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "title": "Should be a valid URI (e.g. https://www.figma.com)",
            "description": "Should be a valid URI (e.g. https://www.figma.com)."
          }
        },
        "required": [
          "uri"
        ],
        "description": "Represents a link to documentation for a component or component set."
      },
      "ComponentSet": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the component set"
          },
          "name": {
            "type": "string",
            "description": "Name of the component set"
          },
          "description": {
            "type": "string",
            "description": "The description of the component set as entered in the editor"
          },
          "documentationLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentationLink"
            },
            "description": "An array of documentation links attached to this component set"
          },
          "remote": {
            "type": "boolean",
            "description": "Whether this component set is a remote component set that doesn't live in this file"
          }
        },
        "required": [
          "key",
          "name",
          "description"
        ],
        "description": "A description of a component set, which is a node containing a set of variants of a component."
      },
      "Style": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the style"
          },
          "name": {
            "type": "string",
            "description": "Name of the style"
          },
          "description": {
            "type": "string",
            "description": "Description of the style"
          },
          "remote": {
            "type": "boolean",
            "description": "Whether this style is a remote style that doesn't live in this file"
          },
          "styleType": {
            "oneOf": [
              {
                "const": "FILL"
              },
              {
                "const": "TEXT"
              },
              {
                "const": "EFFECT"
              },
              {
                "const": "GRID"
              }
            ]
          }
        },
        "required": [
          "key",
          "name",
          "description",
          "remote",
          "styleType"
        ],
        "description": "A set of properties that can be applied to nodes and published. Styles for a property can be\ncreated in the corresponding property's panel while editing a file."
      },
      "IFigma.IReadFileInput": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "title": "피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.",
            "description": "파일의 키를 의미합니다.\n\n여기서의 파일 키는 피그마 프레임을 의미합니다."
          },
          "version": {
            "type": "string",
            "title": "가져올 특정 버전의 ID.",
            "description": "가져올 특정 버전 ID입니다. 이를 생략하면 파일의 현재 버전을 가져옵니다."
          },
          "ids": {
            "type": "string",
            "title": "문서에서 관심 있는 노드들의 쉼표로 구분된 목록.",
            "description": "문서에서 관심 있는 노드들의 쉼표로 구분된 목록입니다. 지정된 경우에는 해당하는 노드, 그 자식들 및 루트 노드와 나열된 노드 사이의 모든 부분 집합만 반환됩니다.\n\n참고: 원하는 노드의 조상 체인 외부에 포함된 다른 노드들이 반환된 JSON에 포함될 수 있습니다. 응답에는 또한 노드의 하위 트리에 있는 것들의 종속성도 포함될 수 있습니다. 예를 들어, 노드 하위 트리에 해당 파일의 다른 곳에 위치한 로컬 컴포넌트의 인스턴스가 포함되어 있는 경우 해당 컴포넌트와 해당 조상 체인도 포함됩니다.\n\n역사적인 이유로 최상위 캔버스 노드는 항상 반환되며 `ids` 매개변수에 나열되어 있는지 여부에 관계없이 반환됩니다. 이러한 특이점은 향후 API 버전에서 제거될 수 있습니다."
          },
          "depth": {
            "type": "integer",
            "title": "문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수.",
            "description": "문서 트리를 얼마나 깊이 탐색할지를 나타내는 양의 정수입니다. 예를 들어, 이를 1로 설정하면 페이지만 반환하고, 2로 설정하면 각 페이지의 페이지와 모든 최상위 개체를 반환합니다. 이 매개변수를 설정하지 않으면 모든 노드가 반환됩니다."
          },
          "geometry": {
            "type": "string",
            "title": "내보낼 벡터 데이터.",
            "description": "벡터 데이터를 내보낼 때 \"paths\"로 설정합니다."
          },
          "plugin_data": {
            "type": "string",
            "title": "플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록.",
            "description": "플러그인 ID 및/또는 문자열 \"shared\"의 쉼표로 구분된 목록입니다. 해당 플러그인이 작성한 문서에 있는 모든 데이터는 결과의 `pluginData` 및 `sharedPluginData` 속성에 포함됩니다."
          },
          "branch_data": {
            "type": "boolean",
            "default": false,
            "title": "요청한 파일에 대한 브랜치 메타데이터를 반환할지 여부를 의미.",
            "description": "요청한 파일에 대한 브랜치 메타데이터를 반환합니다. 파일이 브랜치이면 반환된 응답에는 메인 파일의 키도 포함됩니다. 파일에 브랜치가 있으면 해당 메타데이터도 반환됩니다. 기본값: false."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "fileKey",
          "secretKey"
        ],
        "description": "피그마 특정 프레임으로부터 파일을 조회하는 DTO.\n\n한 번에 하나의 프레임으로부터 파일을 읽을 수 있다."
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Unique identifier for comment",
            "description": "Unique identifier for comment."
          },
          "client_meta": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Vector"
              },
              {
                "$ref": "#/components/schemas/FrameOffset"
              },
              {
                "$ref": "#/components/schemas/Region"
              },
              {
                "$ref": "#/components/schemas/FrameOffsetRegion"
              }
            ],
            "description": "Positioning information of the comment. Includes information on the location of the comment pin,\nwhich is either the absolute coordinates on the canvas or a relative offset within a frame. If\nthe comment is a region, it will also contain the region height, width, and position of the\nanchor in regards to the region."
          },
          "file_key": {
            "type": "string",
            "description": "The file in which the comment lives"
          },
          "parent_id": {
            "type": "string",
            "description": "If present, the id of the comment to which this is the reply"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "The user who left the comment"
          },
          "created_at": {
            "type": "string",
            "description": "The UTC ISO 8601 time at which the comment was left"
          },
          "resolved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "If set, the UTC ISO 8601 time the comment was resolved"
          },
          "message": {
            "type": "string",
            "description": "The content of the comment"
          },
          "order_id": {
            "type": "string",
            "description": "Only set for top level comments. The number displayed with the comment in the UI"
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reaction"
            },
            "description": "An array of reactions to the comment"
          }
        },
        "required": [
          "id",
          "client_meta",
          "file_key",
          "user",
          "created_at",
          "message",
          "reactions"
        ],
        "description": "A comment or reply left by a user."
      },
      "Vector": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "title": "X coordinate of the vector",
            "description": "X coordinate of the vector."
          },
          "y": {
            "type": "number",
            "title": "Y coordinate of the vector",
            "description": "Y coordinate of the vector."
          }
        },
        "required": [
          "x",
          "y"
        ],
        "description": "A 2d vector."
      },
      "FrameOffset": {
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Unique id specifying the frame",
            "description": "Unique id specifying the frame."
          },
          "node_offset": {
            "$ref": "#/components/schemas/Vector",
            "title": "2D vector offset within the frame from the top-left corner",
            "description": "2D vector offset within the frame from the top-left corner."
          }
        },
        "required": [
          "node_id",
          "node_offset"
        ],
        "description": "Position of a comment relative to the frame to which it is attached."
      },
      "Region": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "title": "X coordinate of the position",
            "description": "X coordinate of the position."
          },
          "y": {
            "type": "number",
            "title": "Y coordinate of the position",
            "description": "Y coordinate of the position."
          },
          "region_height": {
            "type": "number",
            "title": "The height of the comment region. Must be greater than 0",
            "description": "The height of the comment region. Must be greater than 0."
          },
          "region_width": {
            "type": "number",
            "title": "The width of the comment region. Must be greater than 0",
            "description": "The width of the comment region. Must be greater than 0."
          },
          "comment_pin_corner": {
            "oneOf": [
              {
                "const": "top-left"
              },
              {
                "const": "top-right"
              },
              {
                "const": "bottom-left"
              },
              {
                "const": "bottom-right"
              }
            ],
            "title": "The corner of the comment region to pin to the node's corner as a string enum",
            "description": "The corner of the comment region to pin to the node's corner as a string enum."
          }
        },
        "required": [
          "x",
          "y",
          "region_height",
          "region_width"
        ],
        "description": "Position of a region comment on the canvas."
      },
      "FrameOffsetRegion": {
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Unique id specifying the frame",
            "description": "Unique id specifying the frame."
          },
          "node_offset": {
            "$ref": "#/components/schemas/Vector",
            "title": "2D vector offset within the frame from the top-left corner",
            "description": "2D vector offset within the frame from the top-left corner."
          },
          "region_height": {
            "type": "number",
            "title": "The height of the comment region. Must be greater than 0",
            "description": "The height of the comment region. Must be greater than 0."
          },
          "region_width": {
            "type": "number",
            "title": "The width of the comment region. Must be greater than 0",
            "description": "The width of the comment region. Must be greater than 0."
          },
          "comment_pin_corner": {
            "oneOf": [
              {
                "const": "top-left"
              },
              {
                "const": "top-right"
              },
              {
                "const": "bottom-left"
              },
              {
                "const": "bottom-right"
              }
            ],
            "title": "The corner of the comment region to pin to the node's corner as a string enum",
            "description": "The corner of the comment region to pin to the node's corner as a string enum."
          }
        },
        "required": [
          "node_id",
          "node_offset",
          "region_height",
          "region_width"
        ],
        "description": "Position of a region comment relative to the frame to which it is attached."
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Unique stable id of the user",
            "description": "Unique stable id of the user."
          },
          "handle": {
            "type": "string",
            "title": "Name of the user",
            "description": "Name of the user."
          },
          "img_url": {
            "type": "string",
            "title": "URL link to the user's profile image",
            "description": "URL link to the user's profile image."
          }
        },
        "required": [
          "id",
          "handle",
          "img_url"
        ],
        "description": "A description of a user."
      },
      "Reaction": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User",
            "title": "The user who left the reaction",
            "description": "The user who left the reaction."
          },
          "emoji": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "title": "The UTC ISO 8601 time at which the reaction was left",
            "description": "The UTC ISO 8601 time at which the reaction was left."
          }
        },
        "required": [
          "user",
          "emoji",
          "created_at"
        ],
        "description": "A reaction left by a user."
      },
      "IFigma.IAddCommentInput": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "title": "피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값.",
            "description": "파일의 키를 의미합니다."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "message": {
            "type": "string",
            "title": "The text contents of the comment to post",
            "description": "The text contents of the comment to post."
          },
          "comment_id": {
            "type": "string",
            "description": "The ID of the comment to reply to, if any. This must be a root comment. You cannot reply to other\nreplies (a comment that has a parent_id)."
          },
          "client_meta": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Vector"
              },
              {
                "$ref": "#/components/schemas/FrameOffset"
              },
              {
                "$ref": "#/components/schemas/Region"
              },
              {
                "$ref": "#/components/schemas/FrameOffsetRegion"
              }
            ],
            "title": "The position where to place the comment",
            "description": "The position where to place the comment."
          }
        },
        "required": [
          "fileKey",
          "secretKey",
          "message"
        ],
        "description": "특정 영역에 댓글을 추가하기 위한 DTO.\n\n한 번의 하나의 댓글을 작성할 수 있으며, 좌표 값이나 노드, 또는 부모 댓글(root comment) 이용해 댓글을 작성할 수 있다."
      },
      "GetCommentsResponse": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "title": "An array of comments",
            "description": "An array of comments."
          }
        },
        "required": [
          "comments"
        ],
        "description": "Response from the GET /v1/files/{file_key}/comments endpoint."
      },
      "IFigma.IReadCommentInput": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "title": "피그마 각 파일 혹은 컴포넌트가 가지는 고유한 키 값",
            "description": "파일의 키를 의미합니다."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "as_md": {
            "type": "boolean",
            "title": "If enabled, will return comments as their markdown equivalents when applicable",
            "description": "If enabled, will return comments as their markdown equivalents when applicable."
          }
        },
        "required": [
          "fileKey",
          "secretKey"
        ]
      },
      "IFigma.IGetProjectFileOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "프로젝트 이름"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFigma.Canvas"
            },
            "title": "캔버스 목록",
            "description": "프로젝트에서 관리하고 있는 캔버스의 목록입니다."
          }
        },
        "required": [
          "name",
          "files"
        ]
      },
      "IFigma.Canvas": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "캔버스 키",
            "description": "파일을 고유하게 식별할 수 있는 키입니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."
          },
          "name": {
            "type": "string",
            "title": "캔버스 이름",
            "description": "파일을 식별할 수 있도록 사용자가 붙여 놓은 이름을 의미합니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."
          },
          "thumbnail_url": {
            "type": "string",
            "format": "uri",
            "contentMediaType": "image/*",
            "title": "섬네일",
            "description": "섬네일 이미지로, 이 캔버스의 메인이 되는 화면을 스크린샷처럼 제공합니다.\n하지만, 이 섬네일을 링크로 저장해서 사용하려는 경우에는 이 이미지가 일정 시간동안만 제공되는 점에 주의해야 합니다."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "마지막 수정 시간",
            "description": "해당 캔버스의 마지막 수정 시간을 의미한다.\n이를 기준으로 가장 최근에 변경점이 있거나 소통이 오가는 등 유지관리되는 캔버스를 구별할 수도 있을 것이다.\n다만, 이 값은 댓글이 추가되었다던가 캔버스에 변경점이 있는 게 아니면 알 수 없다."
          }
        },
        "required": [
          "key",
          "name",
          "thumbnail_url",
          "last_modified"
        ]
      },
      "IFigma.Secret": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IFigma.IGetStatisticsOutput": {
        "type": "object",
        "properties": {
          "canvasList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFigma.CanvasStatistics"
            },
            "title": "프로젝트 내 캔버스 별 통계"
          },
          "name": {
            "type": "string",
            "title": "프로젝트 이름"
          },
          "id": {
            "type": "string",
            "title": "프로젝트 아이디"
          }
        },
        "required": [
          "canvasList",
          "name",
          "id"
        ]
      },
      "IFigma.CanvasStatistics": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "title": "캔버스 내 댓글 목록"
          },
          "statistics": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "토론에 참여한 사람 명단"
              },
              "counts": {
                "$ref": "#/components/schemas/Recordstringnumber",
                "title": "각 사람 별 댓글 수"
              }
            },
            "required": [
              "users",
              "counts"
            ],
            "title": "캔버스 내 댓글에 대한 통계"
          },
          "key": {
            "type": "string",
            "title": "캔버스 키",
            "description": "파일을 고유하게 식별할 수 있는 키입니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."
          },
          "name": {
            "type": "string",
            "title": "캔버스 이름",
            "description": "파일을 식별할 수 있도록 사용자가 붙여 놓은 이름을 의미합니다.\n여기서 말하는 파일은 프로젝트에서 관리하고 있는 캔버스들을 의미합니다.\n피그마에서는 캔버스를 포함한, 캔버스의 자식 컴포넌트 요소 모두 다 파일이라고 부르기 때문에 용어의 혼동에 주의해야 합니다."
          },
          "thumbnail_url": {
            "type": "string",
            "format": "uri",
            "contentMediaType": "image/*",
            "title": "섬네일",
            "description": "섬네일 이미지로, 이 캔버스의 메인이 되는 화면을 스크린샷처럼 제공합니다.\n하지만, 이 섬네일을 링크로 저장해서 사용하려는 경우에는 이 이미지가 일정 시간동안만 제공되는 점에 주의해야 합니다."
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "마지막 수정 시간",
            "description": "해당 캔버스의 마지막 수정 시간을 의미한다.\n이를 기준으로 가장 최근에 변경점이 있거나 소통이 오가는 등 유지관리되는 캔버스를 구별할 수도 있을 것이다.\n다만, 이 값은 댓글이 추가되었다던가 캔버스에 변경점이 있는 게 아니면 알 수 없다."
          }
        },
        "required": [
          "comments",
          "statistics",
          "key",
          "name",
          "thumbnail_url",
          "last_modified"
        ]
      },
      "Recordstringnumber": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "type": "number"
        }
      },
      "IFigma.IGetProjectStatisticsInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          },
          "as_md": {
            "type": "boolean",
            "title": "If enabled, will return comments as their markdown equivalents when applicable",
            "description": "If enabled, will return comments as their markdown equivalents when applicable."
          },
          "teamId": {
            "type": "string",
            "title": "팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."
          }
        },
        "required": [
          "secretKey",
          "teamId"
        ]
      },
      "IFigma.IGetProejctOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "팀 이름"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFigma.Project"
            },
            "title": "프로젝트 목록\n\n팀에 속해있는 프로젝트들의 목록을 의미합니다."
          }
        },
        "required": [
          "name",
          "projects"
        ]
      },
      "IFigma.Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "프로젝트 아이디"
          },
          "name": {
            "type": "string",
            "title": "프로젝트 이름"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "IFigma.IGetProjectInput": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "title": "팀 아이디\n\n`https://www.figma.com/files/team` 링크 접속 시 `team` 키워드 뒤에 붙어 있는 문자열을 의미한다.\n\n팀 아이디는 숫자 형식이며, 팀 안에 여러 개의 프로젝트들이 존재할 수 있다."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "figma",
            "x-wrtn-secret-scopes": [
              "files:read",
              "file_variables:read",
              "file_variables:write",
              "file_comments:write",
              "file_dev_resources:read",
              "file_dev_resources:write",
              "library_analytics:read",
              "webhooks:write"
            ],
            "title": "인증 정보 선택",
            "description": "secret key."
          }
        },
        "required": [
          "teamId",
          "secretKey"
        ],
        "title": "프로젝트 조회 조건"
      }
    }
  },
  "tags": [
    {
      "name": "figma"
    }
  ],
  "x-samchon-emended": true
}