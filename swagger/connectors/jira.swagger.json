{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://studio-connector-api.wrtn.ai",
      "description": "Production Server"
    },
    {
      "url": "https://studio-connector-poc.dev.wrtn.club",
      "description": "Develop Server"
    },
    {
      "url": "http://localhost:3003",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "Jira",
    "summary": "Jira로 프로젝트 이슈를 관리해요.",
    "description": "프로젝트에 이슈를 생성하고 담당자를 할당해요. 완료된 이슈가 있다면 상태를 변경할 수도 있고 댓글을 남겨 의견 교류도 가능해요.",
    "version": "0.1.443",
    "license": {
      "name": "AGPL-3.0-only"
    }
  },
  "paths": {
    "/connector/jira/issues/comments": {
      "delete": {
        "summary": "delete comment",
        "description": "Delete the comment\n\nDelete the comments on the issue.\nIn order to delete the comments on the issue, you need the issue ID or key and the ID of the comment to be deleted.\nPlease be careful because deleted comments will not be able to be viewed again.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IDeleteCommentInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "comments",
          "deleteComment"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/comments/markdown": {
      "put": {
        "summary": "modify comment body",
        "description": "modify comment\n\nModify the comment. You can only modify the body of the comment here.\nTo create comment in issue, Just write markdown string format contents.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IUpdateCommentByMarkdownInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "comments",
          "markdown",
          "updateComment"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      },
      "post": {
        "summary": "creates a comment on an issue",
        "description": "Creates a comment on an issue\nHere, user can write the body of the comment you want to write with the ID or key of the issue.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "description": "condition of creation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.ICreateCommentByMarkdownInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.ICreateCommentOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "comments",
          "markdown",
          "createComment"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/get-comments": {
      "patch": {
        "summary": "get comments by issue id or key",
        "description": "Get comments by issue id or key\n\nThis connector uses the issue's key or ID value to query the comments written on the issue.\nComments are also visible when looking up issues,\nbut not all comments inside are visible,\nso user have to use this connector to look up them in pagination.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "description": "issue id or key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetCommentInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "comments of this issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetCommentOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "get_comments",
          "getComments"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/get-transitions": {
      "patch": {
        "summary": "Inquire the transition of an issue",
        "description": "Inquire the transition of an issue, which is an edge on a workflow that allows you to change the status of an issue\nIf the person who designed the workflow for the project defined three states that could be moved from the current state, there would be three edges.\nIn Jira, just because there is a status that can be viewed in a project or issue does not mean that you can change the status unconditionally.\nWhen designing an edge, for example, you can also design an issue in the 'backoff' state to go through the 'in progress' state once.\nIn this case, you need to move two edges to turn the backoff issue into 'done'.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetTransitionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetTransitionOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "get_transitions",
          "getTransitions"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/asignee": {
      "delete": {
        "description": "Unassign the assignee from the Jira issue",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IUnAssignInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "asignee",
          "unassign"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      },
      "put": {
        "summary": "assign the assignee",
        "description": "Assign the assignee from the Jira issue",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IAssignInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "asignee",
          "assign"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/status": {
      "put": {
        "summary": "change issue status",
        "description": "Change issue status\n\nChanging the status of an issue must be done after inquiring about changeable Transitions from the current issue.\nThis is forced by the person who designed the workflow in the project, so you must change the status in the order set.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IUpdateStatusInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "status",
          "updateIssueStatus"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/{id}": {
      "put": {
        "summary": "update issue in jira",
        "description": "Update an issue\n\nYou can modify any element in the field.\nIt can be used to modify the issue type, person in charge, summary, and description.\n\nIn order to write the body of an issue, you must create the body as if you were assembling several blocks.\nThere are pre-designated content types, so please check this type information carefully.",
        "tags": [
          "Jira"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " issue id to update"
          }
        ],
        "requestBody": {
          "description": "fields to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IUpdateIssueInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "updateIssue"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/markdown": {
      "post": {
        "summary": "create issue by markdown in jira",
        "description": "Create an Issue with Markdown\n\nRequired: issue type, project, and summary. Use other connectors to find IDs for issue or priority types if unknown.\nWrite the body using predefined content blocks. Check content type guidelines carefully.\nPrioritization depends on project settings. If prioritization fails, remove priority and retry.\nAssignees must exist in the system and may differ from names in other services (e.g., Slack). Verify names within Jira.\nFor errors, create a basic issue using the project key, ID, and text, then update assignee or priority incrementally.\nProvide a link for users to verify the created issue and confirm allocable attributes like assignees and priorities.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "description": "issue information to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.ICreateIssueByMarkdownInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "id and key of created issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.ICreateIssueOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "markdown",
          "createIssueByMarkdown"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issue-detail": {
      "patch": {
        "summary": "get detailed Issue Information",
        "description": "Get detailed issue information\n\nProvides more accurate and detailed information, including the title and body of the issue\n\nIt can be used to look up the issue list first, or if you already know the key or ID of the issue.\nIf you do not know the key or ID, it is recommended to use the issue inquiry connector first.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueDetailInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Detailed Issue Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetIssueDetailOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issue_detail",
          "getIssueDetail"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issues": {
      "patch": {
        "summary": "Find The Jira issues.",
        "description": "Find Jira issues\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "description": "condition of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueInputByBasicAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "paginated list of issues visible to the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetIssueOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issues",
          "getIssues"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-projects": {
      "patch": {
        "summary": "Find the Jira projects.",
        "description": "Find the Jira projects\n\nThe Jira project has a unique key and can then be used to query issues with the key.\nReturns a paginated list of projects visible to the user.\n\nIn order to inquire about any issues within the project, you must first inquire about the project and find out the key of the project.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "description": "condition of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetProjectInputByBasicAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "paginated list of projects visible to the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetProjectOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_projects",
          "getProjects"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issue-labels": {
      "patch": {
        "summary": "Find issue labels",
        "description": "Find issue labels",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueLabelInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "paginated list of labels",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetIssueLabelOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issue_labels",
          "getIssueLabels"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issue-types": {
      "patch": {
        "summary": "Find issue types",
        "description": "Find issue types\n\nIn order for the user to inquire about the issue type, the ID of the project is required.\nIf the user mentioned the key or name of the project,\nit is necessary to first inquire the project and get the correct project ID.\nThe ID of the project is a numeric character type.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueTypeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "issue types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetIssueTypeOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issue_types",
          "getIssueTypes"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issue-statuses": {
      "patch": {
        "summary": "Find issue statuses",
        "description": "Find issue statuses for searching issue",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueStatusInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "issue statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IJira.IGetIssueStatusOutput"
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issue_statuses",
          "getIssueStatus"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-issue-priorities": {
      "patch": {
        "summary": "Inquire the priority levels that can be assigned to the issue.",
        "description": "There are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nTherefore, it can be used as an enum value without requesting this API,\nand this API is already deprecated on the Jira REST API document.\nHowever, for projects that can already be specified by creating a priority level, this connector is added just in case.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssuePriorityInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "issue priorities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyPickIJira.Prioritynameid"
                  }
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_issue_priorities",
          "getIssuePriorities"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/issues/get-users-assignable": {
      "patch": {
        "summary": "Find assignable users in issue",
        "description": "Find a person within the issue who can be assigned as assignee.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetIssueAssignableInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "assignable users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyPickIJira.UseractiveaccountIddisplayName"
                  }
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "issues",
          "get_users_assignable",
          "getUsersAssignableInIssue"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/projects/get-users-assignable": {
      "patch": {
        "summary": "Find assignable users in project",
        "description": "Find a person within the project who can be assigned as assignee.",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetProjectAssignableInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "assignable users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyPickIJira.UseractiveaccountIddisplayName"
                  }
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "projects",
          "get_users_assignable",
          "getUsersAssignableInProject"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    },
    "/connector/jira/get-status-categories": {
      "patch": {
        "summary": "get status categories",
        "description": "Get status categories",
        "tags": [
          "Jira"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJira.IGetStatusCategoryInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IJira.StatusCategory"
                  }
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "connector",
          "jira",
          "get_status_categories",
          "getStatusCategories"
        ],
        "x-samchon-controller": "JiraController",
        "x-wrtn-icon": "https://ecosystem-connector.s3.ap-northeast-2.amazonaws.com/icon/fulls/JIraCloud_full.svg"
      }
    }
  },
  "components": {
    "schemas": {
      "IJira.IDeleteCommentInput": {
        "type": "object",
        "properties": {
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "commentId": {
            "type": "string",
            "title": "ID of comment to delete"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueIdOrKey",
          "commentId",
          "secretKey"
        ]
      },
      "IJira.IUpdateCommentByMarkdownInput": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring",
            "title": "body of comment"
          },
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "commentId": {
            "type": "string",
            "title": "ID of comment to update"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "body",
          "issueIdOrKey",
          "commentId",
          "secretKey"
        ]
      },
      "StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring": {
        "type": "object",
        "properties": {
          "version": {
            "const": 1,
            "title": "version"
          },
          "type": {
            "const": "doc",
            "title": "type"
          },
          "content": {
            "type": "string",
            "title": "contents of description",
            "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."
          }
        },
        "required": [
          "version",
          "type",
          "content"
        ]
      },
      "IJira.ICreateCommentOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID of comment"
          }
        },
        "required": [
          "id"
        ]
      },
      "IJira.ICreateCommentByMarkdownInput": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring.o1",
            "title": "body of comment"
          },
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "body",
          "issueIdOrKey",
          "secretKey"
        ]
      },
      "StrictOmittypedocversion1contentTopLevelBlockNodecontentcontentstring.o1": {
        "type": "object",
        "properties": {
          "version": {
            "const": 1,
            "title": "version"
          },
          "type": {
            "const": "doc",
            "title": "type"
          },
          "content": {
            "type": "string",
            "title": "contents of description",
            "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."
          }
        },
        "required": [
          "version",
          "type",
          "content"
        ]
      },
      "IJira.IGetCommentOutput": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPickCommentidcreatedauthorupdatedupdateAuthorbodyany"
            },
            "title": "comments"
          },
          "isLast": {
            "type": "boolean",
            "title": "Wheather is last page"
          },
          "total": {
            "type": "integer",
            "title": "total count"
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          }
        },
        "required": [
          "comments",
          "total"
        ]
      },
      "MyPickCommentidcreatedauthorupdatedupdateAuthorbodyany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id of comment"
          },
          "created": {
            "type": "string",
            "title": "created time of this comment"
          },
          "author": {
            "$ref": "#/components/schemas/MyPickIJira.UseractiveaccountIddisplayName",
            "title": "author of this comment"
          },
          "updated": {
            "type": "string",
            "title": "updated time of this comment"
          },
          "updateAuthor": {
            "$ref": "#/components/schemas/MyPickIJira.UseractiveaccountIddisplayName",
            "title": "who updates this comment"
          },
          "body": {
            "title": "Content of This Comments"
          }
        },
        "required": [
          "id",
          "created",
          "author",
          "updated",
          "updateAuthor",
          "body"
        ]
      },
      "MyPickIJira.UseractiveaccountIddisplayName": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "title": "Whether is user active"
          },
          "accountId": {
            "type": "string",
            "title": "id of this user account"
          },
          "displayName": {
            "type": "string",
            "title": "creator's name"
          }
        },
        "required": [
          "active",
          "accountId",
          "displayName"
        ]
      },
      "IJira.IGetCommentInput": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueIdOrKey",
          "secretKey"
        ]
      },
      "IJira.IGetTransitionOutput": {
        "type": "object",
        "properties": {
          "transitions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id of transition"
                },
                "to": {
                  "$ref": "#/components/schemas/MyPickIJira.StatusdescriptionnameidstatusCategory",
                  "title": "to",
                  "description": "StatusDetail.\nDetails of the issue status after the transition."
                }
              },
              "required": [
                "id",
                "to"
              ]
            },
            "title": "transition list of this jira issue"
          }
        },
        "required": [
          "transitions"
        ]
      },
      "MyPickIJira.StatusdescriptionnameidstatusCategory": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "title": "status description"
          },
          "name": {
            "type": "string",
            "x-wrtn-placeholder": "해야 할 일",
            "title": "status name"
          },
          "id": {
            "type": "string",
            "title": "status id"
          },
          "statusCategory": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "title": "category id"
              },
              "key": {
                "type": "string",
                "x-wrtn-placeholder": "new",
                "title": "category key"
              }
            },
            "required": [
              "id",
              "key"
            ],
            "title": "status category"
          }
        },
        "required": [
          "description",
          "name",
          "id",
          "statusCategory"
        ]
      },
      "IJira.IGetTransitionInput": {
        "type": "object",
        "properties": {
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueIdOrKey",
          "secretKey"
        ]
      },
      "IJira.IUnAssignInput": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string",
            "title": "ID of issue"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueId",
          "secretKey"
        ]
      },
      "IJira.IAssignInput": {
        "type": "object",
        "properties": {
          "asigneeId": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/issues/get-users-assignable",
                  "jmesPath": "[].{value:accountId, label:displayName}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/project/get-users-assignable",
                  "jmesPath": "[].{value:accountId, label:displayName}"
                }
              }
            ],
            "title": "accountId of the user you want to designate as the person in charge",
            "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."
          },
          "issueId": {
            "type": "string",
            "title": "ID of issue"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "asigneeId",
          "issueId",
          "secretKey"
        ]
      },
      "IJira.IUpdateStatusInput": {
        "type": "object",
        "properties": {
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "transitionId": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/issue-get-transitions",
              "jmesPath": "transitions[].{value:id, label: to.name}"
            },
            "title": "ID of transition"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueIdOrKey",
          "transitionId",
          "secretKey"
        ]
      },
      "IJira.IUpdateIssueInput": {
        "type": "object",
        "properties": {
          "fields": {
            "$ref": "#/components/schemas/MyPartial__type",
            "title": "fields to update"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "fields",
          "secretKey"
        ]
      },
      "MyPartial__type": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "object",
            "properties": {
              "id": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/issues/get-users-assignable",
                      "jmesPath": "[].{value:accountId, label:displayName}"
                    }
                  },
                  {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/project/get-users-assignable",
                      "jmesPath": "[].{value:accountId, label:displayName}"
                    }
                  }
                ],
                "title": "accountId of the user you want to designate as the person in charge",
                "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."
              }
            },
            "required": [
              "id"
            ],
            "title": "Specify a representative at the same time as you create"
          },
          "description": {
            "type": "object",
            "properties": {
              "type": {
                "const": "doc",
                "title": "type of description\n\nAllow doc type only Now"
              },
              "version": {
                "const": 1,
                "title": "version"
              },
              "content": {
                "type": "string",
                "title": "contents of description",
                "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."
              }
            },
            "required": [
              "type",
              "version",
              "content"
            ],
            "title": "description\n\nThe content of the Jira issue consists of a combination of various contents."
          },
          "duedate": {
            "type": "string",
            "format": "date",
            "title": "due date",
            "description": "date format type.\nIndicates the schedule you want to be closed.Of course, it will be good to create a date or today."
          },
          "issuetype": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)$",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issue-types",
                  "jmesPath": "issuetypes[].{value:id, label:name}"
                },
                "title": "id of issue type",
                "description": "The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."
              }
            },
            "required": [
              "id"
            ],
            "title": "issuetype"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "labels",
            "description": "You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."
          },
          "parent": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                },
                "title": "key of parent issue",
                "description": "Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."
              }
            },
            "required": [
              "key"
            ],
            "title": "parent of this issue"
          },
          "priority": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issue-priorities",
                  "jmesPath": "[].{value:id, label:name}"
                },
                "title": "id of proirity",
                "description": "You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."
              }
            },
            "required": [
              "id"
            ],
            "title": "priority"
          },
          "project": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "oneOf": [
                      {
                        "type": "number",
                        "x-wrtn-prerequisite": {
                          "method": "post",
                          "path": "/connector/jira/get-projects",
                          "jmesPath": "[].{value:id, label:name}"
                        }
                      },
                      {
                        "type": "string",
                        "pattern": "^(0|[1-9]\\d*)$",
                        "x-wrtn-prerequisite": {
                          "method": "post",
                          "path": "/connector/jira/get-projects",
                          "jmesPath": "[].{value:id, label:name}"
                        }
                      }
                    ],
                    "title": "id of project"
                  }
                },
                "required": [
                  "id"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/get-project",
                      "jmesPath": "[].{value:key, label:name}"
                    },
                    "title": "key of project"
                  }
                },
                "required": [
                  "key"
                ]
              }
            ],
            "title": "project",
            "description": "Issues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project."
          },
          "summary": {
            "type": "string",
            "title": "summary",
            "description": "Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."
          }
        },
        "required": []
      },
      "IJira.ICreateIssueOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID of the issue that was created just now"
          },
          "key": {
            "type": "string",
            "title": "Key of the issue that was created just now"
          }
        },
        "required": [
          "id",
          "key"
        ],
        "title": "output of creation of issue"
      },
      "IJira.ICreateIssueByMarkdownInput": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "properties": {
              "assignee": {
                "type": "object",
                "properties": {
                  "id": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "x-wrtn-prerequisite": {
                          "method": "post",
                          "path": "/connector/jira/issues/get-users-assignable",
                          "jmesPath": "[].{value:accountId, label:displayName}"
                        }
                      },
                      {
                        "type": "string",
                        "x-wrtn-prerequisite": {
                          "method": "post",
                          "path": "/connector/jira/project/get-users-assignable",
                          "jmesPath": "[].{value:accountId, label:displayName}"
                        }
                      }
                    ],
                    "title": "accountId of the user you want to designate as the person in charge",
                    "description": "If you want to designate a person in charge, you need that user's ID. Therefore, you need to look up the user first. There are connectors that look up who can be assigned to a project or issue. You can find the ID of the person in charge by choosing what you want.\nThe person in charge is inevitably one of Jira's users."
                  }
                },
                "required": [
                  "id"
                ],
                "title": "Specify a representative at the same time as you create",
                "description": "The person in charge who wants to register must be a registered user in Jira.\nIf the person in charge does not exist, an error will occur.\nYou should not think that the ID of Slack or external service will be the same in Jira.\nIt is a good idea to check the person in charge because the user's ID may be different for each service."
              },
              "description": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "doc",
                    "title": "type of description\n\nAllow doc type only Now"
                  },
                  "version": {
                    "const": 1,
                    "title": "version\n\nversion only can be number 1"
                  },
                  "content": {
                    "type": "string",
                    "title": "contents of description",
                    "description": "You must use markdown format string.\n\nIt is recommended to contain as much detail as possible on the issue raised by the user,\nso that the next person who reads this issue can see the summary and description of this issue to resolve the issue."
                  }
                },
                "required": [
                  "type",
                  "version",
                  "content"
                ],
                "title": "description\n\nThe content of the Jira issue consists of a combination of various contents."
              },
              "issuetype": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "^(0|[1-9]\\d*)$",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/get-issue-types",
                      "jmesPath": "issuetypes[].{value:id, label:name}"
                    },
                    "title": "id of issue type",
                    "description": "The ID of the issue.\nSometimes the user can say the name of the issue type,\nsuch as 'bug' or 'story', but you cannot specify the issue type with the name of the issue type.\nBecause there can be types with the same name.\nTherefore, you must check the issue type with a different connector to verify that it is an issue type that can be used in the project.\n\nHowever, if you handed over the number string type from the beginning, it could be the ID of the issue type."
                  }
                },
                "required": [
                  "id"
                ],
                "title": "issuetype",
                "description": "The issue type must be set, but the issue type that can be assigned to the project is set.\nUse the Issue Type Inquiry connector to determine which issue types can be set up."
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "labels",
                "description": "You can add labels to make it easier to read issues.\nLabels are simply strings, which can be added immediately without having to look up using other connectors."
              },
              "parent": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/get-issues",
                      "jmesPath": "issues[].{value:key, label:key}"
                    },
                    "title": "key of parent issue",
                    "description": "Sometimes an issue can be a sub-issue of another issue.\nIn this case, you need to specify the key for the parent issue.\nIf you want to know the key, use an issue list query or another connector to look up the details of the issue."
                  }
                },
                "required": [
                  "key"
                ],
                "title": "parent of this issue"
              },
              "priority": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
                    "x-wrtn-prerequisite": {
                      "method": "post",
                      "path": "/connector/jira/get-issue-priorities",
                      "jmesPath": "[].{value:id, label:name}"
                    },
                    "title": "id of proirity",
                    "description": "You can prioritize issues.\nUsers can also prioritize issues in natural languages such as Low, Medium, High, and so on,\nbut when creating issues, ID values for these priorities are required.\nTherefore, you should first call a connector that looks up what priorities are available for the project and issue."
                  }
                },
                "required": [
                  "id"
                ],
                "title": "priority",
                "description": "The project manager may have prohibited or not set priorities for each issue in the project.\nEven in the case of a project you just created,\nthe priority assignment for each issue may be omitted depending on the user.\nIn this case, priority assignment is not possible through API,\nso you should check the project settings.\n\nIf there is an error when creating it,\nit is likely to be a matter of priority,\nso please create it without priorities.\nAlso, it takes a long time to check the settings for each user on a daily basis,\nso make sure that you don't tell the user about the priority assignment,\nbut present it as an option."
              },
              "project": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "oneOf": [
                          {
                            "type": "number",
                            "x-wrtn-prerequisite": {
                              "method": "post",
                              "path": "/connector/jira/get-projects",
                              "jmesPath": "[].{value:id, label:name}"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^(0|[1-9]\\d*)$",
                            "x-wrtn-prerequisite": {
                              "method": "post",
                              "path": "/connector/jira/get-projects",
                              "jmesPath": "[].{value:id, label:name}"
                            }
                          }
                        ],
                        "title": "id of project"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-wrtn-prerequisite": {
                          "method": "post",
                          "path": "/connector/jira/get-project",
                          "jmesPath": "[].{value:key, label:name}"
                        },
                        "title": "key of project"
                      }
                    },
                    "required": [
                      "key"
                    ]
                  }
                ],
                "title": "project",
                "description": "Issues must inevitably belong to the project.\nAt this point, the project can be specified by receiving an ID or key.\nIf you do not know the key or ID of the project, you should first look up the project.\n\nproject's id is number or number string type and project's key type is only string."
              },
              "summary": {
                "type": "string",
                "title": "summary",
                "description": "Meaning the title of the issue.\nMake sure you write a sentence that best represents this issue."
              }
            },
            "required": [
              "issuetype",
              "project",
              "summary"
            ],
            "title": "fields\n\nIndicates the fields that you need to fill in when you want to create an issue."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "fields",
          "secretKey"
        ]
      },
      "IJira.IGetIssueDetailOutput": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "labels attached to the issue"
          },
          "fields": {
            "$ref": "#/components/schemas/StrictOmitDetailedIssueFielddescriptioncommentcommentmaxResultsnumbertotalnumberstartAtnumbercommentsanydescriptionany",
            "title": "Details of the issue"
          },
          "id": {
            "type": "string",
            "title": "The ID of the issue"
          },
          "key": {
            "type": "string",
            "title": "The key of the issue"
          }
        },
        "required": [
          "fields",
          "id",
          "key"
        ]
      },
      "StrictOmitDetailedIssueFielddescriptioncommentcommentmaxResultsnumbertotalnumberstartAtnumbercommentsanydescriptionany": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string",
            "title": "summary"
          },
          "status": {
            "$ref": "#/components/schemas/MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName",
            "title": "status"
          },
          "assignee": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "assignee"
          },
          "issuetype": {
            "$ref": "#/components/schemas/MyPickIJira.IssueTypenameid",
            "title": "issue type"
          },
          "reporter": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "reporter"
          },
          "priority": {
            "$ref": "#/components/schemas/MyPickIJira.Prioritynameid",
            "title": "priority"
          },
          "parent": {
            "$ref": "#/components/schemas/IJira.Parent",
            "title": "parent of this issue"
          },
          "statuscategorychangedate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "statuscategorychangedate",
            "description": "The date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed."
          },
          "creator": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "creator"
          },
          "comment": {
            "type": "object",
            "properties": {
              "maxResults": {
                "type": "number",
                "title": "Number of comments viewed at one time"
              },
              "total": {
                "type": "number",
                "title": "Total count of comments"
              },
              "startAt": {
                "type": "number",
                "title": "page offset",
                "description": "The index of the first item to return in a page of results (page offset)."
              },
              "comments": {
                "type": "array",
                "items": {},
                "title": "list of comments"
              }
            },
            "required": [
              "maxResults",
              "total",
              "startAt",
              "comments"
            ],
            "title": "Comment Infomation and Pagination Metadata"
          },
          "description": {
            "title": "Description of Issue"
          }
        },
        "required": [
          "status",
          "priority",
          "comment",
          "description"
        ]
      },
      "MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "title": "status description"
          },
          "name": {
            "type": "string",
            "x-wrtn-placeholder": "해야 할 일",
            "title": "status name"
          },
          "id": {
            "type": "string",
            "title": "status id"
          },
          "statusCategory": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "title": "category id"
              },
              "key": {
                "type": "string",
                "x-wrtn-placeholder": "new",
                "title": "category key"
              }
            },
            "required": [
              "id",
              "key"
            ],
            "title": "status category"
          },
          "untranslatedName": {
            "type": "string",
            "title": "untranslated name"
          }
        },
        "required": [
          "description",
          "name",
          "id",
          "statusCategory"
        ]
      },
      "IJira.User": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "title": "id of this user account"
          },
          "displayName": {
            "type": "string",
            "title": "creator's name"
          },
          "active": {
            "type": "boolean",
            "title": "Whether is user active"
          }
        },
        "required": [
          "accountId",
          "displayName",
          "active"
        ]
      },
      "MyPickIJira.IssueTypenameid": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-wrtn-placeholder": "스토리",
            "title": "issue type name\n\nIt may be name, bug, story or etc."
          },
          "id": {
            "type": "string",
            "pattern": "^(0|[1-9]\\d*)$",
            "title": "issuetype's id"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "MyPickIJira.Prioritynameid": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "priority name\n\nIt may be Low, Medium, High."
          },
          "id": {
            "type": "string",
            "pattern": "([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)",
            "title": "id"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "IJira.Parent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID of the parent issue"
          },
          "key": {
            "type": "string",
            "title": "The key of the parent issue"
          },
          "fields": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string",
                "title": "summary"
              }
            },
            "required": [],
            "title": "fields"
          }
        },
        "required": [
          "id",
          "key",
          "fields"
        ]
      },
      "IJira.IGetIssueDetailInput": {
        "type": "object",
        "properties": {
          "issueIdOrKey": {
            "oneOf": [
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:id, label:key}"
                }
              },
              {
                "type": "string",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connector/jira/get-issues",
                  "jmesPath": "issues[].{value:key, label:key}"
                }
              }
            ],
            "title": "issue id or key",
            "description": "This connector doesn't matter the key or ID of the issue.\nIf you hand over one of them, you can use it to look up."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "issueIdOrKey",
          "secretKey"
        ]
      },
      "IJira.IGetIssueOutput": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/linkstringFormatiriMyPickIssuefieldskeyid"
            },
            "title": "Jira issue list"
          },
          "isLast": {
            "type": "boolean",
            "title": "Wheather is last page"
          },
          "total": {
            "type": "integer",
            "title": "total count"
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          }
        },
        "required": [
          "issues",
          "total"
        ]
      },
      "linkstringFormatiriMyPickIssuefieldskeyid": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "format": "iri",
            "title": "Link of issue",
            "description": "User can access by using this link"
          },
          "fields": {
            "$ref": "#/components/schemas/IJira.IssueField",
            "title": "fields"
          },
          "key": {
            "type": "string",
            "title": "The key of the issue"
          },
          "id": {
            "type": "string",
            "title": "The ID of the issue"
          }
        },
        "required": [
          "link",
          "fields",
          "key",
          "id"
        ]
      },
      "IJira.IssueField": {
        "type": "object",
        "properties": {
          "statuscategorychangedate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "statuscategorychangedate",
            "description": "The date and time when the status category of the issue was last changed.\n\nThis property indicates the most recent timestamp when the issue transitioned\nbetween status categories (e.g., from \"To Do\" to \"In Progress\" or from\n\"In Progress\" to \"Done\"). Status categories in Jira typically include:\n- \"To Do\": The issue is pending and not yet started.\n- \"In Progress\": The issue is currently being worked on.\n- \"Done\": The issue has been completed."
          },
          "reporter": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "reporter"
          },
          "creator": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "creator"
          },
          "assignee": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IJira.User"
              }
            ],
            "title": "assignee"
          },
          "summary": {
            "type": "string",
            "title": "summary"
          },
          "issuetype": {
            "$ref": "#/components/schemas/MyPickIJira.IssueTypenameid",
            "title": "issue type"
          },
          "status": {
            "$ref": "#/components/schemas/MyPickIJira.StatusdescriptionnameidstatusCategoryuntranslatedName",
            "title": "status"
          },
          "priority": {
            "$ref": "#/components/schemas/MyPickIJira.Prioritynameid",
            "title": "priority"
          },
          "parent": {
            "$ref": "#/components/schemas/IJira.Parent",
            "title": "parent of this issue"
          }
        },
        "required": [
          "status",
          "priority"
        ]
      },
      "IJira.IGetIssueInputByBasicAuth": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-statuses",
              "jmesPath": "[].{value:id, label:untranslatedName}"
            },
            "title": "status"
          },
          "keyword": {
            "type": "string",
            "title": "search keyword\n\nIt is a keyword you want to find in the title or explanation of an issue, which is useful when searching."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "label titles\n\nComplex searches are possible using various labels."
          },
          "assignee": {
            "type": "string",
            "title": "name of assignee"
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "project_key": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-projects",
              "jmesPath": "values[].{value:key, label:name}"
            },
            "title": "key of project"
          },
          "issuetype": {
            "type": "string",
            "pattern": "^(0|[1-9]\\d*)$",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-issue-types",
              "jmesPath": "[].{label:untranslatedName, value:untranslatedName}"
            },
            "title": "issue type"
          },
          "reporter": {
            "type": "string",
            "title": "name of reporter"
          },
          "created_start_date": {
            "type": "string",
            "format": "date",
            "title": "Search for issues created after this date"
          },
          "created_end_date": {
            "type": "string",
            "format": "date",
            "title": "Search for issues created after this date"
          },
          "priority": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-issue-priorities",
              "jmesPath": "[].{value:name, label:name}"
            },
            "title": "priority name",
            "description": "If you want to search based on priority, deliver the name of the priority.\nThere are five priorities: 'Highest', 'High', 'Medium', 'Low', and 'Lowest'.\nAlthough it is a Deprecated feature, you can still query the priority level that can be assigned to an issue with the API.\nIt also exists as our connector, so use it if necessary."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "project_key",
          "secretKey"
        ]
      },
      "IJira.IGetProjectOutput": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJira.Project"
            },
            "title": "Jira project list"
          },
          "isLast": {
            "type": "boolean",
            "title": "Wheather is last page"
          },
          "total": {
            "type": "integer",
            "title": "total count"
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          }
        },
        "required": [
          "values",
          "total"
        ],
        "title": "output of getting Jira projects"
      },
      "IJira.Project": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)$"
              }
            ],
            "title": "id"
          },
          "key": {
            "type": "string",
            "title": "key of project\n\nKey properties used to query the inside of a project."
          },
          "name": {
            "type": "string",
            "title": "name of this project"
          },
          "projectCategory": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "title": "description"
              },
              "id": {
                "type": "string",
                "title": "id"
              },
              "name": {
                "type": "string",
                "title": "name"
              }
            },
            "required": [
              "description",
              "id",
              "name"
            ],
            "title": "project category info"
          }
        },
        "required": [
          "id",
          "key",
          "name"
        ]
      },
      "IJira.IGetProjectInputByBasicAuth": {
        "type": "object",
        "properties": {
          "orderBy": {
            "oneOf": [
              {
                "const": "issueCount"
              },
              {
                "const": "lastIssueUpdatedTime"
              },
              {
                "const": "name"
              }
            ],
            "title": "order by",
            "description": "Order the results by a field.\n\n- issueCount : Sorts by the total number of issues in each project.\n- lastIssueUpdatedTime : Sorts by the last issue update time.\n- name : Sorts by project name."
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IJira.IGetIssueLabelOutput": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "label list"
          },
          "isLast": {
            "type": "boolean",
            "title": "Wheather is last page"
          },
          "total": {
            "type": "integer",
            "title": "total count"
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          }
        },
        "required": [
          "values",
          "total"
        ]
      },
      "IJira.IGetIssueLabelInput": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IJira.IGetIssueTypeOutput": {
        "type": "object",
        "properties": {
          "issuetypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJira.IssueType"
            },
            "title": "issue types in this projects"
          }
        },
        "required": [
          "issuetypes"
        ]
      },
      "IJira.IssueType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^(0|[1-9]\\d*)$",
            "title": "issuetype's id"
          },
          "name": {
            "type": "string",
            "x-wrtn-placeholder": "스토리",
            "title": "issue type name\n\nIt may be name, bug, story or etc."
          },
          "description": {
            "type": "string",
            "title": "description"
          },
          "subtask": {
            "type": "boolean",
            "title": "whether is for substask issue type"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "subtask"
        ]
      },
      "IJira.IGetIssueTypeInput": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "number",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connectors/jira/get-projects",
                  "jmesPath": "values[].{value:id,label:name}"
                }
              },
              {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)$",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connectors/jira/get-projects",
                  "jmesPath": "values[].{value:id,label:name}"
                }
              }
            ],
            "title": "id of project"
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "projectId",
          "secretKey"
        ]
      },
      "IJira.IGetIssueStatusOutput": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPickStatusnameiduntranslatedNameprojectIdstringundefined"
            },
            "title": "statuses"
          }
        },
        "required": [
          "statuses"
        ]
      },
      "MyPickStatusnameiduntranslatedNameprojectIdstringundefined": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-wrtn-placeholder": "해야 할 일",
            "title": "status name"
          },
          "id": {
            "type": "string",
            "title": "status id"
          },
          "untranslatedName": {
            "type": "string",
            "title": "untranslated name"
          },
          "projectId": {
            "type": "string",
            "title": "projectId"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "IJira.IGetIssueStatusInput": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "number",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connectors/jira/get-projects",
                  "jmesPath": "values[].{value:id,label:name}"
                }
              },
              {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)$",
                "x-wrtn-prerequisite": {
                  "method": "post",
                  "path": "/connectors/jira/get-projects",
                  "jmesPath": "values[].{value:id,label:name}"
                }
              }
            ],
            "title": "id of project",
            "description": "If the status does not have the project ID,\nit means this status is beyond the scope of the project and can be selected by the entire team.\nIt can also be the default status created from the beginning by Jira."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IJira.IGetIssuePriorityInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "IJira.IGetIssueAssignableInput": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "project": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-projects",
              "jmesPath": "values[].{value:key, label:name}"
            },
            "title": "key of project\n\nIt refers to the key of the project to search for the user to be assigned."
          },
          "issueKey": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "connectors/jira/get-issues",
              "jmesPath": "issues[].{value:key, label:key}"
            },
            "title": "key of issue\n\nIt refers to the key of the issue to search for the user to be assigned."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "project",
          "issueKey",
          "secretKey"
        ]
      },
      "IJira.IGetProjectAssignableInput": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "default": 50,
            "title": "max results",
            "description": "The maximum number of items to return per page.\nIn the issue, it seems that up to 100 can be viewed at a time."
          },
          "startAt": {
            "type": "integer",
            "default": 0,
            "title": "page offset",
            "description": "The index of the first item to return in a page of results (page offset)."
          },
          "project_key": {
            "type": "string",
            "x-wrtn-prerequisite": {
              "method": "post",
              "path": "/connector/jira/get-projects",
              "jmesPath": "values[].{value:key, label:name}"
            },
            "title": "key of project\n\nIt refers to the key of the project to search for the user to be assigned."
          },
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "project_key",
          "secretKey"
        ]
      },
      "IJira.StatusCategory": {
        "type": "object",
        "properties": {
          "colorName": {
            "type": "string",
            "title": "name of color"
          },
          "id": {
            "type": "number",
            "title": "The ID of status category"
          },
          "key": {
            "type": "string",
            "title": "The key of status category"
          },
          "name": {
            "type": "string",
            "title": "name of the status category"
          }
        },
        "required": [
          "colorName",
          "id",
          "key",
          "name"
        ]
      },
      "IJira.IGetStatusCategoryInput": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string",
            "x-wrtn-secret-key": "atlassian",
            "title": "Select authentication information",
            "description": "secret key."
          }
        },
        "required": [
          "secretKey"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Jira"
    }
  ],
  "x-samchon-emended": true
}