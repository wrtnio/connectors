{"model":"3.0","options":{"constraint":true,"recursive":3,"maxLength":null,"keyword":false},"functions":[{"method":"patch","path":"/connector/github/users/get-received-events","name":"connector_github_users_get_received_events_getReceivedEvents","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events received by the authenticated user\n\nThese are events that you've received by watching repositories and following users.\nIf you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.\nIn this case, the \"received\" event includes the repository that the user is interested in or the activity of the user who is following,\nfor example, if the user has pushed to the repository, or if an issue has been created from the repository that the user is interested in.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-pinned-repositories","name":"users_get_pinned_repositories_getUserPinnedRepositories","parameters":[{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"array","items":{"type":"string"}},"description":"Inquire the user's pinned repository names.\n\nInquire the user's pinned repositories\n\nInquire up to 6 repositories where the user has pinned.\nHere, only the name of the repository is searched, so if necessary, find detailed information about the repository by pageing the user's repository list.\nPlacing a pin in a repository is most likely a repository that users are most confident in.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-repositories","name":"connector_github_users_get_repositories_getUserRepositories","parameters":[{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page","description":"The number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"]},"direction":{"type":"string","enum":["desc","asc"]},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-users","jmesPath":"items[].{value:login, label:login}"},"title":"username\n\nThis refers to the nickname of the user who will look up the repository."},"per_page":{"type":"integer","default":10,"maximum":10,"title":"per_page","description":"The number of results per page (max 10).\n\nThe response capacity may be very large because it even comes out with the reedy of the repository.\nTherefore, it is recommended to check by cutting up to 10 pieces."},"sort":{"type":"string","enum":["created","updated","pushed","full_name"]},"direction":{"type":"string","enum":["desc","asc"]},"since":{"type":"string","format":"date-time","title":"since\nOnly show repositories updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"before":{"type":"string","format":"date-time","title":"before\nOnly show repositories updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true},"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["readme","id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"],"additionalProperties":false},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the user's repositories\n\nSince it contains only the simplest information of the repository here, there is no way to know the lead me of the repository or detailed information.\nIt is recommended to use additional connectors to explore because other connectors have the ability to read leads or internal files in the repository.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/users/get-events","name":"organizations_users_get_events_getUserOrganizationEvents","parameters":[{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Lists organization events for the authenticated user\n\nThis API endpoint retrieves events that have occurred within the organizations\nthe authenticated user is a member of. It includes activities such as issues,\npull requests, commits, and other actions taken within the organization's repositories.\n\nThe events cover all repositories within the organization that the user has access to,\nmaking it useful for tracking the organization's activity or monitoring the progress\nof projects that the user is involved in within the team.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-issues","name":"connector_github_organizations_get_issues_getOrganizationIssues","parameters":[{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["desc","asc"]},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"]},"state":{"type":"string","enum":["open","closed","all"]},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"]},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"organization":{"type":"string","title":"organization\nThe organization name. The name is not case sensitive."},"direction":{"type":"string","enum":["desc","asc"]},"filter":{"type":"string","enum":["assigned","created","mentioned","subscribed","repos","all"]},"state":{"type":"string","enum":["open","closed","all"]},"labels":{"type":"string","title":"label\n\nA list of comma separated label names. Example: `bug,ui,@high`"},"sort":{"type":"string","enum":["created","updated","comments"]},"owned":{"type":"boolean","title":"owned"},"pulls":{"type":"boolean","title":"pulls"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"title":"Issues"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organization issues assigned to the authenticated user\n\nSimilar to the 'get-issues' connector, it is suitable for inquiring only about issues assigned within a specific organization.\nNaturally, the user will have to be a member of that organization.\n\nHere, the result value can be inquired together with PR because PR on GitHub is essentially an issue-like object.\nIf you want to see the issue separately, you should use a connector that looks up the issue in the repo, not the organization.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-repositories","name":"get_repositories_getOrganizationRepositories","parameters":[{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers"],"additionalProperties":false},"title":"repositories"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organization repositories\n\nThis endpoint allows you to list all repositories that belong to a specified organization on GitHub.\nIt's useful for viewing all the repositories under an organization’s account, including both public and private repositories, depending on your access level.","tags":["Github"]},{"method":"patch","path":"/connector/github/organizations/get-events","name":"connector_github_organizations_get_events_getOrganizationEvents","parameters":[{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["organization","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"organization":{"type":"string","title":"organization's name\n\nYou can also change it to your nickname."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["organization"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public organization events\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\n\nThis API endpoint retrieves a stream of public events that have occurred\nwithin a specified organization. These events include activities such as\nrepository creation, issues, pull requests, and other actions taken by members\nof the organization across all its public repositories.\n\nThis is useful for monitoring the public activity within an organization,\nproviding insights into how the organization is managing its projects,\nthe work being done by its members, and the overall public engagement with\nits repositories.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-collaborators","name":"connector_github_repos_get_collaborators_getCollaborators","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"affiliation":{"type":"string","enum":["outside","direct","all"]},"permission":{"type":"string","enum":["pull","triage","push","maintain","admin"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"affiliation":{"type":"string","enum":["outside","direct","all"]},"permission":{"type":"string","enum":["pull","triage","push","maintain","admin"]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List repository collaborators\n\nFor organization-owned repositories, the list of collaborators includes outside collaborators,\norganization members that are direct collaborators, organization members with access through team memberships,\norganization members with access through default organization permissions, and organization owners.\nOrganization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.\nTeam members will include the members of child teams.\n\nYou can refer to it before specifying a person in charge of the issue or a reviewer for PR.","tags":["Github"]},{"method":"post","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_createFileContents","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","path","message","content","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false}},"required":["owner","repo","path","message","content"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"content":{"type":"object","properties":{"name":{"type":"string","title":"file or folder name"},"path":{"type":"string","title":"file or folder path"},"sha":{"type":"string","title":"sha"},"size":{"type":"number","title":"size"}},"required":["name","path","sha","size"],"title":"content","additionalProperties":false},"commit":{"type":"object","properties":{"sha":{"type":"string","title":"sha"}},"required":["sha"],"title":"commit","additionalProperties":false}},"required":["content","commit"],"additionalProperties":false},"description":"Create File content and commit.\n\nCreate file content in github repository\n\nThis connector handles file creation only. Use the modification API for existing files.\nCreating a file is equivalent to a single commit, with commits required for changes like uploads or deletions.\nWhen adding a file, confirm the target branch. Avoid default branches unless specified.\nUsers value branches reflecting their work; always confirm file content before adding or modifying.\nFor requests involving a specific PR or branch, use this connector.\nFile content input is encoded to base64 within the connector. Do not pre-encode content manually.","tags":["Github"]},{"method":"put","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_updateFileContents","parameters":[{"type":"object","properties":{"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["sha","owner","repo","path","message","content","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"content":{"type":"string","title":"the new file content","description":"Meaning of the file is text and text.\nIf you want to create code content, you should write code content.\nSince it encodes with base64 internally, we need to deliver text here before encoding."},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false}},"required":["sha","owner","repo","path","message","content"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"content":{"type":"object","properties":{"name":{"type":"string","title":"file or folder name"},"path":{"type":"string","title":"file or folder path"},"sha":{"type":"string","title":"sha"},"size":{"type":"number","title":"size"}},"required":["name","path","sha","size"],"title":"content","additionalProperties":false},"commit":{"type":"object","properties":{"sha":{"type":"string","title":"sha"}},"required":["sha"],"title":"commit","additionalProperties":false}},"required":["content","commit"],"additionalProperties":false},"description":"Update File content and commit.\n\nUpdate file content in github repository\n\nUpdating a file creates a single commit. Commits are hashes for saving changes like uploads, modifications, or deletions.\nEnsure the latest sha value is used to avoid conflicts. Check sha via API or from recently created files.\nModifying a file overwrites it, not appends to it. Verify existing code and make partial changes if needed.\nConfirm content with the user before adding or modifying files.\nFor specific PRs or branches, use this connector. Check commit conventions and commit-list for proper messaging.\nFile content is automatically encoded to base64 by the connector; do not pre-encode manually.","tags":["Github"]},{"method":"delete","path":"/connector/github/repos/commits/contents","name":"connector_github_repos_commits_contents_deleteFileContents","parameters":[{"type":"object","properties":{"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"}},"required":["message","repo","secretKey","path","owner","sha"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"message":{"type":"string","title":"commit message\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-contents","jmesPath":"[].{value:sha, label:path} || {value:sha, label:path}"},"title":"sha of file content","description":"As the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created."},"author":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The author of the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: The committer or the authenticated user if you omit committer.","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"The name of the author or committer of the commit"},"email":{"type":"string","title":"The email of the author or committer of the commit"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"The person that committed the file","description":"If you don't put anything in, your own information will be injected, so you can leave the value alone.\nSince the user's email cannot necessarily be guaranteed to be the same as Github's email, it is advantageous not to get confirmation from the user or put it in.\n\nDefault: the authenticated user.","additionalProperties":false},"branch":{"type":"string","title":"branch name\n\nThe branch name. Default: the repository’s default branch"}},"required":["message","repo","path","owner","sha"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{},"description":"Delete file content and commit.\n\nDelete file content in github repository\n\nTo delete file content is the same as creating a single commit.\nCommit is a hash that must be created in github to save changes, such as uploading, modifying, deleting, and so on.\n\nAs the sha value of the file to be modified, a conflict may occur if it is not the latest sha value among the sha values of the file.\nIt's safe when you look up a list of files through API to check sha and put in a value, or want to re-modify the sha value of a file you just created.\n\nIf the user directly asks you to add, modify, or delete a file for a specific PR or specific branch, this connector should be considered.\nMany repositories are working on commit conventions. Before committing, it's a good idea to look up the commit-list to see how you leave the commit message.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-folder-structures","name":"get_folder_structures_getRepositoryFolderStructures","parameters":[{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name","description":"The path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."}},"required":["repo","secretKey","owner"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"path":{"type":"string","default":"","title":"folder name","description":"The path delivered is treated like a Root folder and continues the navigation from this folder.\nBrowse by this folder, and it must be a folder, not a file.\nIf omitted, start the circuit based on the top Root folder."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."}},"required":["repo","owner"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"},"children":{"type":"array","items":{},"title":"children","description":"For folders, you may have other files or folders inside.\nThis should also be a folder or file type object,\nbut here, we specify it as any type to prevent it because it can be recursively infinitely large."}},"required":["type","size","name","path","sha","children"],"additionalProperties":false},{"type":"object","properties":{"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"name":{"type":"string","title":"name of this file"},"sha":{"type":"string","title":"sha"},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["path","name","sha","type","size","url"],"additionalProperties":false}]}},"description":"Review Repository Folder Structure\n\nIt allows you to know the overall folder structure by traversing files in the repository.\nThis feature is intended to navigate like a DFS based on folders.\nIf this function is so vast that you cannot see the entire folder, you can pass the `path` again to inquire.\nThe `path` delivered is treated like a Root folder and continues the navigation from this folder.\nThis feature is designed to navigate to the inside two more times, up to steps 0, 1 at a time, based on the root folder.\n\nIf you want to know the details of the file, it is recommended to use the get-contents connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-contents/bulk","name":"connector_github_repos_get_contents_bulk_getBulkFileContents","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"paths":{"type":"array","items":{"type":"string"},"title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"array","items":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"],"additionalProperties":false},{"type":"object","properties":{"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"name":{"type":"string","title":"name of this file"},"sha":{"type":"string","title":"sha"},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["path","name","sha","type","size","url"],"additionalProperties":false}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["null"],"title":"type"},"size":{"type":"number","enum":[0],"title":"size"},"message":{"type":"string","enum":["No files exist corresponding to the path."],"title":"message"}},"required":["type","size","message"],"additionalProperties":false}]}},"description":"Look up repository files(bulk)\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\nYou can pass multiple file paths to view multiple files at the same time.\nThere is no limit to the number of files.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-contents","name":"connector_github_repos_get_contents_getFileContents","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"path":{"type":"string","title":"path parameters","description":"It refers to the path of the file, and is the path of the file including folders and extensions.\nIf you want to make index.ts in src, you need to add 'src/index.ts'."},"branch":{"type":"string","title":"branch name"}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"oneOf":[{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["dir"],"title":"type"},"size":{"type":"number","enum":[0],"title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this folder"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"sha":{"type":"string","title":"sha"}},"required":["type","size","name","path","sha"],"additionalProperties":false},{"type":"object","properties":{"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"name":{"type":"string","title":"name of this file"},"sha":{"type":"string","title":"sha"},"type":{"type":"string","enum":["file"],"title":"type"},"size":{"type":"number","title":"Indicates the file size in bytes"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["path","name","sha","type","size","url"],"additionalProperties":false}]}},{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["null"],"title":"type"},"size":{"type":"number","enum":[0],"title":"size"},"message":{"type":"string","enum":["No files exist corresponding to the path."],"title":"message"}},"required":["type","size","message"],"additionalProperties":false}]},"description":"Look up repository files\n\nIf the file you want to inquire is a folder, internal files are provided in an array,\nand if it is a file, it inquires about the encoding method of the file and the body content of the file.\nSince there may be countless files and folders in the github repository, there may be many files that exceed the rate limit.\nIn this case, you can try to solve this problem by sequentially finding the folders one by one using the corresponding connector.\n\nThis is suitable for viewing files on specific branches, but if the user is for the purpose of viewing details of code reviews or PR, it is recommended to use a different connector.\nThere are connectors that view the list of files changed in PR, or see the changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-readme","name":"connector_github_repos_get_readme_getReadmeFile","parameters":[{"type":"object","properties":{"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."}},"required":["repo","secretKey","owner"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author.\n\nIf it is an organization's repository, it can also be the name of the organization."}},"required":["repo","owner"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true},"description":"Read the README file in the repository\n\nREADME is one of the initial settings of the project and usually records a description of this repository,\nso it's useful if you want to see a rough description of the repository.","tags":["Github"]},{"method":"patch","path":"/connector/github/repos/get-events","name":"connector_github_repos_get_events_getRepoEvents","parameters":[{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["repo","username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["repo","username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events for the authenticated user\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nYou can check all events surrounding the repository, such as who inquired and who forked.\nIt is used in conjunction with a connector that inquires the activity details and is suitable for checking how active the repository is.","tags":["Github"]},{"method":"patch","path":"/connector/github/networks/get-events","name":"connector_github_networks_get_events_getNetworkRepoEvents","parameters":[{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["repo","username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"repo":{"type":"string","title":"The name of the repository"},"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["repo","username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public events for a network of repositories.\n\nFetches events across all forks of a specified repository.\n\nThis API endpoint provides a stream of events that occur in any fork\nof the specified repository. It includes actions such as commits,\npull requests, issues, and other activity happening in the forked\nrepositories.\n\nUse this endpoint when you need to monitor the activity not just\nin the original repository, but also in all of its forks. This can\nbe particularly useful for understanding the broader impact or\nactivity surrounding a popular project that has been forked multiple\ntimes.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-events","name":"connector_github_users_get_events_getUserEvents","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List events for the authenticated user\n\nThis API endpoint retrieves a stream of events related to the authenticated user,\nincluding activities such as issues, pull requests, commits, and repository actions\nthat the user has participated in or been mentioned in. The events reflect the user's\ninteractions across all repositories they have access to, both public and private (if\nthe user has appropriate permissions).\n\nThis is useful for tracking a user's activity on GitHub, allowing you to see a\npersonalized feed of their involvement in various projects and interactions with\nother users.\n\nIf you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\nIt looks up users' public events. Username should be your own nickname because you can usually only see your own events.","tags":["Github"]},{"method":"patch","path":"/connector/github/users/get-organizations","name":"connector_github_users_get_organizations_getUserOrganizations","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organizations for a user\n\nLook up the user's organization list, but since you can't look up the user's private organization here,\nyou can't really conclude that there isn't an empty array.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-events","name":"connector_github_get_events_getEvents","parameters":[{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":[],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"id"},"type":{"type":"string","enum":["CommitCommentEvent","CreateEvent","DeleteEvent","ForkEvent","GollumEvent","IssueCommentEvent","IssuesEvent","MemberEvent","PublicEvent","PullRequestEvent","PullRequestReviewEvent","PullRequestReviewCommentEvent","PullRequestReviewThreadEvent","PushEvent","ReleaseEvent","SponsorshipEvent","WatchEvent"],"nullable":true},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"name":{"type":"string","title":"name"},"id":{"type":"number","title":"id"}},"required":["name","id"],"additionalProperties":false},"org":{"type":"object","properties":{"login":{"type":"string","title":"login"},"id":{"type":"number","title":"id"},"display_login":{"type":"string","title":"display_login"}},"required":["login","id"],"additionalProperties":false},"payload":{"type":"object","properties":{"action":{"type":"string","title":"action","description":"It means what this event means.\nAlthough the type of event usually has a resource or the name of the event,\nit is necessary to view it with this property because it does not specify what actions occurred in that event are modified, deleted, created, etc."},"issue":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"comment":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"pages":{"type":"array","items":{"type":"object","properties":{"page_name":{"type":"string","title":"page_name"},"title":{"type":"string","title":"title"},"summary":{"type":"string","nullable":true},"action":{"type":"string","title":"action"},"sha":{"type":"string","title":"sha"},"html_url":{"type":"string","title":"html_url"}},"required":[],"additionalProperties":false},"title":"pages"}},"required":["id","user","created_at","updated_at"],"additionalProperties":false}},"required":[],"additionalProperties":false},"public":{"type":"boolean","title":"whather is public"},"created_at":{"type":"string","format":"date-time","nullable":true}},"required":["id","type","actor","repo","payload","public","created_at"],"additionalProperties":false},"title":"event"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List public events\n\nThis API is not built to serve real-time use cases. Depending on the time of day, event latency can be anywhere from 30s to 6h.\nWhen I look up the events, they may not be of much value to the user because they are events that occurred on github.\n\nIt's looking up public events, and it's looking at events that occur on github regardless of the specific user.\nTherefore, it may not be of much use unless it is a special case.\nIf you want to get your information, it would be more advantageous to use the 'user/get-events' connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-activities","name":"repositories_get_activities_getRepositoryActivities","parameters":[{"type":"object","properties":{"direction":{"type":"string","enum":["desc","asc"]},"before":{"type":"string","title":"before","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["day","week","month","quarter","year"]},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"direction":{"type":"string","enum":["desc","asc"]},"before":{"type":"string","title":"before","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results before this cursor."},"after":{"type":"string","title":"after","description":"A cursor, as given in the Link header.\nIf specified, the query only searches for results after this cursor."},"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"ref\n\nThe name of one of the branches of this repository."},"actor":{"type":"string","title":"username"},"time_period":{"type":"string","enum":["day","week","month","quarter","year"]},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"ref":{"type":"string","x-wrtn-placeholder":"refs/heads/main","title":"ref"},"timestamp":{"type":"string","format":"date-time","title":"timestamp"},"activity_type":{"type":"string","enum":["push","force_push","branch_creation","branch_deletion","pr_merge","merge_queue_merge"]},"actor":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","avatar_url"],"additionalProperties":false}},"required":["id","ref","timestamp","activity_type","actor"],"additionalProperties":false},"title":"result of repository activities"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Get Repository' activities.\n\nGet repository activities\n\nYou can use it to see how active your contribution is to the repository\nbecause it looks up all the activities that have occurred in the repository.\n\nThe types of activities that can be viewed here are as follows, and you can also find out by which user it was operated.\npush, force_push, branch_creation, branch_deletion, pr_merge, merge_queue_merge","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests","name":"connector_github_repositories_pull_requests_createPullRequest","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","head","base","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."}},"required":["owner","repo","head","base"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"id":{"type":"integer","title":"issue id"}},"required":["number","title","id"],"additionalProperties":false},"description":"Create pull request\n\nCreates a pull request from a branch to a particular branch.\nIf the branch has already generated a pull request to the base branch, an error of 422 may occur.\nThis error indicates a collision because only one pull request from branch to another branch can exist open at the same time.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nWhen creating a PR, be sure to specify the base branch and the head branch, and even if it can be omitted, be sure to include Titles and bodies as much as possible.\nYou can also create a pull request in draft state if necessary.\n\nIn order to create PR, you may need to refer to the PULL_REQUEST_TEMPLATE.md file that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.","tags":["Github"]},{"method":"put","path":"/connector/github/repositories/pull-requests","name":"connector_github_repositories_pull_requests_updatePullRequest","parameters":[{"type":"object","properties":{"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"state":{"type":"string","enum":["open","closed"]},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["pull_number","repo","secretKey","owner"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"state":{"type":"string","enum":["open","closed"]},"base":{"type":"string","title":"base\n\nThe name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},"head":{"type":"string","title":"head\n\nThe name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch."},"title":{"type":"string","title":"title\n\nThe title of the new pull request. Required unless issue is specified."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"body":{"type":"string","title":"body\n\nThe contents of the pull request."},"head_repo":{"type":"string","title":"head_repo\n\nThe name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization."},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify\n\nIndicates whether maintainers can modify the pull request."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether the pull request is a draft. See \"Draft Pull Requests\" in the GitHub Help documentation to learn more."},"issue":{"type":"number","title":"issue\n\nAn issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless title is specified."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["pull_number","repo","owner"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"id":{"type":"integer","title":"issue id"}},"required":["number","title","id"],"additionalProperties":false},"description":"Update pull request\n\nUse to change the title or body of a PR, or draft status or open-close status.\nIt can also be used for overwriting labels or modifying them.\nIt can also be used to close or reopen pull request.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-comments","name":"pull_requests_get_comments_getPullRequestComments","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","user","id","created_at","updated_at"],"additionalProperties":false},"title":"issue comments"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List pull request comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.\n\nThis is actually the same as connector POST '/connector/github/repositories/issues/get-comments'.\nComments and reviews on PR are separate, you can only see comments on this connector.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/comments","name":"pull_requests_comments_createPullRequestComments","parameters":[{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["body","issue_number","owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["body","issue_number","owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","user","id","created_at","updated_at"],"additionalProperties":false},"description":"Create an pull request comment","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-requested-reviewers","name":"readPullRequestRequestedReviewers","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"users":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"title":"requested reviewers"},"teams":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","title":"description"},"name":{"type":"string","title":"name"},"slug":{"type":"string","title":"slug"},"id":{"type":"number","title":"id"},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"},"privacy":{"type":"string","enum":["open","closed"]}},"required":["description","name","slug","id","notification_setting","permission","privacy"],"additionalProperties":false},"title":"team"}},"required":["users","teams"],"additionalProperties":false},"description":"Get all requested reviewers for a pull request.\n\nGet all requested reviewers\n\nGets the users or teams whose review is requested for a pull request.\nOnce a requested reviewer submits a review, they are no longer considered a requested reviewer.\nTheir review will instead be returned by the List reviews for a pull request operation.\n\nThe requested_reviewers are the ones who have been asked to review, but not yet.\nSo when you see someone who has reviewed a PR, if that person is someone who has already finished a review, he/she will be part of the reviewers, not the requested_reviewers.\nTherefore, when you look at a reviewer, you should look at it separately between someone who has not yet reviewed it and one person who has reviewed it, which you should also call other features to see together.\nRefer to connector `:post /connector/github/repositories/pull-requests/get-reviews`.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/requested-reviewers","name":"pull_requests_requested_reviewers_requestReviewers","parameters":[{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{},"description":"Request reviewers for a pull request\n\nRequests reviews for a pull request from a given set of users and/or teams. This endpoint triggers notifications.\nYou can specify a reviewer by the user's name alone, but not by anyone, so use a connector that looks up collaborators first.","tags":["Github"]},{"method":"delete","path":"/connector/github/repositories/pull-requests/requested-reviewers","name":"requested_reviewers_removeRequestedReviewers","parameters":[{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"reviewers","description":"An array of user logins that will be requested."},"team_reviewers":{"type":"array","items":{"type":"string"},"title":"team_reviewers","description":"An array of team slugs that will be requested."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{},"description":"Remove requested reviewers from a pull request.\n\nRemoves review requests from a pull request for a given set of users and/or teams\n\nYou should check the person who has already been requested as a reviewer, i.e., requested_reviewers, and then send out the delete request.\nEven if you don't do that, there will be no error, but it doesn't mean anything if you delete the person who hasn't been requested as a reviewer.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/reviews/get-comments","name":"pull_requests_reviews_get_comments_readReviewComments","parameters":[{"type":"object","properties":{"review_id":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests/get-reviews","jmesPath":"result[].{value:id, label: join('', [user.login, ''s review'])}"},"title":"review_id"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["review_id","owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"review_id":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests/get-reviews","jmesPath":"result[].{value:id, label: join('', [user.login, ''s review'])}"},"title":"review_id"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["review_id","owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"pull_request_review_id":{"type":"integer","title":"pull_request_review_id"},"diff_hunk":{"type":"string","title":"diff_hunk","description":"diff_hunk is a form for representing a change in code in github.\nIt consists of strings, and the first line, based on the new line character,\nhas meta information about the change point between the symbols"},"path":{"type":"string","title":"path"},"position":{"type":"integer","nullable":true},"original_position":{"type":"integer","title":"original_position\n\nOriginal position value, which is the number of rows based on diff_hunk."},"commit_id":{"type":"string","title":"commit_id","description":"The SHA of the commit needing a comment.\nNot using the latest commit SHA may render your comment outdated\nif a subsequent commit modifies the line you specify as the position."},"original_commit_id":{"type":"string","title":"original_commit_id"},"in_reply_to_id":{"type":"integer","title":"in_reply_to_id\n\nIn_reply_to_id is a field used by GitHub's review or comment API that is used to write a reply to a particular review or comment."},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"html_url":{"type":"string","format":"iri","title":"html_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["pull_request_review_id","diff_hunk","path","original_position","commit_id","original_commit_id","user","html_url","author_association","id","created_at","updated_at"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List comments for a pull request review\n\nLists comments for a specific pull request review.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-reviews","name":"repositories_pull_requests_get_reviews_readReviews","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"id"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"body":{"type":"string","title":"body"},"state":{"type":"string","x-wrtn-placeholder":"APPROVED","title":"state"},"html_url":{"type":"string","format":"iri","title":"html_url"},"pull_request_url":{"type":"string","format":"iri","title":"pull_request_url"},"submitted_at":{"type":"string","format":"date-time","title":"submitted_at"},"commit_id":{"type":"string","nullable":true},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]}},"required":["id","user","body","state","html_url","pull_request_url","commit_id","author_association"],"additionalProperties":false},"title":"commit list of this pull request"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List reviews for a pull request\n\nPull Request Reviews are groups of pull request review comments on a pull request, grouped together with a state and optional body comment.\nLists all reviews for a specified pull request. The list of reviews returns in chronological order.\nSince github distinguishes requested_reviewers from those who have already completed the review,\nif you want to see a review for any PR, you should look up both of these connectors.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/pull-requests/reviews","name":"repositories_pull_requests_reviews_reviewPullRequest","parameters":[{"type":"object","properties":{"commit_id":{"type":"string","title":"commit_id","description":"The SHA of the commit that needs a review.\nNot using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the position.\nDefaults to the most recent commit in the pull request when you do not specify a value."},"body":{"type":"string","title":"body","description":"Required when using REQUEST_CHANGES or COMMENT for the event parameter.\nThe body text of the pull request review."},"event":{"type":"string","enum":["APPROVE","REQUEST_CHANGES","COMMENT"]},"comments":{"type":"array","items":{"type":"object","properties":{"line":{"type":"integer","title":"line","description":"The line of the blob in the pull request diff that the comment applies to.\nFor a multi-line comment, the last line of the range that your comment applies to."},"side":{"type":"string","enum":["LEFT","RIGHT"]},"start_line":{"type":"integer","title":"start_line","description":"Required when using multi-line comments unless using in_reply_to.\nThe start_line is the first line in the pull request diff that your\nmulti-line comment applies to. To learn more about multi-line comments,\nsee \"Commenting on a pull request\" in the GitHub Help documentation."},"start_side":{"type":"string","enum":["LEFT","RIGHT"]},"path":{"type":"string","title":"path"},"body":{"type":"string","title":"body"}},"required":["line","side","start_line","start_side","path"],"additionalProperties":false},"title":"comments\n\nUse the following table to specify the location, destination, and contents of the draft review comment."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"commit_id":{"type":"string","title":"commit_id","description":"The SHA of the commit that needs a review.\nNot using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the position.\nDefaults to the most recent commit in the pull request when you do not specify a value."},"body":{"type":"string","title":"body","description":"Required when using REQUEST_CHANGES or COMMENT for the event parameter.\nThe body text of the pull request review."},"event":{"type":"string","enum":["APPROVE","REQUEST_CHANGES","COMMENT"]},"comments":{"type":"array","items":{"type":"object","properties":{"line":{"type":"integer","title":"line","description":"The line of the blob in the pull request diff that the comment applies to.\nFor a multi-line comment, the last line of the range that your comment applies to."},"side":{"type":"string","enum":["LEFT","RIGHT"]},"start_line":{"type":"integer","title":"start_line","description":"Required when using multi-line comments unless using in_reply_to.\nThe start_line is the first line in the pull request diff that your\nmulti-line comment applies to. To learn more about multi-line comments,\nsee \"Commenting on a pull request\" in the GitHub Help documentation."},"start_side":{"type":"string","enum":["LEFT","RIGHT"]},"path":{"type":"string","title":"path"},"body":{"type":"string","title":"body"}},"required":["line","side","start_line","start_side","path"],"additionalProperties":false},"title":"comments\n\nUse the following table to specify the location, destination, and contents of the draft review comment."},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"id"}},"required":["id"],"additionalProperties":false},"description":"Create a review for a pull request\n\nPull request reviews created in the PENDING state are not submitted and therefore do not include the submitted_at property in the response. To create a pending review for a pull request, leave the event parameter blank.\nThe position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-files","name":"pull_requests_get_files_readPullRequestFiles","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List pull requests files\n\nThis is useful to see what files are contained in that PR.\nEach file's patch contains the entire format of the file.\nHowever, if you want to know the changes, you should look up diff, which is implemented with a different connector, so you'd better refer to it.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-commits","name":"pull_requests_get_commits_readPullRequestCommits","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"title":"commit list of this pull request"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List commits on a pull request\n\nLists a maximum of 250 commits for a pull request.\nTo receive a complete commit list for pull requests with more than 250 commits, use the List commits endpoint.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-diff","name":"repositories_pull_requests_get_diff_readPullRequestDiff","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"oneOf":[{"type":"string"},{"type":"object","properties":{"message":{"type":"string","title":"Error Message"},"errors":{"type":"array","items":{"type":"object","properties":{"resource":{"type":"string","enum":["PullRequest"]},"field":{"type":"string","enum":["diff"]},"code":{"type":"string","enum":["too_large"]}},"required":["resource","field","code"],"additionalProperties":false},"minItems":1,"maxItems":1,"title":"error objects"},"status":{"type":"string","title":"error code"}},"required":["message","errors","status"],"additionalProperties":false}]},"description":"Get a diff of pull request.\n\nGet a diff of pull-request info\n\nThis is the same as PR's ability to query files,\nbut the format that this function returns is a string, which is more suitable for identifying changes to each file than viewing each file object,\nand in github, this is called the application/vnd.github.diff format.\nThis helps you see at a glance what codes have disappeared and been added in a form suitable for code review.\n\nIf the user wants to see each PR unit, this connector will be suitable.\n\nIf there are too many changes, the connector can export a 406 error.\nIn this case, it may be difficult to determine each change, but it is recommended to use the List pull requests connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/pull-requests/get-detail","name":"pull_requests_get_detail_readPullRequestDetail","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","pull_number","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"pull_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/get-pull-requests","jmesPath":"pullRequests[].{value:number, label:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/repositories/pull-requests","jmesPath":"pullRequests[].{value:number, label:number}"}}]}},"required":["owner","repo","pull_number"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["open","closed"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"head":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"head branch info","additionalProperties":false},"base":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"base branch info","additionalProperties":false},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"draft":{"type":"boolean","title":"draft\n\nIndicates whether or not the pull request is a draft."},"requested_reviewers":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"title":"requested_reviewers"},"requested_teams":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"slug":{"type":"string","title":"slug"},"description":{"type":"string","title":"description"},"privacy":{"type":"string","enum":["open","closed"]},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"}},"required":[],"description":"Make all properties in T optional\n\n------------------------------\n\nDescription of the current {@link PartialIGithub.Team} type:\n\n> Make all properties in T optional","additionalProperties":false},"title":"requested_teams"},"auto_merge":{"title":"auto_merge"},"merged":{"type":"boolean","title":"merged"},"mergeable":{"type":"boolean","nullable":true},"rebaseable":{"type":"boolean","nullable":true},"mergeable_state":{"type":"string","title":"mergeable_state"},"merged_by":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false,"nullable":true},"maintainer_can_modify":{"type":"boolean","title":"maintainer_can_modify"},"comments":{"type":"integer","minimum":0,"title":"comments"},"review_comments":{"type":"integer","minimum":0,"title":"review_comments"},"commits":{"type":"integer","minimum":0,"title":"commits"},"additions":{"type":"integer","minimum":0,"title":"additions"},"deletions":{"type":"integer","minimum":0,"title":"deletions"},"changed_files":{"type":"integer","minimum":0,"title":"changed_files"},"locked":{"type":"boolean","title":"locked"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","nullable":true},"merged_at":{"type":"string","format":"date-time","nullable":true},"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["number","milestone","head","base","author_association","requested_reviewers","requested_teams","auto_merge","mergeable","rebaseable","mergeable_state","merged_by","maintainer_can_modify","comments","review_comments","commits","additions","deletions","changed_files","locked","created_at","updated_at","closed_at","merged_at","id","html_url","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Get a pull request.\n\nGet a deatiled pull-request info\n\nYou can view detailed PR information using the PR number.\nHere, you can see the branch to be merged and the information on the branch it points to, and you can see information such as the status of the PR, the time of each state, and the person who created the PR.\nHowever, it should be used with other connectors because it provides information close to the header of PR and does not provide information about each file or commit of PR.\n\nIf the user wants to see each PR unit, this connector will be suitable.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-pull-requests","name":"repositories_get_pull_requests_getRepositoryPullRequest","parameters":[{"type":"object","properties":{"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"after":{"type":"string","title":"after\ncursor of next page"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"direction":{"type":"string","enum":["ASC","DESC"]}},"required":["sort","repo","secretKey","owner","direction"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"after":{"type":"string","title":"after\ncursor of next page"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"direction":{"type":"string","enum":["ASC","DESC"]}},"required":["sort","repo","owner","direction"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"pullRequests":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"issue id"},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"number":{"type":"integer","title":"number of pull request"},"title":{"type":"string","title":"Pull request title"},"comments":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of comments"}},"required":["totalCount"],"title":"comments","additionalProperties":false},"reviews":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total counr of reviews"}},"required":["totalCount"],"title":"reviews","additionalProperties":false},"reactions":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of reactions"}},"required":["totalCount"],"title":"reactions","additionalProperties":false},"labels":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","nullable":true},"name":{"type":"string","title":"label name"}},"required":["description","name"],"additionalProperties":false}}},"required":["nodes"],"title":"labels","additionalProperties":false},"assignees":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"assignees","additionalProperties":false},"author":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"createdAt":{"type":"string","format":"date-time","title":"createdAt"},"updatedAt":{"type":"string","format":"date-time","title":"updatedAt"}},"required":["id","number","title","comments","reviews","reactions","labels","assignees","author","createdAt","updatedAt"],"additionalProperties":false},"title":"Pull Requests"},"pageInfo":{"type":"object","properties":{"endCursor":{"type":"string","title":"Cursor to be used to look up the next page"},"hasNextPage":{"type":"boolean","title":"hasNextPage\n\ntrue if there is a next page"}},"required":["hasNextPage"],"title":"page info","additionalProperties":false}},"required":["pullRequests","pageInfo"],"additionalProperties":false},"description":"Get Repository' pull request.\n\nList repository pull requests\n\nQuery pool requests to specific repositories.\nHere, you can filter issues and see only pool requests, and you can sort them by creation and inquiry dates, or filter by open or closed status.\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/pull-requests/get-detail' connector must be called.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/issues/get-detail","name":"connector_github_repositories_issues_get_detail_getIssueDetail","parameters":[{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["issue_number","owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["issue_number","owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["open","closed"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"reactions":{"type":"object","properties":{"total_count":{"type":"integer","title":"total_count"},"+1":{"type":"integer","title":"\"+1\""},"-1":{"type":"integer","title":"\"-1\""},"laugh":{"type":"integer","title":"laugh"},"hooray":{"type":"integer","title":"hooray"},"confused":{"type":"integer","title":"confused"},"heart":{"type":"integer","title":"heart"},"rocket":{"type":"integer","title":"rocket"},"eyes":{"type":"integer","title":"eyes"}},"required":["total_count","+1","-1","laugh","hooray","confused","heart","rocket","eyes"],"title":"reactions","additionalProperties":false},"closed_by":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false,"nullable":true},"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["milestone","reactions","id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Get a issue.\n\nGet a deatiled issue info\n\nUnlike the body omitted from the issue list inquiry, it is suitable for viewing details as it can inquire all the contents.\nHowever, this connector alone cannot see all the comments or timelines inside, and other connectors must be used.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/issues/get-comments","name":"github_repositories_issues_get_comments_getIssueComments","parameters":[{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["issue_number","owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["issue_number","owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","user","id","created_at","updated_at"],"additionalProperties":false},"title":"issue comments"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List issue comments\n\nYou can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.\nIn any case, you can also view comments with the number on pull request.\nIssue comments are ordered by ascending ID.","tags":["Github"]},{"method":"post","path":"/connector/github/repositories/issues/comments","name":"github_repositories_issues_comments_createIssueComments","parameters":[{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["body","issue_number","owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"body":{"type":"string","title":"The contents of the comment"},"issue_number":{"type":"integer","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repositories/get-issues","jmesPath":"fetchedIssues[].{value:number, label:title}"},"title":"issue number to get detailed info"},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["body","issue_number","owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"issue_url":{"type":"string","format":"iri","title":"issue_url"},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","type","id","html_url","avatar_url"],"additionalProperties":false},"id":{"type":"integer","title":"id"},"body":{"type":"string","title":"body"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"}},"required":["issue_url","author_association","user","id","created_at","updated_at"],"additionalProperties":false},"description":"Create an issue comment\n\nAdd a comment. If you put an issue number, you can add a comment to the issue, where the issue number is also the number of PR.\nIn other words, both issue and PR can add a comment through this connector.","tags":["Github"]},{"method":"patch","path":"/connector/github/repositories/get-issues","name":"connector_github_repositories_get_issues_getRepositoryIssues","parameters":[{"type":"object","properties":{"after":{"type":"string","title":"after\ncursor of next page"},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"direction":{"type":"string","enum":["ASC","DESC"]},"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT","COMMENTS"]},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["direction","sort","owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"after":{"type":"string","title":"after\ncursor of next page"},"labels":{"type":"array","items":{"type":"string"},"title":"labels","description":"If you want to filter the issue by label, pass the string.\nIf it is an empty array, it is ignored."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"direction":{"type":"string","enum":["ASC","DESC"]},"sort":{"type":"string","enum":["CREATED_AT","UPDATED_AT","COMMENTS"]},"owner":{"type":"string","title":"owner's name","description":"The owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository.\nSo the owner here is the nickname of the repository owner, not the name of the person committing or the author."},"repo":{"type":"string","title":"repository name\n\nThe owner's name and the repository's name can be combined to form '${owner}/${repo}' and can be a unique path name for a single repository."}},"required":["direction","sort","owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"oneOf":[{"type":"object","properties":{"fetchedIssues":{"type":"array","items":{"type":"object","properties":{"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"title":{"type":"string","title":"issue title"},"id":{"type":"string","title":"issue id"},"comments":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of comments"}},"required":["totalCount"],"title":"comments","additionalProperties":false},"author":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"state":{"type":"string","enum":["OPEN","CLOSED","MERGED"]},"labels":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string","nullable":true},"name":{"type":"string","title":"label name"}},"required":["description","name"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"labels","additionalProperties":false},"stateReason":{"type":"string","nullable":true},"reactions":{"type":"object","properties":{"totalCount":{"type":"number","minimum":0,"title":"total count of reactions"}},"required":["totalCount"],"title":"reactions","additionalProperties":false},"assignees":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"title":"nodes"}},"required":["nodes"],"title":"assignees","additionalProperties":false},"createdAt":{"type":"string","format":"date-time","title":"createdAt"},"updatedAt":{"type":"string","format":"date-time","title":"updatedAt"}},"required":["number","title","id","comments","author","labels","reactions","assignees","createdAt","updatedAt"],"additionalProperties":false},"title":"issues"},"pageInfo":{"type":"object","properties":{"endCursor":{"type":"string","title":"Cursor to be used to look up the next page"},"hasNextPage":{"type":"boolean","title":"hasNextPage\n\ntrue if there is a next page"}},"required":["hasNextPage"],"title":"page info","additionalProperties":false}},"required":["fetchedIssues","pageInfo"],"additionalProperties":false},{"type":"object","properties":{"error_message":{"type":"string","title":"Error Message"}},"required":["error_message"],"additionalProperties":false}]},"description":"List repository issues\n\nList issues in a repository.\nThis connector is perfect if you want to see the issue of the repository because it can be viewed without being authenticated.\nInformation on the issue comes out, but only 10 people and labels attached to the issue are provided.\nTherefore, if you want more detailed information, it's a good idea to look at it with a connector that looks at the details of the issue.\nWhen looking up an issue, you can view open and closed issues and sort them by creation time, correction time, comment count, and reaction count.\nFor more information, you should check the properties part of the request type.\n\nThe content of the body is omitted, so if you want to see it, you should use the detailed lookup connector.\nIf the user wants to see the body property, '/connector/github/repositories/issues/get-detail' connector must be called.\nYou do not know who owns the repository, so you must ask the user who owns the repository and fill the owner field of the request interface.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-users","name":"connector_github_get_users_searchUser","parameters":[{"type":"object","properties":{"q":{"type":"string","title":"keyword","description":"The query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["q","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"q":{"type":"string","title":"keyword","description":"The query contains one or more search keywords and qualifiers.\nQualifiers allow you to limit your search to specific areas of GitHub.\nThe REST API supports the same qualifiers as the web interface for GitHub."},"sort":{"type":"string","enum":["followers","repositories","joined"]},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["q"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"type":{"type":"string","enum":["User","Bot","Organization"]},"score":{"type":"number","title":"score"}},"required":["login","id","avatar_url","html_url","type","score"],"additionalProperties":false},"title":"User Search Result Item\n\nUser Search Result Item"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Search for users by keyword in github","tags":["Github"]},{"method":"patch","path":"/connector/github/get-user-profile","name":"connector_github_get_user_profile_getUserProfile","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"username"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"username"}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"name":{"type":"string","nullable":true},"company":{"type":"string","nullable":true},"blog":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"bio":{"type":"string","nullable":true},"twitter_username":{"type":"string","nullable":true},"public_repos":{"type":"integer","title":"count of public repos"},"public_gists":{"type":"integer","title":"count of public gists"},"followers":{"type":"integer","title":"count of followers"},"following":{"type":"integer","title":"count of follwing"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"profile_repository":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."},"private":{"type":"boolean","title":"private"},"html_url":{"type":"string","format":"iri","title":"html_url"},"description":{"type":"string","nullable":true},"fork":{"type":"boolean","title":"fork"},"forks_count":{"type":"integer","title":"forks_count"},"stargazers_count":{"type":"integer","title":"stargazers_count"},"watchers_count":{"type":"integer","title":"watchers_count"},"size":{"type":"number","title":"size"},"default_branch":{"type":"string","title":"default_branch"},"open_issues_count":{"type":"integer","title":"open_issues_count"},"is_template":{"type":"boolean","title":"is_template"},"topics":{"type":"array","items":{"type":"string"},"title":"topics"},"has_issues":{"type":"boolean","title":"has_issues"},"has_projects":{"type":"boolean","title":"has_projects"},"has_wiki":{"type":"boolean","title":"has_wiki"},"has_pages":{"type":"boolean","title":"has_pages"},"has_downloads":{"type":"boolean","title":"has_downloads"},"archived":{"type":"boolean","title":"archived"},"disabled":{"type":"boolean","title":"disabled"},"visibility":{"type":"string","enum":["public","private"]},"pushed_at":{"type":"string","format":"date-time","title":"pushed_at"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"permissions":{"type":"object","properties":{"admin":{"type":"boolean","title":"admin"},"push":{"type":"boolean","title":"push"},"pull":{"type":"boolean","title":"pull"}},"required":["admin","push","pull"],"title":"permissions","additionalProperties":false},"allow_rebase_merge":{"type":"boolean","title":"allow_rebase_merge"},"allow_squash_merge":{"type":"boolean","title":"allow_squash_merge"},"allow_auto_merge":{"type":"boolean","title":"allow_auto_merge"},"delete_branch_on_merge":{"type":"boolean","title":"delete_branch_on_merge"},"allow_merge_commit":{"type":"boolean","title":"allow_merge_commit"},"subscribers_count":{"type":"integer","title":"subscribers_count"},"network_count":{"type":"integer","title":"network_count"},"license":{"type":"object","properties":{"key":{"type":"string","x-wrtn-placeholder":"mit","title":"key"},"name":{"type":"string","x-wrtn-placeholder":"MIT License","title":"name"},"url":{"type":"string","x-wrtn-placeholder":"https://api.github.com/licenses/mit","nullable":true},"spdx_id":{"type":"string","x-wrtn-placeholder":"MIT","title":"spdx_id"}},"required":["key","name","url","spdx_id"],"additionalProperties":false,"nullable":true},"forks":{"type":"integer","title":"forks"},"open_issues":{"type":"integer","title":"open_issues"},"watchers":{"type":"integer","title":"watchers"},"readme":{"type":"object","properties":{"type":{"type":"string","enum":["file"],"title":"type"},"encoding":{"type":"string","x-wrtn-placeholder":"base64","title":"encoding"},"size":{"type":"number","title":"Indicates the file size in bytes"},"name":{"type":"string","title":"name of this file"},"path":{"type":"string","title":"path\n\nIt must be unique as a path for identifying that file in the root folder."},"content":{"type":"string","title":"content"},"sha":{"type":"string","title":"sha"},"url":{"type":"string","title":"url\n\nA link that allows you to view the contents of the file as an Url value for viewing the details of the file."},"download_url":{"type":"string","nullable":true}},"required":["type","encoding","size","name","path","content","sha","url"],"additionalProperties":false,"nullable":true}},"required":["id","name","full_name","private","html_url","description","fork","forks_count","stargazers_count","watchers_count","size","default_branch","open_issues_count","is_template","topics","has_issues","has_projects","has_wiki","has_pages","has_downloads","archived","disabled","visibility","pushed_at","created_at","updated_at","license","forks","open_issues","watchers","readme"],"additionalProperties":false,"nullable":true},"pinned_repositories":{"type":"array","items":{"type":"string"},"title":"pinned_repositories\nIt is a repository where the user puts a pin on his profile, which is usually used to display his or her proud history."},"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["public_repos","public_gists","followers","following","created_at","updated_at","profile_repository","pinned_repositories","login","type","id","avatar_url"],"additionalProperties":false},"description":"Look up the user's detailed profile\n\nThe property information you can find at the time of inquiry is as follows.\n\n- avatar_url, bio, blog, company, created_at, email,\n- followers, following, id, location, login, name,\n- pinned_repositories, profile_repository, public_gists,\n- public_repos, twitter_username, type, updated_at","tags":["Github"]},{"method":"patch","path":"/connector/github/get-organizations","name":"get_organizations_getAuthenticatedUserOrganizations","parameters":[{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":[],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"login":{"type":"string","title":"login"},"display_login":{"type":"string","title":"display_login"},"description":{"type":"string","title":"description"}},"required":["id","login"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List organizations for the authenticated user\n\nInquire the user's repository.\nHere, the user is an authenticated user, which means a user of that token.\nIf a user does not select an organization at login or ask the organization's admin to link it,\nthe resource might not be viewed even if the token scope has permissions.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-branches","name":"connector_github_get_branches_getRepositoryBranches","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"name of Branch"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false}},"required":["name","commit"],"additionalProperties":false},"title":"branches"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the user's branch\n\nYou can look up a list of branches in a specific repository.\nBecause it says what the last commit is, and when and to whom it was made,\nyou can see which of the branches is the latest and managed.\n\nYou shouldn't call the main branch arbitrarily because there may be people who use the master branch.","tags":["Github"]},{"method":"post","path":"/connector/github/branches","name":"connector_github_branches_createBranches","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"ref\nThe name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label: commit.message}"},"title":"sha\nThe SHA1 value for this reference."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","ref","sha","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","title":"ref\nThe name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."},"sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label: commit.message}"},"title":"sha\nThe SHA1 value for this reference."}},"required":["owner","repo","ref","sha"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"ref":{"type":"string","x-wrtn-placeholder":"refs/heads/featureA","title":"ref"},"object":{"type":"object","properties":{"type":{"type":"string","enum":["commit"],"title":"type"},"sha":{"type":"string","title":"sha"}},"required":["type","sha"],"title":"object","additionalProperties":false}},"required":["ref","object"],"additionalProperties":false},"description":"Create branch\n\nCreates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.\nYou need to know the sha of the commit, so if you want to create a branch, you should first call another connector that looks up the commit list or header commitments to find out the sha value.\nIf you want to copy the branch, you should also look up the commit history of the branch and then retrieve the sha value from the branch's HEAD commit.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-pull-requests-associated-with-a-commit","name":"getPullRequestAssociatedWithACommit","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"array","items":{"type":"object","properties":{"number":{"type":"integer","title":"number of this pull request"},"title":{"type":"string","title":"title","description":"title of the issue"},"base":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"base branch info","additionalProperties":false},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"head":{"type":"object","properties":{"label":{"type":"string","title":"label"},"ref":{"type":"string","title":"ref"},"sha":{"type":"string","title":"sha"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"repo":{"type":"object","properties":{"full_name":{"type":"string","title":"full_name\n\nThis is in the form '{username}/{reponame}'."}},"required":["full_name"],"additionalProperties":false,"nullable":true}},"required":["label","ref","sha","user","repo"],"title":"head branch info","additionalProperties":false},"id":{"type":"integer","title":"issue id"},"body":{"type":"string","nullable":true},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"draft":{"type":"boolean","title":"draft\n\nIndicates whether or not the pull request is a draft."},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"milestone":{"type":"object","properties":{"id":{"type":"number","title":"id"},"number":{"type":"number","title":"number"},"state":{"type":"string","enum":["open","closed"]},"title":{"type":"string","title":"title"},"description":{"type":"string","title":"description"},"creator":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"open_issues":{"type":"integer","minimum":0,"title":"open_issues"},"closed_issues":{"type":"integer","minimum":0,"title":"closed_issues"},"created_at":{"type":"string","format":"date-time","title":"created_at"},"updated_at":{"type":"string","format":"date-time","title":"updated_at"},"closed_at":{"type":"string","format":"date-time","title":"closed_at"},"due_on":{"type":"string","format":"date-time","title":"due_on"}},"required":["id","number","state","title","description","creator","open_issues","closed_issues","created_at","updated_at","closed_at","due_on"],"additionalProperties":false,"nullable":true},"author_association":{"type":"string","enum":["COLLABORATOR","CONTRIBUTOR","FIRST_TIMER","FIRST_TIME_CONTRIBUTOR","MANNEQUIN","MEMBER","NONE","OWNER"]},"requested_reviewers":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"title":"requested_reviewers"},"requested_teams":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","title":"id"},"name":{"type":"string","title":"name"},"slug":{"type":"string","title":"slug"},"description":{"type":"string","title":"description"},"privacy":{"type":"string","enum":["open","closed"]},"notification_setting":{"type":"string","title":"notification_setting"},"permission":{"type":"string","title":"permission"}},"required":[],"description":"Make all properties in T optional\n\n------------------------------\n\nDescription of the current {@link PartialIGithub.Team} type:\n\n> Make all properties in T optional","additionalProperties":false},"title":"requested_teams"},"auto_merge":{"title":"auto_merge"},"merged":{"type":"boolean","title":"merged"},"locked":{"type":"boolean","title":"locked"},"closed_at":{"type":"string","format":"date-time","nullable":true},"merged_at":{"type":"string","format":"date-time","nullable":true},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true}},"required":["number","title","base","user","head","id","state","labels","html_url","created_at","updated_at","milestone","author_association","requested_reviewers","requested_teams","auto_merge","locked","closed_at","merged_at","assignee"],"additionalProperties":false}},"description":"get pull requests associated with a commit.\n\nList pull requests associated with a commit\n\nFetches the pull requests (PRs) associated with a specific commit in a GitHub repository.\nThis API endpoint retrieves a list of pull requests that include the specified commit.\nThis can be useful for tracking where and how a particular change was merged into a branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-heads","name":"connector_github_get_commit_heads_getCommitHeads","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label:comment.message}"},"title":"commit_sha\n\nThe SHA of the commit."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","commit_sha","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"commit_sha":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-commit-list","jmesPath":"result[].{value:sha, label:comment.message}"},"title":"commit_sha\n\nThe SHA of the commit."}},"required":["owner","repo","commit_sha"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"files"}},"required":["sha","commit","files"],"additionalProperties":false},"description":"Lists all branches that contain the HEAD commit of a GitHub repository.\n\nThis function utilizes the GitHub API to retrieve a list of branches where the current\nHEAD commit (the latest commit on the checked-out branch) is included. This is useful for\ndetermining which branches contain the most recent changes.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit","name":"connector_github_get_commit_getCommit","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false},"tree":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"url":{"type":"string","format":"iri","title":"url"}},"required":["sha","url"],"title":"tree","additionalProperties":false},"comment_count":{"type":"integer","title":"comment_count"}},"required":["message","url","author","committer","tree","comment_count"],"additionalProperties":false},"html_url":{"type":"string","format":"iri","title":"html_url"},"parents":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this commit"}},"required":["sha"],"additionalProperties":false},"title":"Parents of this commit"},"stats":{"type":"object","properties":{"total":{"type":"integer","title":"sum of additions and deletions"},"additions":{"type":"integer","title":"lines of additions"},"deletions":{"type":"integer","title":"lines of deletions"}},"required":["total","additions","deletions"],"title":"stats","additionalProperties":false},"files":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"hash of this file"},"filename":{"type":"string","title":"filename"},"status":{"type":"string","enum":["added","removed","modified","renamed","copied","changed","unchanged"]},"additions":{"type":"integer","title":"additions"},"deletions":{"type":"integer","title":"deletions"},"changes":{"type":"integer","title":"changes"},"blob_url":{"type":"string","format":"iri","title":"blob_url\n\nThis is the path through which you can view the file through the github website."},"raw_url":{"type":"string","format":"iri","title":"raw_url\n\nThe API path through which the contents of the file can be viewed."},"patch":{"type":"string","title":"patch","description":"It means how much it has changed compared to previous commitments.\nIt gives you a text form to see what code has actually changed."}},"required":["sha","filename","status","additions","deletions","changes","blob_url","raw_url"],"additionalProperties":false},"title":"files\n\nYou can see the changes for each file."}},"required":["sha","commit","html_url","parents","stats","files"],"additionalProperties":false},"description":"Inquire the commit details of the user\nIt contains all the history of how the file changed, so you can see the details of a single commit node.\nIf you do not deliver ref, look up based on default_branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-diff","name":"connector_github_get_commit_diff_getCommitDiff","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"ref":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/get-branches","jmesPath":"result[].{value:name, label:name}"},"title":"commit hash or branch name"}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"string"},"description":"Inquire the commit diff of the user\ndiff is Github's own content type specification that allows you to identify changes per commit on the Github homepage.\nIf you do not deliver ref, look up based on default_branch.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-commit-list","name":"connector_github_get_commit_list_getCommitList","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"sha":{"type":"string","title":"sha\n\nSHA or branch to start listing commits from. Default: the repository’s default branch (usually main)."},"path":{"type":"string","title":"path\n\nOnly commits containing this file path will be returned."},"author":{"type":"string","title":"author\n\nGitHub username or email address to use to filter by commit author."},"committer":{"type":"string","title":"committer\n\nGitHub username or email address to use to filter by commit committer."},"since":{"type":"string","format":"date-time","title":"since\n\nOnly show results that were last updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"until":{"type":"string","format":"date-time","title":"until\n\nOnly commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"sha":{"type":"string","title":"sha"},"commit":{"type":"object","properties":{"message":{"type":"string","title":"commit message"},"url":{"type":"string","format":"iri","title":"uri\n\nuri to look up details of commitment"},"author":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"author","additionalProperties":false},"committer":{"type":"object","properties":{"name":{"type":"string","title":"name"},"email":{"type":"string","title":"email"},"date":{"type":"string","format":"date-time","title":"date"}},"required":["name","email","date"],"title":"committer","additionalProperties":false}},"required":["message","url","author","committer"],"additionalProperties":false}},"required":["sha","commit"],"additionalProperties":false},"title":"commit list"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Look up the list of commitments for a specific repo, a specific branch\n\nThis function can be used in general because it sees the commit list in units of branches, but if the user wants to see it in units of PR, it is better to use another connector.\nIf the user specifies to view in PR units, use other connectors because there are connectors for viewing files, commit lists, and changes in PR units elsewhere.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-followers","name":"connector_github_get_followers_getFollowers","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","id","html_url","avatar_url"],"additionalProperties":false},"title":"followers"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the followers of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-followees","name":"connector_github_get_followees_getFollowees","parameters":[{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["username","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"username":{"type":"string","title":"user's nickname"},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"order":{"type":"string","enum":["desc","asc"]}},"required":["username"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"id":{"type":"number","title":"id\n\nThis means the user's ID."},"html_url":{"type":"string","format":"iri","title":"html_url\n\nIf you want to look up your profile, you can access this website."},"avatar_url":{"type":"string","format":"iri","title":"avatar url\n\nThis means the user's profile image."}},"required":["login","id","html_url","avatar_url"],"additionalProperties":false},"title":"followees"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"Inquire the followees of the user\n\nThis value can be viewed by about 100 people at a time because it is a page-nated result.\nIf you have someone you're looking for, it's important to keep looking for the next page, even if you haven't found the value on the first page.","tags":["Github"]},{"method":"patch","path":"/connector/github/get-labels","name":"connector_github_get_labels_getLabels","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"page":{"type":"integer","default":1,"title":"page","description":"The page number of the results to fetch."},"per_page":{"type":"integer","default":30,"maximum":100,"title":"per_page","description":"The number of results per page (max 100)."}},"required":["owner","repo"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","title":"label name"},"color":{"type":"string","title":"color"},"default":{"type":"boolean","title":"default\n\nTrue if it is not created by the user but automatically created from the beginning."},"description":{"type":"string","nullable":true}},"required":["name","color","default","description"],"additionalProperties":false},"title":"result"},"nextPage":{"type":"boolean","title":"true if there is a next page","description":"However, since true and false are judged by comparing the number of requested objects with the number of searched objects,\neven if true, the next page may be empty."},"after":{"type":"string","title":"after\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the next page."},"before":{"type":"string","title":"before\n\nIf this is the response value for cursor-based pagenation, it provides a hash code for the previous page."},"prev":{"type":"number","nullable":true},"next":{"type":"number","nullable":true},"last":{"type":"number","title":"last","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the last page."},"first":{"type":"number","title":"first","description":"If this is a response by offset-based pagenation, provide metadata for the next page.\nThis means the first page."}},"required":["result","nextPage"],"additionalProperties":false},"description":"List labels for a repository\n\nView a list of issues created and used in that repository.\nEach issue will only have labels that are already registered in this repository.\nOf course, it doesn't necessarily mean that you have to use only the labels here when creating issues,\nbut it would be beneficial to assign them by referring to the labels here.","tags":["Github"]},{"method":"post","path":"/connector/github/issues","name":"connector_github_issues_createIssue","parameters":[{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"title":{"type":"string","title":"tite of this issue"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["owner","repo","title","secretKey"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"owner":{"type":"string","title":"user's nickname"},"repo":{"type":"string","title":"The name of the repository"},"title":{"type":"string","title":"tite of this issue"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"}},"required":["owner","repo","title"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Create an issue.\n\nLeave an issue in the repository\n\nCreate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\n\nIn order to create issue, you may need to refer to the issue template files that you specified in the .github folder in advance, in which case refer to the connector 'POST /connector/github/repos/get-contents'.","tags":["Github"]},{"method":"put","path":"/connector/github/issues","name":"connector_github_issues_updateIssue","parameters":[{"type":"object","properties":{"issue_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"{label:number, value:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"result[].{label:number, value:title}"}}]},"title":{"type":"string","title":"tite of this issue"},"repo":{"type":"string","title":"The name of the repository"},"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."},"owner":{"type":"string","title":"user's nickname"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."}},"required":["issue_number","repo","secretKey","owner"],"additionalProperties":false}],"separated":{"llm":[{"schema":{"type":"object","properties":{"issue_number":{"oneOf":[{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"{label:number, value:title}"}},{"type":"integer","minimum":1,"x-wrtn-prerequisite":{"method":"post","path":"/connector/github/issues","jmesPath":"result[].{label:number, value:title}"}}]},"title":{"type":"string","title":"tite of this issue"},"repo":{"type":"string","title":"The name of the repository"},"owner":{"type":"string","title":"user's nickname"},"body":{"type":"string","title":"body of this issue","description":"It can be markdown format\nIf you provide text in utf-8 format, which can be recognized by a person, in markdown format, it will be written as it is."},"labels":{"type":"array","items":{"type":"string"},"title":"labels"},"assignees":{"type":"array","items":{"type":"string","x-wrtn-prerequisite":{"method":"post","path":"/connector/github/repos/get-collaborators","jmesPath":"result[].{value:login, label:login}"}},"title":"assignees\n\nDeliver the user nickname to be designated as the person in charge in the array."}},"required":["issue_number","repo","owner"],"additionalProperties":false},"index":0}],"human":[{"schema":{"type":"object","properties":{"secretKey":{"type":"string","x-wrtn-secret-key":"github","x-wrtn-secret-scopes":["repo","user","admin:repo_hook","admin:org","gist","notifications","project"],"title":"Select authentication information","description":"secret key."}},"required":["secretKey"],"additionalProperties":false},"index":0}]},"output":{"type":"object","properties":{"id":{"type":"integer","title":"issue id"},"html_url":{"type":"string","format":"iri","title":"html_url","description":"If you want to see the issue or pull_request on the web, you can go to this link.\nIf pull is included on this link path, it is pull_request, and if issue is included, it is issue.\nIn essence, pull_request and issue are numbered together from the beginning, so while this connector does not distinguish the two, it can be distinguished by the url path."},"number":{"type":"integer","title":"issue number\n\nNumber uniquely identifying the issue within its repository"},"state":{"type":"string","title":"state\n\nState of the issue; either 'open' or 'closed'"},"state_reason":{"type":"string","enum":["completed","reopened","not_planned"],"nullable":true},"title":{"type":"string","title":"title","description":"title of the issue"},"user":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."},"type":{"type":"string","enum":["User","Bot","Organization"]},"id":{"type":"number","title":"id\n\nThis means the user's ID."}},"required":["login","type","id"],"additionalProperties":false},"body":{"type":"string","nullable":true},"labels":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"id":{"type":"integer","title":"id"},"url":{"type":"string","format":"iri","title":"url"},"name":{"type":"string","title":"name"},"description":{"type":"string","nullable":true},"color":{"type":"string","nullable":true},"default":{"type":"boolean","title":"default"}},"required":[],"additionalProperties":false}]},"title":"labels\n\nLabels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository"},"assignee":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false,"nullable":true},"assignees":{"type":"array","items":{"type":"object","properties":{"login":{"type":"string","title":"login","description":"This means the user's nickname.\nIn github, nicknames are unique at least until that user changes their own nickname.\nThis means that only one person can own the nickname at a time.\nTherefore, it may be important to know the exact nickname because the github API calls the appi using the user's nickname."}},"required":["login"],"additionalProperties":false},"nullable":true}},"required":["id","html_url","number","state","title","user","labels","assignee"],"additionalProperties":false},"description":"Update an issue in the repository\n\nUpdate an issue, where you can enter labels and assignes together.\nThe information you must enter is who will create the issue in the owner's repository and under what title.\nThe information in the text should follow the markdown grammar allowed by github.\n\nIn some cases, if you are not the owner of this repository, you may not be able to make any marking on issues such as labels, assignees, milestones, etc.\nIt can also be used to close or reopen issues.","tags":["Github"]}],"errors":[],"openapi":"3.0.3"}
