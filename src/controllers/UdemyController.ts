import { Controller } from '@nestjs/common';
import { UdemyProvider } from '../providers/UdemyProvider';
import { TypedRoute, TypedBody } from '@wrtn/connector-api';

@Controller()
export class UdemyController {
  constructor(private readonly udemyProvider: UdemyProvider) { }

  /**
   * Search for courses on Udemy.
   *
   * @summary Search Udemy Courses
   */
  @TypedRoute.Post('search-courses')
  async searchCourses(
    @TypedBody() input: IUdemy.ISearchCoursesInput,
  ): Promise<IUdemy.ISearchCoursesOutput> {
    return this.udemyProvider.searchCourses(input);
  }

  /**
   * Enroll in a Udemy course.
   *
   * @summary Enroll in Udemy Course
   */
  @TypedRoute.Post('enroll-course')
  async enrollCourse(
    @TypedBody() input: IUdemy.IEnrollCourseInput,
  ): Promise<IUdemy.IEnrollCourseOutput> {
    return this.udemyProvider.enrollCourse(input);
  }

  /**
   * Track progress in a Udemy course.
   *
   * @summary Track Udemy Course Progress
   */
  @TypedRoute.Post('track-progress')
  async trackProgress(
    @TypedBody() input: IUdemy.ITrackProgressInput,
  ): Promise<IUdemy.ITrackProgressOutput> {
    return this.udemyProvider.trackProgress(input);
  }
}
