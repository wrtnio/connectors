import { injectable } from '@nestjs/common';
import axios from 'axios';

@injectable()
export class UdemyProvider {
  async searchCourses(input: IUdemy.ISearchCoursesInput): Promise<IUdemy.ISearchCoursesOutput> {
    // Implement API call to Udemy to search for courses
    const response = await axios.get('https://api.udemy.com/courses', {
      params: { search: input.query },
      headers: { Authorization: `Bearer ${input.apiKey}` },
    });
    return response.data;
  }

  async enrollCourse(input: IUdemy.IEnrollCourseInput): Promise<IUdemy.IEnrollCourseOutput> {
    // Implement API call to Udemy to enroll in a course
    const response = await axios.post(`https://api.udemy.com/courses/${input.courseId}/enroll`, {}, {
      headers: { Authorization: `Bearer ${input.apiKey}` },
    });
    return response.data;
  }

  async trackProgress(input: IUdemy.ITrackProgressInput): Promise<IUdemy.ITrackProgressOutput> {
    // Implement API call to Udemy to track course progress
    const response = await axios.get(`https://api.udemy.com/users/me/subscribed-courses/${input.courseId}/progress`, {
      headers: { Authorization: `Bearer ${input.apiKey}` },
    });
    return response.data;
  }
}
